var _=Object.defineProperty;var o=(n,u)=>_(n,"name",{value:u,configurable:true});import{c as k}from"./createLazyWrapper-AC75M60Y.js";import{j as v}from"./jsx-runtime-CGXnEs--.js";import{r}from"./index-DGnhqvo7.js";import{D as E,a as g}from"./Drawer.stories-DcoqZ22i.js";import"./_commonjsHelpers-DRKe4gOT.js";import"./iframe-BTrXp-vY.js";import"../sb-preview/runtime.js";import"./createIsland-fzL0F2Ul.js";import"./bem-DSWMYwqE.js";import"./validations-DJC0TP_C.js";import"./Button-DWTD_PtI.js";import"./Link.server-BZ5NjJWg.js";import"./BaseLink.server-BRG_yKpR.js";import"./Icon-C9pyV2HS.js";import"./Headline-WSn_2Bfj.js";import"./AnimatedText-CKeIoHPo.js";function f({open:n=false,closeOnBackdropClick:u=true,onChange:s,...d},y){const c=r.useRef(null);const m=r.useRef(null);const D=r.useRef(null);const[t,p]=r.useState(()=>n);const l=r.useRef(false);const w=r.useCallback(()=>{c.current=document.activeElement;p(true)},[]);const a=r.useCallback(e=>{var i;p(false);if(!l.current){s==null?void 0:s({},e??"backdropClick")}(i=c.current)==null?void 0:i.focus()},[s]);r.useEffect(()=>{var e;l.current=true;if(n&&!t){c.current=document.activeElement;p(true)}else if(!n&&t){p(false);(e=c.current)==null?void 0:e.focus()}queueMicrotask(()=>{l.current=false})},[n,t]);r.useImperativeHandle(y,()=>({openDrawer:w,closeDrawer:a}),[w,a]);r.useEffect(()=>{var e;if(t){(e=m.current)==null?void 0:e.focus()}},[t]);r.useEffect(()=>{if(!t)return;const e=o(i=>{if(i.key==="Escape"){i.preventDefault();a("escapeKeyDown")}},"handleKey");window.addEventListener("keydown",e);return()=>{window.removeEventListener("keydown",e)}},[t,a]);return v.jsx(E,{...d,closeButtonRef:m,containerRef:D,open:t,backdropProps:{onMouseDown:o(()=>{if(t&&u){a==null?void 0:a("backdropClick")}},"onMouseDown")},onClose:a,onMouseDown:o(e=>e.stopPropagation(),"onMouseDown")})}o(f,"DrawerClient");const R=r.forwardRef(f);try{f.displayName="DrawerClient";f.__docgenInfo={"description":"Client‐side wrapper around DrawerView.\nManages:\n- mounting/unmounting (so we can animate open/close)\n- focus management (trap  restore focus to trigger)\n- ESC‐key handler\n- clicking outside (handled in DrawerView)","displayName":"DrawerClient","props":{}}}catch(n){}const B=k({name:"Drawer",Client:R,Server:g,isInteractive:o(()=>true,"isInteractive")});try{Drawerlazy.displayName="Drawerlazy";Drawerlazy.__docgenInfo={"description":"We wrap DrawerClient/DrawerServer in a LazyWrapper,\nso that on the server we render <DrawerServer>, but\non the client we hydrate into <DrawerClient>.","displayName":"Drawerlazy","props":{}}}catch(n){}export{B as default};
