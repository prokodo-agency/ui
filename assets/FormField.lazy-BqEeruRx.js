var v=Object.defineProperty;var l=(s,d)=>v(s,"name",{value:d,configurable:true});import{c as F}from"./createLazyWrapper-AC75M60Y.js";import{j as u}from"./jsx-runtime-CGXnEs--.js";import{r as q}from"./index-DGnhqvo7.js";import{c as x}from"./bem-DSWMYwqE.js";import{D as w}from"./DynamicList-bG9tUZcW.js";import{I as _}from"./Input-F9tfq25F.js";import{S as j}from"./Select-qYseJ46c.js";import{s as h,b as D}from"./Form.stories-C9f1YNSJ.js";import{G as L}from"./GridRow-BzmiIM3W.js";import{D as T}from"./DatePicker-Di3n3D85.js";import{S}from"./Slider-CBgmR41o.js";import{S as P}from"./Switch-CobzRfDY.js";import"./_commonjsHelpers-DRKe4gOT.js";import"./iframe-BV1xsYLV.js";import"../sb-preview/runtime.js";import"./createIsland-fzL0F2Ul.js";import"./validations-DJC0TP_C.js";import"./Label-BmAeSxLe.js";import"./Button-Dyj-ZuKe.js";import"./Link.server-BZ5NjJWg.js";import"./BaseLink.server-BRG_yKpR.js";import"./Icon-C3A5VhcE.js";import"./Input.view-Dtygztdk.js";import"./List-Q85S-Oxz.js";import"./Card-PXC7S0fy.js";import"./Animated-DL5_QSfD.js";import"./Skeleton-BGZZ4f4u.js";import"./Image-Ck26wVcw.js";import"./Link-C86Tx0-X.js";import"./Headline-BCyK0KL2.js";import"./AnimatedText-x4M0XoDd.js";const V=x(h,"FormField");function I({fieldType:s,visible:d,variant:y,messagesFields:m,onChange:r,onValidate:n,...e}){var c,f,p;const o=q.useCallback(a=>u.jsx(L,{className:V(),xs:12,children:a}),[]);if(d===false)return null;switch(s){case"switch":return o(u.jsx(P,{priority:true,color:y,...e,checked:typeof(e==null?void 0:e.value)==="boolean"?Boolean(e==null?void 0:e.value):e.checked,onChange:l((t,i)=>r==null?void 0:r(e,i),"onChange")}));case"slider":return o(u.jsx(S,{priority:true,...e,onChange:l((t,i)=>r==null?void 0:r(e,i==null?void 0:i.toString()),"onChange")}));case"select":return o(u.jsx(j,{priority:true,...e,onChange:l((t,i)=>r==null?void 0:r(e,i??void 0),"onChange")}));case"input":return o(u.jsx(_,{priority:true,errorTranslations:(c=m==null?void 0:m.errors)==null?void 0:c.input,onValidate:l((t,i)=>n==null?void 0:n(e,i),"onValidate"),onChange:l(t=>r==null?void 0:r(e,t.target.value),"onChange"),...e}));case"date":return o(u.jsx(T,{priority:true,...e,translations:(f=m==null?void 0:m.errors)==null?void 0:f.date,onValidate:l((t,i)=>n==null?void 0:n(e,i),"onValidate"),onChange:l(t=>r==null?void 0:r(e,typeof t==="object"?t==null?void 0:t.format("YYYY-MM-DDTHH:mm:ssZ"):t),"onChange")}));case"dynamic-list":const a=e;return o(u.jsx(w,{priority:true,...a,value:a==null?void 0:a.value,fields:(p=a==null?void 0:a.fields)==null?void 0:p.map(t=>({...t,onValidate:l((i,b)=>n==null?void 0:n(a,b),"onValidate")})),onChange:l(t=>r==null?void 0:r(e,t),"onChange")}));default:return null}}l(I,"FormFieldClient");try{FormFieldclient.displayName="FormFieldclient";FormFieldclient.__docgenInfo={"description":"","displayName":"FormFieldclient","props":{"disabled":{"defaultValue":null,"description":"Disable the switch when true.\nDisable the slider entirely","name":"disabled","required":false,"type":{"name":"boolean"}},"name":{"defaultValue":null,"description":'The ID and name of this switch instance (used for Label htmlFor).\nunique name/id\nPrefix used for each input’s `name` attribute, e.g. `"pages"` → `pages[0].name`',"name":"name","required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"Current value (controlled)\ncurrent Dayjs|null value\nCurrent values (one string per row)\nCurrent values: one object per row, mapping fieldName → string","name":"value","required":false,"type":{"name":"string | boolean | string[] | Record<string, string>[] | (string[] & string) | (string[] & number) | (Record<string, string>[] & string) | (Record<string, string>[] & number) | ... 14 more ..."}},"label":{"defaultValue":null,"description":"The text label displayed next to the switch.\nLabel text (renders above the slider)\nLabel text","name":"label","required":false,"type":{"name":"string"}},"required":{"defaultValue":null,"description":"If true, the label will be marked as required.\nIf true, renders *— Required —* on the label\nrequired flag","name":"required","required":false,"type":{"name":"boolean"}},"labelProps":{"defaultValue":null,"description":"Additional props forwarded to the `<Label>` (e.g. id, style).\nProps forwarded to the Label component","name":"labelProps","required":false,"type":{"name":'LabelProps | Omit<LabelProps, "error" | "label" | "required" | "htmlFor"> | Omit<LabelProps, "label" | "required" | "htmlFor">'}},"errorText":{"defaultValue":null,"description":"Custom error message\nerror text from parent/form","name":"errorText","required":false,"type":{"name":"string"}},"helperText":{"defaultValue":null,"description":"Custom helper message\nhelper/hint text","name":"helperText","required":false,"type":{"name":"string"}},"fieldType":{"defaultValue":null,"description":"","name":"fieldType","required":false,"type":{"name":"enum","value":[{"value":'"slider"'},{"value":'"switch"'},{"value":'"date"'},{"value":'"input"'},{"value":'"select"'},{"value":'"dynamic-list"'}]}},"visible":{"defaultValue":null,"description":"","name":"visible","required":false,"type":{"name":"boolean"}},"conditions":{"defaultValue":null,"description":"","name":"conditions","required":false,"type":{"name":"FormFieldCondition[]"}},"variant":{"defaultValue":null,"description":"","name":"variant","required":false,"type":{"name":"enum","value":[{"value":'"inherit"'},{"value":'"primary"'},{"value":'"secondary"'},{"value":'"success"'},{"value":'"error"'},{"value":'"info"'},{"value":'"warning"'}]}},"messagesFields":{"defaultValue":null,"description":"","name":"messagesFields","required":false,"type":{"name":"FormFieldMessages"}},"onChange":{"defaultValue":null,"description":"","name":"onChange","required":false,"type":{"name":"((field: FormField, value?: FormFieldValue) => void)"}},"onValidate":{"defaultValue":null,"description":"","name":"onValidate","required":false,"type":{"name":"((field: FormField, err?: string) => void)"}}}}}catch(s){}const se=F({name:"FormField",Client:I,Server:D});export{se as default};
