var v=Object.defineProperty;var r=(a,e)=>v(a,"name",{value:e,configurable:true});import{c as b}from"./createLazyWrapper-AC75M60Y.js";import{j as h}from"./jsx-runtime-CGXnEs--.js";import{r as n}from"./index-DGnhqvo7.js";import{P as V,a as q}from"./ProgressBar.stories-Ck3HtAbf.js";import"./_commonjsHelpers-DRKe4gOT.js";import"./iframe-CwYE0-aB.js";import"../sb-preview/runtime.js";import"./createIsland-fzL0F2Ul.js";import"./bem-DSWMYwqE.js";import"./validations-hwxYw-LN.js";function P(a){const{value:e,animated:i=true,...d}=a;const[s,l]=n.useState(e);const t=n.useRef(null);n.useEffect(()=>{if(!i||e===void 0){l(e);return}const o=s??0;const p=e;const c=400;const f=performance.now();const u=r(g=>{const m=Math.min(1,(g-f)/c);const y=o+(p-o)*m;l(y);if(m<1)t.current=requestAnimationFrame(u)},"step");t.current=requestAnimationFrame(u);return()=>cancelAnimationFrame(t.current)},[e,i]);return h.jsx(V,{...d,value:s})}r(P,"ProgressBarClient");try{ProgressBarclient.displayName="ProgressBarclient";ProgressBarclient.__docgenInfo={"description":"Adds a smooth counting animation from the previous value to the next.\nIf `animated` is false, value jumps immediately.","displayName":"ProgressBarclient","props":{"id":{"defaultValue":null,"description":"Unique id, used to generate related DOM ids","name":"id","required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"Current value from 0‑100. If omitted, bar renders in indeterminate mode.","name":"value","required":false,"type":{"name":"number"}},"label":{"defaultValue":null,"description":"Optional label shown below the bar (e.g. “Uploading… 60%”).","name":"label","required":false,"type":{"name":"string"}},"hideLabel":{"defaultValue":null,"description":"Hide the label even when provided.","name":"hideLabel","required":false,"type":{"name":"boolean"}},"variant":{"defaultValue":null,"description":'Visual style variant (maps to CSS vars). Default: "primary".',"name":"variant","required":false,"type":{"name":"ProgressBarVariant"}},"infinity":{"defaultValue":null,"description":"Loads the animation infinity in a loop.","name":"infinity","required":false,"type":{"name":"boolean"}},"animated":{"defaultValue":null,"description":"Adds a pulsing animation on value change.","name":"animated","required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"","name":"className","required":false,"type":{"name":"string"}}}}}catch(a){}const N=b({name:"ProgressBar",Client:P,Server:q,isInteractive:r(()=>true,"isInteractive")});export{N as default};
