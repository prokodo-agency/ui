var y=Object.defineProperty;var n=(e,t)=>y(e,"name",{value:t,configurable:true});function E(e){if(typeof e==="function"){e={highlight:e}}if(!e||typeof e.highlight!=="function"){throw new Error("Must provide highlight function")}if(typeof e.langPrefix!=="string"){e.langPrefix="language-"}if(typeof e.emptyLangClass!=="string"){e.emptyLangClass=""}return{async:!!e.async,walkTokens(t){if(t.type!=="code"){return}const r=g(t.lang);if(e.async){return Promise.resolve(e.highlight(t.text,r,t.lang||"")).then(i(t))}const a=e.highlight(t.text,r,t.lang||"");if(a instanceof Promise){throw new Error("markedHighlight is not set to async but the highlight function is async. Set the async option to true on markedHighlight to await the async highlight function.")}i(t)(a)},useNewRenderer:true,renderer:{code(t,r,a){if(typeof t==="object"){a=t.escaped;r=t.lang;t=t.text}const c=g(r);const s=c?e.langPrefix+f(c):e.emptyLangClass;const p=s?` class="${s}"`:"";t=t.replace(/\n$/,"");return`<pre><code${p}>${a?t:f(t,true)}
</code></pre>`}}}}n(E,"markedHighlight");function g(e){return(e||"").match(/\S*/)[0]}n(g,"getLang");function i(e){return t=>{if(typeof t==="string"&&t!==e.text){e.escaped=true;e.text=t}}}n(i,"updateToken");const u=/[&<>"']/;const x=new RegExp(u.source,"g");const h=/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/;const o=new RegExp(h.source,"g");const w={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};const l=n(e=>w[e],"getEscapeReplacement");function f(e,t){if(t){if(u.test(e)){return e.replace(x,l)}}else{if(h.test(e)){return e.replace(o,l)}}return e}n(f,"escape");export{E as markedHighlight};
