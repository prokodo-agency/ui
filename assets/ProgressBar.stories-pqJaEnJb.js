const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./ProgressBar.lazy-CBLtNYHp.js","./createLazyWrapper-AC75M60Y.js","./jsx-runtime-CGXnEs--.js","./index-DGnhqvo7.js","./_commonjsHelpers-DRKe4gOT.js","./iframe-KGivpBoH.js","./createIsland-fzL0F2Ul.js","./bem-DSWMYwqE.js","./validations-DJC0TP_C.js"])))=>i.map(i=>d[i]);
var V=Object.defineProperty;var r=(e,a)=>V(e,"name",{value:a,configurable:true});import{j as o}from"./jsx-runtime-CGXnEs--.js";import{_ as q}from"./iframe-KGivpBoH.js";import{c as w}from"./createIsland-fzL0F2Ul.js";import{c as x}from"./bem-DSWMYwqE.js";import{a as S}from"./validations-DJC0TP_C.js";const N="gradientShift";const I="indeterminateMove";const M="ProgressBar__bar";const j="gradientMove";const A="fadeInKeyframe";const D={"prokodo-ProgressBar":"prokodo-ProgressBar","prokodo-ProgressBar__track":"prokodo-ProgressBar__track","prokodo-ProgressBar__bar":"prokodo-ProgressBar__bar",gradientShift:N,"prokodo-ProgressBar__bar--primary":"prokodo-ProgressBar__bar--primary","prokodo-ProgressBar__bar--secondary":"prokodo-ProgressBar__bar--secondary","prokodo-ProgressBar__bar--info":"prokodo-ProgressBar__bar--info","prokodo-ProgressBar__bar--success":"prokodo-ProgressBar__bar--success","prokodo-ProgressBar__bar--warning":"prokodo-ProgressBar__bar--warning","prokodo-ProgressBar__bar--error":"prokodo-ProgressBar__bar--error","prokodo-ProgressBar__bar--infinity":"prokodo-ProgressBar__bar--infinity","prokodo-ProgressBar__bar--indeterminate":"prokodo-ProgressBar__bar--indeterminate",indeterminateMove:I,"prokodo-ProgressBar__bar--indeterminate--infinity":"prokodo-ProgressBar__bar--indeterminate--infinity","prokodo-ProgressBar__label":"prokodo-ProgressBar__label","prokodo-ProgressBar--animated":"prokodo-ProgressBar--animated",ProgressBar__bar:M,"ProgressBar__bar--indeterminate":"ProgressBar__bar--indeterminate",gradientMove:j,fadeInKeyframe:A};const d=x(D,"ProgressBar");function m({id:e,value:a,label:i,hideLabel:t,infinity:p,variant:P="primary",animated:B=true,className:k,...h}){const l=typeof a==="number"?Math.min(100,Math.max(0,a)):void 0;const u=l===void 0;return o.jsxs("div",{...h,"aria-valuemax":100,"aria-valuemin":0,"aria-valuenow":l??void 0,className:d(void 0,{animated:B},k),id:e,role:"progressbar",children:[o.jsxs("div",{className:d("track"),children:[" ",o.jsx("div",{style:!u?{width:`${l}%`}:void 0,className:d("bar",{[`${P}`]:true,indeterminate:u,infinity:Boolean(p),"indeterminate--infinity":u&&Boolean(p)})})]}),!Boolean(t)&&S(i)&&o.jsx("span",{className:d("label"),children:i})]})}r(m,"ProgressBarView");try{m.displayName="ProgressBarView";m.__docgenInfo={"description":"","displayName":"ProgressBarView","props":{"id":{"defaultValue":null,"description":"Unique id, used to generate related DOM ids","name":"id","required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"Current value from 0‑100. If omitted, bar renders in indeterminate mode.","name":"value","required":false,"type":{"name":"number"}},"label":{"defaultValue":null,"description":"Optional label shown below the bar (e.g. “Uploading… 60%”).","name":"label","required":false,"type":{"name":"string"}},"hideLabel":{"defaultValue":null,"description":"Hide the label even when provided.","name":"hideLabel","required":false,"type":{"name":"boolean"}},"variant":{"defaultValue":{value:"primary"},"description":'Visual style variant (maps to CSS vars). Default: "primary".',"name":"variant","required":false,"type":{"name":"ProgressBarVariant"}},"infinity":{"defaultValue":null,"description":"Loads the animation infinity in a loop.","name":"infinity","required":false,"type":{"name":"boolean"}},"animated":{"defaultValue":{value:"true"},"description":"Adds a pulsing animation on value change.","name":"animated","required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"","name":"className","required":false,"type":{"name":"string"}}}}}catch(e){}function L(e){return o.jsx(m,{...e})}r(L,"ProgressBarServer");try{ProgressBarserver.displayName="ProgressBarserver";ProgressBarserver.__docgenInfo={"description":"","displayName":"ProgressBarserver","props":{"id":{"defaultValue":null,"description":"Unique id, used to generate related DOM ids","name":"id","required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"Current value from 0‑100. If omitted, bar renders in indeterminate mode.","name":"value","required":false,"type":{"name":"number"}},"label":{"defaultValue":null,"description":"Optional label shown below the bar (e.g. “Uploading… 60%”).","name":"label","required":false,"type":{"name":"string"}},"hideLabel":{"defaultValue":null,"description":"Hide the label even when provided.","name":"hideLabel","required":false,"type":{"name":"boolean"}},"variant":{"defaultValue":null,"description":'Visual style variant (maps to CSS vars). Default: "primary".',"name":"variant","required":false,"type":{"name":"ProgressBarVariant"}},"infinity":{"defaultValue":null,"description":"Loads the animation infinity in a loop.","name":"infinity","required":false,"type":{"name":"boolean"}},"animated":{"defaultValue":null,"description":"Adds a pulsing animation on value change.","name":"animated","required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"","name":"className","required":false,"type":{"name":"string"}}}}}catch(e){}const y=w({name:"ProgressBar",Server:L,loadLazy:r(()=>q(()=>import("./ProgressBar.lazy-CBLtNYHp.js"),true?__vite__mapDeps([0,1,2,3,4,5,6,7,8]):void 0,import.meta.url),"loadLazy"),isInteractive:r(()=>true,"isInteractive")});const O={title:"prokodo/common/ProgressBar",component:y,tags:["autodocs"],argTypes:{variant:{options:["inherit","primary","secondary","success","info","warning","error","white"],control:{type:"select"}}}};const s={args:{id:"example-progress",value:60,label:"Uploading… 60%"}};const n={args:{id:"animated-progress",value:10,label:"Processing…"},render:r((e,{updateArgs:a})=>{const i=r(()=>{a(t=>({...t,value:(t.value??0)+10}))},"increment");setTimeout(i,1e3);return o.jsx(y,{...e})},"render")};var c,g,_;s.parameters={...s.parameters,docs:{...(c=s.parameters)==null?void 0:c.docs,source:{originalSource:'{\n  args: {\n    id: "example-progress",\n    value: 60,\n    label: "Uploading… 60%"\n  }\n}',...(_=(g=s.parameters)==null?void 0:g.docs)==null?void 0:_.source}}};var f,b,v;n.parameters={...n.parameters,docs:{...(f=n.parameters)==null?void 0:f.docs,source:{originalSource:'{\n  args: {\n    id: "animated-progress",\n    value: 10,\n    label: "Processing…"\n  },\n  render: (args, {\n    updateArgs\n  }) => {\n    // simulate progress increase every second\n    const increment = () => {\n      updateArgs(prev => ({\n        ...prev,\n        value: (prev.value ?? 0) + 10\n      }));\n    };\n    setTimeout(increment, 1000);\n    return <ProgressBar {...args} />;\n  }\n}',...(v=(b=n.parameters)==null?void 0:b.docs)==null?void 0:v.source}}};const C=["Default","AnimatedProgress"];const R=Object.freeze(Object.defineProperty({__proto__:null,AnimatedProgress:n,Default:s,__namedExportsOrder:C,default:O},Symbol.toStringTag,{value:"Module"}));export{m as P,L as a,R as b};
