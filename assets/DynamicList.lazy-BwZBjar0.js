var w=Object.defineProperty;var q=(u,f)=>w(u,"name",{value:f,configurable:true});import{c as T}from"./createLazyWrapper-AC75M60Y.js";import{j as _}from"./jsx-runtime-CGXnEs--.js";import{r as c}from"./index-DGnhqvo7.js";import{a as C}from"./validations-DJC0TP_C.js";import{a as h,b as D}from"./DynamicList-bG9tUZcW.js";import"./_commonjsHelpers-DRKe4gOT.js";import"./iframe-BV1xsYLV.js";import"../sb-preview/runtime.js";import"./createIsland-fzL0F2Ul.js";import"./bem-DSWMYwqE.js";import"./Input-F9tfq25F.js";import"./Input.view-Dtygztdk.js";import"./Label-BmAeSxLe.js";import"./Select-qYseJ46c.js";import"./Button-Dyj-ZuKe.js";import"./Link.server-BZ5NjJWg.js";import"./BaseLink.server-BRG_yKpR.js";import"./Icon-C3A5VhcE.js";function N({fields:u,value:f,onChange:e,buttonAddProps:d,buttonDeleteProps:o,...b}){const y=u.length===1;const[s,x]=c.useState(()=>f??[]);c.useEffect(()=>{if(f!==void 0){x(f)}},[f]);const v=c.useCallback(l=>{const a=l.target;const r=Number(a.dataset.index);const t=a.dataset.field;const{value:i}=a;if(Number.isNaN(r)||!C(t))return;const n=s.map((p,m)=>{if(m!==r)return p;return y?i:{...p,[t]:i}});x(n);e==null?void 0:e(n)},[s,e,y]);const V=c.useCallback((l,a,r)=>{const t=Array.isArray(r)?String(r[0]??""):r===null?"":String(r);const i=s.map((n,p)=>{if(p!==l)return n;if(y){return t===""?"":t}const m={...n};if(t===""){delete m[a]}else{m[a]=t}return m});x(i);e==null?void 0:e(i)},[s,e,y]);const L=c.useCallback(l=>{var t;const a=y?"":u.reduce((i,n)=>{i[(n==null?void 0:n.name)??""]="";return i},{});const r=[...s,a];x(r);(t=d==null?void 0:d.onClick)==null?void 0:t.call(d,l);e==null?void 0:e(r)},[s,e,y,u,d]);const k=c.useCallback(l=>{var t;const a=Number(l.currentTarget.dataset.index);if(Number.isNaN(a))return;const r=s.filter((i,n)=>n!==a);x(r);(t=o==null?void 0:o.onClick)==null?void 0:t.call(o,l,a);e==null?void 0:e(r)},[s,e,o]);const S=c.useMemo(()=>(u??[]).map(l=>{if(l.fieldType==="select"){const{...r}=l;const t=q((i,n)=>{var m,g;const p=Number((g=(m=i==null?void 0:i.target)==null?void 0:m.dataset)==null?void 0:g.index);if(!Number.isNaN(p)){V(p,r.name??"",n)}},"onChange2");return{fieldType:"select",...r,onChange:t}}const{...a}=l;return{fieldType:"input",...a,onChange:v}}),[u,v,V]);return _.jsx(h,{...b,fields:S,value:s,buttonAddProps:{...d,onClick:L},buttonDeleteProps:{...o,onClick:k}})}q(N,"DynamicListClient");const E=c.memo(N);try{N.displayName="DynamicListClient";N.__docgenInfo={"description":"","displayName":"DynamicListClient","props":{"id":{"defaultValue":null,"description":"","name":"id","required":false,"type":{"name":"string"}},"name":{"defaultValue":null,"description":'Prefix used for each input’s `name` attribute, e.g. `"pages"` → `pages[0].name`',"name":"name","required":true,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"Optional wrapper CSS class","name":"className","required":false,"type":{"name":"string"}},"classNameList":{"defaultValue":null,"description":"Optional CSS class for each row container","name":"classNameList","required":false,"type":{"name":"string"}},"buttonAddProps":{"defaultValue":null,"description":"Props forwarded to the “Add” button","name":"buttonAddProps","required":false,"type":{"name":"ButtonProps"}},"buttonDeleteProps":{"defaultValue":null,"description":"Props forwarded to each “Delete” button.\nThe `onClick` handler receives the mouse event and the row index.","name":"buttonDeleteProps","required":false,"type":{"name":'(Omit<ButtonProps, "onClick"> & { onClick?: ((e: MouseEvent<HTMLButtonElement, MouseEvent>, index: number) => void); })'}},"disabled":{"defaultValue":null,"description":"","name":"disabled","required":false,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"","name":"label","required":false,"type":{"name":"string"}},"labelProps":{"defaultValue":null,"description":"","name":"labelProps","required":false,"type":{"name":'Omit<LabelProps, "error" | "label" | "required" | "htmlFor">'}},"required":{"defaultValue":null,"description":"","name":"required","required":false,"type":{"name":"boolean"}},"errorText":{"defaultValue":null,"description":"","name":"errorText","required":false,"type":{"name":"string"}},"helperText":{"defaultValue":null,"description":"","name":"helperText","required":false,"type":{"name":"string"}},"fields":{"defaultValue":null,"description":"Exactly one field definition\nTwo or more field definitions","name":"fields","required":true,"type":{"name":"[DynamicListField] | DynamicListField[]"}},"value":{"defaultValue":null,"description":"Current values (one string per row)\nCurrent values: one object per row, mapping fieldName → string","name":"value","required":false,"type":{"name":"string[] | Record<string, string>[]"}},"onChange":{"defaultValue":null,"description":"Callback when the array of values changes\nCallback when the array of objects changes","name":"onChange","required":false,"type":{"name":"((value: string[]) => void) | ((value: Record<string, string>[]) => void)"}}}}}catch(u){}const A=T({name:"DynamicList",Client:E,Server:D});export{A as default};
