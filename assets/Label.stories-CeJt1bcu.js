var h=Object.defineProperty;var a=(r,F)=>h(r,"name",{value:F,configurable:true});import{j as e}from"./jsx-runtime-CGXnEs--.js";import{r as l}from"./index-DGnhqvo7.js";import{L as n}from"./Label-DSHguxSj.js";import"./_commonjsHelpers-DRKe4gOT.js";import"./bem-DSWMYwqE.js";const N={title:"prokodo/form/Label",component:n,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{label:{control:{type:"text"},defaultValue:"First Name"},htmlFor:{control:{type:"text"},description:"ID of the associated form control"},required:{control:{type:"boolean"},defaultValue:false},error:{control:{type:"boolean"},defaultValue:false,description:"When true, applies the `error` modifier to highlight the first word in red"},className:{control:"text"},contentProps:{table:{disable:true}},textProps:{table:{disable:true}},children:{table:{disable:true}}}};const t={render:a(r=>e.jsxs(l.Fragment,{children:[e.jsx(n,{...r}),e.jsx("br",{})]}),"render"),args:{label:"First Name",htmlFor:"first-name",required:false,error:false}};const s={render:a(r=>e.jsx(l.Fragment,{children:e.jsx(n,{...r})}),"render"),args:{label:"Last Name",htmlFor:"last-name",required:true,error:false}};const o={render:a(r=>e.jsx(l.Fragment,{children:e.jsx(n,{...r})}),"render"),args:{label:"Email Address",htmlFor:"email",required:true,error:true}};var m,d,i;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:'{\n  render: args => <Fragment>\n      <Label {...args} />\n      <br />\n    </Fragment>,\n  args: {\n    label: "First Name",\n    htmlFor: "first-name",\n    required: false,\n    error: false\n  }\n}',...(i=(d=t.parameters)==null?void 0:d.docs)==null?void 0:i.source}}};var c,u,p;s.parameters={...s.parameters,docs:{...(c=s.parameters)==null?void 0:c.docs,source:{originalSource:'{\n  render: args => <Fragment>\n      <Label {...args} />\n    </Fragment>,\n  args: {\n    label: "Last Name",\n    htmlFor: "last-name",\n    required: true,\n    error: false\n  }\n}',...(p=(u=s.parameters)==null?void 0:u.docs)==null?void 0:p.source}}};var g,f,b;o.parameters={...o.parameters,docs:{...(g=o.parameters)==null?void 0:g.docs,source:{originalSource:'{\n  render: args => <Fragment>\n      <Label {...args} />\n    </Fragment>,\n  args: {\n    label: "Email Address",\n    htmlFor: "email",\n    required: true,\n    error: true\n  }\n}',...(b=(f=o.parameters)==null?void 0:f.docs)==null?void 0:b.source}}};const S=["Default","Required","ErrorState"];export{t as Default,o as ErrorState,s as Required,S as __namedExportsOrder,N as default};
