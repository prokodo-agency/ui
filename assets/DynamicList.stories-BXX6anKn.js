import{D as h}from"./DynamicList-CjUAJeWc.js";import"./iframe-CWVqMGSv.js";import"../sb-preview/runtime.js";import"./createIsland-fzL0F2Ul.js";import"./jsx-runtime-CGXnEs--.js";import"./index-DGnhqvo7.js";import"./_commonjsHelpers-DRKe4gOT.js";import"./bem-DSWMYwqE.js";import"./validations-DJC0TP_C.js";import"./Input-CHKZ0M4C.js";import"./Input.view-6iX6YDuM.js";import"./Label-DSHguxSj.js";import"./Button-DQU43q_T.js";import"./Link.server-C2t1a3dU.js";import"./BaseLink.server-DMYJ-8yf.js";import"./Icon-DzaSgusb.js";const I={title:"prokodo/form/DynamicList",component:h,parameters:{layout:"centered",docs:{description:{component:"A repeatable list field for forms. Supports one or multiple inputs per row, add/remove buttons, and full control via props."}}},tags:["autodocs"],argTypes:{name:{control:"text",description:"Prefix for each field name"},fields:{table:{disable:true}},value:{table:{disable:true}},onChange:{action:"changed",table:{disable:true}},buttonAddProps:{table:{disable:true}},buttonDeleteProps:{table:{disable:true}},className:{table:{disable:true}},classNameList:{table:{disable:true}}}};const e={args:{name:"values",fields:[{name:"value",label:"Value"}],value:["First item","Second item"]}};const t={args:{name:"pages",fields:[{name:"name",label:"Page Name",placeholder:"e.g. Startseite"},{name:"url",label:"URL",type:"url",placeholder:"https://..."}],value:[{name:"Startseite",url:"https://prokodo.de/"},{name:"Hausbau",url:"https://prokodo.de/"}]}};const a={args:{name:"tags",fields:[{name:"value",label:"Tag"}],value:["react","typescript"],buttonDeleteProps:{iconProps:{name:"AccessIcon"},variant:"text"},buttonAddProps:{title:"Add new access",variant:"text",color:"success"}}};var r,s,n,o,l;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:'{\n  args: {\n    name: "values",\n    fields: [{\n      name: "value",\n      label: "Value"\n    }],\n    value: ["First item", "Second item"]\n  }\n}',...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source},description:{story:"Single‐field list returns string[]",...(l=(o=e.parameters)==null?void 0:o.docs)==null?void 0:l.description}}};var i,p,d,m,c;t.parameters={...t.parameters,docs:{...(i=t.parameters)==null?void 0:i.docs,source:{originalSource:'{\n  args: {\n    name: "pages",\n    fields: [{\n      name: "name",\n      label: "Page Name",\n      placeholder: "e.g. Startseite"\n    }, {\n      name: "url",\n      label: "URL",\n      type: "url",\n      placeholder: "https://..."\n    }],\n    value: [{\n      name: "Startseite",\n      url: "https://prokodo.de/"\n    }, {\n      name: "Hausbau",\n      url: "https://prokodo.de/"\n    }]\n  }\n}',...(d=(p=t.parameters)==null?void 0:p.docs)==null?void 0:d.source},description:{story:"Multi‐field list returns object[]",...(c=(m=t.parameters)==null?void 0:m.docs)==null?void 0:c.description}}};var u,b,g,f,v;a.parameters={...a.parameters,docs:{...(u=a.parameters)==null?void 0:u.docs,source:{originalSource:'{\n  args: {\n    name: "tags",\n    fields: [{\n      name: "value",\n      label: "Tag"\n    }],\n    value: ["react", "typescript"],\n    buttonDeleteProps: {\n      iconProps: {\n        name: "AccessIcon"\n      },\n      variant: "text"\n    },\n    buttonAddProps: {\n      title: "Add new access",\n      variant: "text",\n      color: "success"\n    }\n  }\n}',...(g=(b=a.parameters)==null?void 0:b.docs)==null?void 0:g.source},description:{story:"Custom add/delete button labels",...(v=(f=a.parameters)==null?void 0:f.docs)==null?void 0:v.description}}};const R=["SingleField","MultiField","CustomButtons"];export{a as CustomButtons,t as MultiField,e as SingleField,R as __namedExportsOrder,I as default};
