const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./Drawer.lazy-voQzgWlM.js","./createLazyWrapper-AC75M60Y.js","./jsx-runtime-CGXnEs--.js","./index-DGnhqvo7.js","./_commonjsHelpers-DRKe4gOT.js","./iframe-Ck3Hdaj9.js","./createIsland-fzL0F2Ul.js","./bem-DSWMYwqE.js","./validations-DJC0TP_C.js","./Button-COvAMmjv.js","./Link.server-9OKSc6GU.js","./BaseLink.server-BRG_yKpR.js","./Link-CIi_R5vr.css","./Icon-CfVaRtt-.js","./Icon-D3uyKI51.css","./Button-D0SP5Mnk.css","./Headline-Dp7DSGUe.js","./AnimatedText-Ek8EHe7F.js","./Headline-CAFbOgaV.css"])))=>i.map(i=>d[i]);
var H=Object.defineProperty;var o=(e,a)=>H(e,"name",{value:a,configurable:true});import{j as r}from"./jsx-runtime-CGXnEs--.js";import{r as s}from"./index-DGnhqvo7.js";import{_ as F}from"./iframe-Ck3Hdaj9.js";import{c as E}from"./createIsland-fzL0F2Ul.js";import{c as L}from"./bem-DSWMYwqE.js";import{a as C}from"./validations-DJC0TP_C.js";import{B as p}from"./Button-COvAMmjv.js";import{H as M}from"./Headline-Dp7DSGUe.js";const A="slideInLeft";const K="slideOutLeft";const z="slideInRight";const W="slideOutRight";const J="slideInTop";const X="slideOutTop";const Y="slideInBottom";const $="slideOutBottom";const G="gradientMove";const Q="fadeInKeyframe";const U={"prokodo-Drawer__backdrop":"prokodo-Drawer__backdrop","prokodo-Drawer__backdrop--open":"prokodo-Drawer__backdrop--open","prokodo-Drawer__container":"prokodo-Drawer__container","prokodo-Drawer__container--open":"prokodo-Drawer__container--open","prokodo-Drawer__container--fullscreen":"prokodo-Drawer__container--fullscreen","prokodo-Drawer__container--anchor-left":"prokodo-Drawer__container--anchor-left","prokodo-Drawer__container--anchor-left--open":"prokodo-Drawer__container--anchor-left--open",slideInLeft:A,slideOutLeft:K,"prokodo-Drawer__container--anchor-right":"prokodo-Drawer__container--anchor-right","prokodo-Drawer__container--anchor-right--open":"prokodo-Drawer__container--anchor-right--open",slideInRight:z,slideOutRight:W,"prokodo-Drawer__container--anchor-top":"prokodo-Drawer__container--anchor-top","prokodo-Drawer__container--anchor-top--open":"prokodo-Drawer__container--anchor-top--open",slideInTop:J,slideOutTop:X,"prokodo-Drawer__container--anchor-bottom":"prokodo-Drawer__container--anchor-bottom","prokodo-Drawer__container--anchor-bottom--open":"prokodo-Drawer__container--anchor-bottom--open",slideInBottom:Y,slideOutBottom:$,"prokodo-Drawer__header":"prokodo-Drawer__header","prokodo-Drawer__content":"prokodo-Drawer__content",gradientMove:G,fadeInKeyframe:Q};const w=L(U,"Drawer");const k=o(({open:e,title:a,titleProps:i,anchor:l="left",fullscreen:c=false,renderHeader:n,closeButtonRef:d,closeButtonProps:t,containerRef:j,className:q,containerClassName:T,children:S,onClose:g,backdropProps:N,...P})=>{const _=Boolean(e);return r.jsx("div",{className:w("backdrop",{open:_}),...N,children:r.jsxs("div",{ref:j,"aria-labelledby":C(a)?"drawer-title":void 0,"aria-modal":"true",role:"dialog",className:w("container",{open:_,[`anchor-${l}`]:true,[`anchor-${l}--open`]:_,fullscreen:c},T),...P,children:[r.jsx("div",{className:w("header"),children:n?n():r.jsxs(r.Fragment,{children:[C(a)&&r.jsx(M,{size:"md",...i,id:"drawer-title",children:a}),r.jsx(p,{"aria-label":"Close drawer",iconProps:{name:"Cancel01Icon",size:"sm"},variant:"text",...t,ref:d,onClick:o(()=>g==null?void 0:g("escapeKeyDown"),"onClick")})]})}),r.jsx("div",{className:w("content",void 0,q),children:S})]})})},"DrawerView");try{k.displayName="DrawerView";k.__docgenInfo={"description":"","displayName":"DrawerView","props":{"open":{"defaultValue":null,"description":"If true, initial drawer is open.","name":"open","required":false,"type":{"name":"boolean"}},"onClose":{"defaultValue":null,"description":"","name":"onClose","required":false,"type":{"name":'((reason: "backdropClick" | "escapeKeyDown") => void)'}},"closeButtonRef":{"defaultValue":null,"description":"","name":"closeButtonRef","required":false,"type":{"name":"RefObject<HTMLButtonElement | null>"}},"containerRef":{"defaultValue":null,"description":"","name":"containerRef","required":false,"type":{"name":"RefObject<HTMLDivElement | null>"}},"backdropProps":{"defaultValue":null,"description":"","name":"backdropProps","required":false,"type":{"name":"HTMLAttributes<HTMLDivElement>"}},"onMouseDown":{"defaultValue":null,"description":"","name":"onMouseDown","required":false,"type":{"name":"MouseEventHandler<HTMLDivElement>"}},"ref":{"defaultValue":null,"description":"Imperative ref to open/close.","name":"ref","required":false,"type":{"name":"Ref<DrawerRef>"}},"title":{"defaultValue":null,"description":"A heading/title for the drawer (optional).\nIf provided, View will render it with an <h2> via Headline.","name":"title","required":false,"type":{"name":"string"}},"titleProps":{"defaultValue":null,"description":"","name":"titleProps","required":false,"type":{"name":"HeadlineProps"}},"fullscreen":{"defaultValue":{value:"false"},"description":"If true, drawer takes full screen (height or width depending on anchor).","name":"fullscreen","required":false,"type":{"name":"boolean"}},"anchor":{"defaultValue":{value:"left"},"description":'Which edge to anchor the drawer on.\nDefaults to "left".',"name":"anchor","required":false,"type":{"name":"enum","value":[{"value":'"left"'},{"value":'"right"'},{"value":'"top"'},{"value":'"bottom"'}]}},"closeOnBackdropClick":{"defaultValue":null,"description":"Control whether clicking on the backdrop closes the drawer.\nDefaults to true.","name":"closeOnBackdropClick","required":false,"type":{"name":"boolean"}},"closeButtonProps":{"defaultValue":null,"description":"Option overwrittes for the close button","name":"closeButtonProps","required":false,"type":{"name":"ButtonProps"}},"onChange":{"defaultValue":null,"description":"Callback when open‐state changes. Receives (event, reason).","name":"onChange","required":false,"type":{"name":"((event: unknown, reason: DrawerChangeReason) => void)"}},"renderHeader":{"defaultValue":null,"description":"Optional custom header component. If omitted, View renders a simple\nH2 + close‐button if `title` is provided.","name":"renderHeader","required":false,"type":{"name":"(() => ReactNode)"}},"className":{"defaultValue":null,"description":"Extra CSS class for the outermost <div> (backdrop + wrapper).","name":"className","required":false,"type":{"name":"string"}},"containerClassName":{"defaultValue":null,"description":"Extra CSS class for the inner container (sliding panel).","name":"containerClassName","required":false,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"Anything you want rendered inside the drawer body.","name":"children","required":false,"type":{"name":"ReactNode"}}}}}catch(e){}function Z(e){if(Boolean(e==null?void 0:e.open))return null;return r.jsx(k,{...e})}o(Z,"DrawerServer");try{Drawerserver.displayName="Drawerserver";Drawerserver.__docgenInfo={"description":"RSC entry: purely static server render.\nIt will render exactly the same markup (backdrop + container),\nbut no interactive logic (focus‐trap, key events).","displayName":"Drawerserver","props":{"ref":{"defaultValue":null,"description":"Imperative ref to open/close.","name":"ref","required":false,"type":{"name":"Ref<DrawerRef>"}},"open":{"defaultValue":null,"description":"If true, initial drawer is open.","name":"open","required":false,"type":{"name":"boolean"}},"title":{"defaultValue":null,"description":"A heading/title for the drawer (optional).\nIf provided, View will render it with an <h2> via Headline.","name":"title","required":false,"type":{"name":"string"}},"titleProps":{"defaultValue":null,"description":"","name":"titleProps","required":false,"type":{"name":"HeadlineProps"}},"fullscreen":{"defaultValue":null,"description":"If true, drawer takes full screen (height or width depending on anchor).","name":"fullscreen","required":false,"type":{"name":"boolean"}},"anchor":{"defaultValue":null,"description":'Which edge to anchor the drawer on.\nDefaults to "left".',"name":"anchor","required":false,"type":{"name":"enum","value":[{"value":'"left"'},{"value":'"right"'},{"value":'"top"'},{"value":'"bottom"'}]}},"closeOnBackdropClick":{"defaultValue":null,"description":"Control whether clicking on the backdrop closes the drawer.\nDefaults to true.","name":"closeOnBackdropClick","required":false,"type":{"name":"boolean"}},"closeButtonProps":{"defaultValue":null,"description":"Option overwrittes for the close button","name":"closeButtonProps","required":false,"type":{"name":"ButtonProps"}},"onChange":{"defaultValue":null,"description":"Callback when open‐state changes. Receives (event, reason).","name":"onChange","required":false,"type":{"name":"((event: unknown, reason: DrawerChangeReason) => void)"}},"renderHeader":{"defaultValue":null,"description":"Optional custom header component. If omitted, View renders a simple\nH2 + close‐button if `title` is provided.","name":"renderHeader","required":false,"type":{"name":"(() => ReactNode)"}},"className":{"defaultValue":null,"description":"Extra CSS class for the outermost <div> (backdrop + wrapper).","name":"className","required":false,"type":{"name":"string"}},"containerClassName":{"defaultValue":null,"description":"Extra CSS class for the inner container (sliding panel).","name":"containerClassName","required":false,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"Anything you want rendered inside the drawer body.","name":"children","required":false,"type":{"name":"ReactNode"}}}}}catch(e){}const u=E({name:"Drawer",Server:Z,loadLazy:o(()=>F(()=>import("./Drawer.lazy-voQzgWlM.js"),true?__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]):void 0,import.meta.url),"loadLazy")});try{u.displayName="Drawer";u.__docgenInfo={"description":"The “Island” entrypoint.  Consumers import this file:\n\n   import { Drawer } from '@/components/drawer'\n\nand use <Drawer open={...} ...>...</Drawer> in their JSX.","displayName":"Drawer","props":{}}}catch(e){}try{ComponentType.displayName="ComponentType";ComponentType.__docgenInfo={"description":"Represents any user-defined component, either as a function or a class.\n\nSimilar to {@link JSXElementConstructor}, but with extra properties like\n{@link FunctionComponent.defaultProps defaultProps }.","displayName":"ComponentType","props":{}}}catch(e){}const ee={title:"prokodo/common/Drawer",component:u,parameters:{layout:"fullscreen"},tags:["autodocs"],argTypes:{anchor:{control:{type:"inline-radio"},options:["left","right","top","bottom"],defaultValue:"left"},fullscreen:{control:"boolean",defaultValue:false},closeOnBackdropClick:{control:"boolean",defaultValue:true},onChange:{action:"onChange"},open:{control:"boolean"},containerClassName:{control:"text"},className:{control:"text"},renderHeader:{table:{disable:true}},children:{table:{disable:true}}}};const D=o(e=>r.jsx("div",{style:{position:"absolute",left:"50%",top:"50%",transform:"translate(-50%, -50%)"},children:e}),"renderContainer");const re=o(e=>{const a=s.useRef(null);const[i,l]=s.useState(e.open??false);if(e.open!==i){l(Boolean(e.open))}const c=o((n,d)=>{var t;l(false);(t=e.onChange)==null?void 0:t.call(e,n,d)},"handleChange");return r.jsxs(s.Fragment,{children:[D(r.jsx(p,{title:"Open Drawer",onClick:o(()=>{var n;(n=a.current)==null?void 0:n.openDrawer()},"onClick")})),r.jsx(u,{...e,ref:a,open:i,onChange:c,children:r.jsxs("div",{style:{padding:"1rem"},children:[r.jsx("h3",{children:"Drawer Content"}),r.jsx("p",{children:"This is sample content inside the drawer. Adjust “Anchor” and “Fullscreen” controls in the Storybook panel to see different behaviors."}),r.jsx(p,{title:"Close Drawer",onClick:o(()=>{var n;return(n=a.current)==null?void 0:n.closeDrawer()},"onClick")})]})})]})},"DrawerWithRef");const f={args:{open:false,anchor:"left",fullscreen:false,closeOnBackdropClick:true},render:o(e=>r.jsx(re,{...e}),"render")};const h={args:{open:true,anchor:"top",fullscreen:true,closeOnBackdropClick:true},render:o(e=>{const a=s.useRef(null);const[i,l]=s.useState(true);const c=o((n,d)=>{var t;l(false);(t=e.onChange)==null?void 0:t.call(e,n,d)},"handleChange");return r.jsxs(s.Fragment,{children:[D(r.jsx(p,{title:"Toggle Fullscreen Top Drawer",onClick:o(()=>{var n;return(n=a.current)==null?void 0:n.openDrawer()},"onClick")})),r.jsx(u,{...e,ref:a,fullscreen:true,anchor:"top",open:i,onChange:c,children:r.jsxs("div",{style:{padding:"2rem"},children:[r.jsx("h2",{children:"Fullscreen Top Drawer"}),r.jsxs("p",{children:["This drawer is ",r.jsx("code",{children:"fullscreen"})," and anchored at ",r.jsx("code",{children:"top"}),"."]}),r.jsx(p,{title:"Close",onClick:o(()=>{var n;return(n=a.current)==null?void 0:n.closeDrawer()},"onClick")})]})})]})},"render")};const m={args:{open:false,anchor:"right",fullscreen:false,closeOnBackdropClick:false},render:o(e=>{const a=s.useRef(null);const[i,l]=s.useState(false);const c=o((n,d)=>{var t;l(false);(t=e.onChange)==null?void 0:t.call(e,n,d)},"handleChange");return r.jsxs(s.Fragment,{children:[D(r.jsx(p,{title:"Open Right Drawer",onClick:o(()=>{var n;return(n=a.current)==null?void 0:n.openDrawer()},"onClick")})),r.jsx(u,{...e,ref:a,anchor:"right",closeOnBackdropClick:false,fullscreen:false,open:i,onChange:c,children:r.jsxs("div",{style:{padding:"1rem"},children:[r.jsx("h3",{children:"Right Drawer (Backdrop Disabled)"}),r.jsx("p",{children:"You must click the “×” icon or the Close button below to dismiss."}),r.jsx(p,{title:"Close",onClick:o(()=>{var n;return(n=a.current)==null?void 0:n.closeDrawer()},"onClick")})]})})]})},"render")};var y,v,b;f.parameters={...f.parameters,docs:{...(y=f.parameters)==null?void 0:y.docs,source:{originalSource:"{\n  args: {\n    open: false,\n    anchor: 'left',\n    fullscreen: false,\n    closeOnBackdropClick: true\n    // onChange is handled by Storybook’s Actions panel\n  },\n  render: args => <DrawerWithRef {...args} />\n}",...(b=(v=f.parameters)==null?void 0:v.docs)==null?void 0:b.source}}};var R,O,x;h.parameters={...h.parameters,docs:{...(R=h.parameters)==null?void 0:R.docs,source:{originalSource:`{
  args: {
    open: true,
    anchor: 'top',
    fullscreen: true,
    closeOnBackdropClick: true
  },
  render: args => {
    const drawerRef = useRef<DrawerRef | null>(null);
    const [isOpen, setIsOpen] = useState(true);
    const handleChange = (e: unknown, reason: DrawerChangeReason) => {
      setIsOpen(false);
      args.onChange?.(e, reason);
    };
    return <Fragment>
        {renderContainer(<Button title="Toggle Fullscreen Top Drawer" onClick={() => drawerRef.current?.openDrawer()} />)}
        <Drawer {...args} ref={drawerRef} fullscreen anchor="top" open={isOpen} onChange={handleChange}>
          <div style={{
          padding: '2rem'
        }}>
            <h2>Fullscreen Top Drawer</h2>
            <p>
              This drawer is <code>fullscreen</code> and anchored at <code>top</code>.
            </p>
            <Button title="Close" onClick={() => drawerRef.current?.closeDrawer()} />
          </div>
        </Drawer>
      </Fragment>;
  }
}`,...(x=(O=h.parameters)==null?void 0:O.docs)==null?void 0:x.source}}};var V,B,I;m.parameters={...m.parameters,docs:{...(V=m.parameters)==null?void 0:V.docs,source:{originalSource:`{
  args: {
    open: false,
    anchor: 'right',
    fullscreen: false,
    closeOnBackdropClick: false
  },
  render: args => {
    const drawerRef = useRef<DrawerRef | null>(null);
    const [isOpen, setIsOpen] = useState(false);
    const handleChange = (e: unknown, reason: DrawerChangeReason) => {
      setIsOpen(false);
      args.onChange?.(e, reason);
    };
    return <Fragment>
        {renderContainer(<Button title="Open Right Drawer" onClick={() => drawerRef.current?.openDrawer()} />)}
        <Drawer {...args} ref={drawerRef} anchor="right" closeOnBackdropClick={false} fullscreen={false} open={isOpen} onChange={handleChange}>
          <div style={{
          padding: '1rem'
        }}>
            <h3>Right Drawer (Backdrop Disabled)</h3>
            <p>You must click the “×” icon or the Close button below to dismiss.</p>
            <Button title="Close" onClick={() => drawerRef.current?.closeDrawer()} />
          </div>
        </Drawer>
      </Fragment>;
  }
}`,...(I=(B=m.parameters)==null?void 0:B.docs)==null?void 0:I.source}}};const ne=["Default","FullscreenTop","RightDisabledBackdrop"];const ue=Object.freeze(Object.defineProperty({__proto__:null,Default:f,FullscreenTop:h,RightDisabledBackdrop:m,__namedExportsOrder:ne,default:ee},Symbol.toStringTag,{value:"Module"}));export{k as D,Z as a,ue as b};
