const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./DynamicList.lazy-BXB4HcQ3.js","./createLazyWrapper-AC75M60Y.js","./jsx-runtime-CGXnEs--.js","./index-DGnhqvo7.js","./_commonjsHelpers-DRKe4gOT.js","./validations-DJC0TP_C.js","./iframe-CGxrJAU3.js","./createIsland-fzL0F2Ul.js","./bem-DSWMYwqE.js","./Input-BZTNBMML.js","./Input.view-6iX6YDuM.js","./Label-DSHguxSj.js","./Label-CBNHC_9M.css","./Input-CuRaWDZ0.css","./Button-D8RlPxHF.js","./Link.server-C2t1a3dU.js","./BaseLink.server-DMYJ-8yf.js","./Link-CIi_R5vr.css","./Icon-DjNAsH3U.js","./Icon-D3uyKI51.css","./Button-D0SP5Mnk.css"])))=>i.map(i=>d[i]);
var T=Object.defineProperty;var c=(n,i)=>T(n,"name",{value:i,configurable:true});import{_ as C}from"./iframe-CGxrJAU3.js";import{c as I}from"./createIsland-fzL0F2Ul.js";import{j as a}from"./jsx-runtime-CGXnEs--.js";import{c as j}from"./bem-DSWMYwqE.js";import{a as $}from"./validations-DJC0TP_C.js";import{I as O}from"./Input-BZTNBMML.js";import{L as S}from"./Label-DSHguxSj.js";import{B as x}from"./Button-D8RlPxHF.js";const B="gradientMove";const E="fadeInKeyframe";const R={"prokodo-DynamicList":"prokodo-DynamicList","prokodo-DynamicList__list":"prokodo-DynamicList__list","prokodo-DynamicList__list__item":"prokodo-DynamicList__list__item","prokodo-DynamicList__list__item--is-multi":"prokodo-DynamicList__list__item--is-multi","prokodo-DynamicList__field--is-multi":"prokodo-DynamicList__field--is-multi","prokodo-DynamicList__delete__button--is-multi":"prokodo-DynamicList__delete__button--is-multi","prokodo-DynamicList__helperText":"prokodo-DynamicList__helperText","prokodo-DynamicList__helperText__content":"prokodo-DynamicList__helperText__content","prokodo-DynamicList__helperText__content--is-error":"prokodo-DynamicList__helperText__content--is-error",gradientMove:B,fadeInKeyframe:E};const r=j(R,"DynamicList");function g({id:n,label:i,labelProps:t,disabled:v,required:h,className:N,classNameList:k,fields:L,value:w=[],fieldProps:s,buttonAddProps:d,buttonDeleteProps:m,name:u="items",errorText:q,helperText:b}){const l=Boolean(q);const D=Boolean(b);const p=l?`${n}-error`:void 0;const y=D?`${n}-helper`:void 0;const _=L.length===1;const f={"is-multi":!Boolean(_)};return a.jsxs("fieldset",{"aria-describedby":l?p:y,"aria-labelledby":`${u}-legend`,className:r(void 0,void 0,N),children:[$(i)&&a.jsx(S,{...t,"aria-disabled":v,className:r("list-label",void 0,t==null?void 0:t.className),error:l,id:(t==null?void 0:t.id)??`${u}-legend`,label:i,required:h,type:"legend"}),w.map((V,o)=>a.jsxs("ul",{"aria-describedby":p??y,className:r("list",f,k),children:[a.jsx("li",{className:r("list__item"),children:L.map(e=>a.jsx(O,{fullWidth:true,...e,...s,className:r("field",f,e==null?void 0:e.className),"data-field":e==null?void 0:e.name,"data-index":o,disabled:v??(s==null?void 0:s.disabled)??(e==null?void 0:e.disabled),id:`${u}-${o}-${e.name}`,required:h??(s==null?void 0:s.required)??(e==null?void 0:e.required),value:_?V:V[e.name],name:_?`${u}[${o}]`:`${u}[${o}].${e.name}`},e.name))}),a.jsx(x,{"aria-label":`Remove ${i} entry ${o+1}`,color:"error","data-index":o,iconProps:{name:"Delete02Icon"},...m,className:r("delete__button",f,m==null?void 0:m.className)})]},o)),a.jsx(x,{title:"Add item",variant:"outlined",...d,className:r("button",void 0,d==null?void 0:d.className)}),(l||D)&&a.jsx("div",{"aria-live":l?"assertive":"polite",className:r("helperText"),id:p??y,role:l?"alert":void 0,children:a.jsx("span",{className:r("helperText__content",{"is-error":l}),children:q??b})})]})}c(g,"DynamicListView");try{g.displayName="DynamicListView";g.__docgenInfo={"description":"","displayName":"DynamicListView","props":{"className":{"defaultValue":null,"description":"Optional wrapper CSS class","name":"className","required":false,"type":{"name":"string"}},"disabled":{"defaultValue":null,"description":"","name":"disabled","required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"","name":"id","required":false,"type":{"name":"string"}},"label":{"defaultValue":null,"description":"","name":"label","required":false,"type":{"name":"string"}},"name":{"defaultValue":{value:"items"},"description":'Prefix used for each input’s `name` attribute, e.g. `"pages"` → `pages[0].name`',"name":"name","required":false,"type":{"name":"string"}},"value":{"defaultValue":{value:"[]"},"description":"Current values (one string per row)\nCurrent values: one object per row, mapping fieldName → string","name":"value","required":false,"type":{"name":"string[] | Record<string, string>[]"}},"fields":{"defaultValue":null,"description":"Exactly one field definition\nTwo or more field definitions","name":"fields","required":true,"type":{"name":"[InputProps] | InputProps[]"}},"required":{"defaultValue":null,"description":"","name":"required","required":false,"type":{"name":"boolean"}},"labelProps":{"defaultValue":null,"description":"","name":"labelProps","required":false,"type":{"name":'Omit<LabelProps, "error" | "label" | "required" | "htmlFor">'}},"errorText":{"defaultValue":null,"description":"","name":"errorText","required":false,"type":{"name":"string"}},"helperText":{"defaultValue":null,"description":"","name":"helperText","required":false,"type":{"name":"string"}},"classNameList":{"defaultValue":null,"description":"Optional CSS class for each row container","name":"classNameList","required":false,"type":{"name":"string"}},"fieldProps":{"defaultValue":null,"description":"","name":"fieldProps","required":false,"type":{"name":'Omit<InputProps, "type" | "name" | "rows" | "multiline" | "minRows" | "maxRows" | "fieldType">'}},"buttonAddProps":{"defaultValue":null,"description":"","name":"buttonAddProps","required":false,"type":{"name":'Omit<ButtonProps, "title">'}},"buttonDeleteProps":{"defaultValue":null,"description":"","name":"buttonDeleteProps","required":false,"type":{"name":'Omit<ButtonProps, "title">'}},"readOnly":{"defaultValue":null,"description":"","name":"readOnly","required":false,"type":{"name":"boolean"}}}}}catch(n){}function M(n){const{buttonDeleteProps:i,...t}=n;return a.jsx(g,{...t,buttonDeleteProps:{...i,onClick:void 0}})}c(M,"DynamicListServer");try{DynamicListserver.displayName="DynamicListserver";DynamicListserver.__docgenInfo={"description":"","displayName":"DynamicListserver","props":{"id":{"defaultValue":null,"description":"","name":"id","required":false,"type":{"name":"string"}},"name":{"defaultValue":null,"description":'Prefix used for each input’s `name` attribute, e.g. `"pages"` → `pages[0].name`',"name":"name","required":true,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"Optional wrapper CSS class","name":"className","required":false,"type":{"name":"string"}},"classNameList":{"defaultValue":null,"description":"Optional CSS class for each row container","name":"classNameList","required":false,"type":{"name":"string"}},"buttonAddProps":{"defaultValue":null,"description":"Props forwarded to the “Add” button","name":"buttonAddProps","required":false,"type":{"name":"ButtonProps"}},"buttonDeleteProps":{"defaultValue":null,"description":"Props forwarded to each “Delete” button.\nThe `onClick` handler receives the mouse event and the row index.","name":"buttonDeleteProps","required":false,"type":{"name":'(Omit<ButtonProps, "onClick"> & { onClick?: ((e: MouseEvent<HTMLButtonElement, MouseEvent>, index: number) => void); })'}},"disabled":{"defaultValue":null,"description":"","name":"disabled","required":false,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"","name":"label","required":false,"type":{"name":"string"}},"labelProps":{"defaultValue":null,"description":"","name":"labelProps","required":false,"type":{"name":'Omit<LabelProps, "error" | "label" | "required" | "htmlFor">'}},"required":{"defaultValue":null,"description":"","name":"required","required":false,"type":{"name":"boolean"}},"errorText":{"defaultValue":null,"description":"","name":"errorText","required":false,"type":{"name":"string"}},"helperText":{"defaultValue":null,"description":"","name":"helperText","required":false,"type":{"name":"string"}},"fields":{"defaultValue":null,"description":"Exactly one field definition\nTwo or more field definitions","name":"fields","required":true,"type":{"name":"[InputProps] | InputProps[]"}},"value":{"defaultValue":null,"description":"Current values (one string per row)\nCurrent values: one object per row, mapping fieldName → string","name":"value","required":false,"type":{"name":"string[] | Record<string, string>[]"}},"onChange":{"defaultValue":null,"description":"Callback when the array of values changes\nCallback when the array of objects changes","name":"onChange","required":false,"type":{"name":"((value: string[]) => void) | ((value: Record<string, string>[]) => void)"}}}}}catch(n){}const Q=I({name:"DynamicList",Server:M,loadLazy:c(()=>C(()=>import("./DynamicList.lazy-BXB4HcQ3.js"),true?__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]):void 0,import.meta.url),"loadLazy")});export{Q as D,g as a,M as b};
