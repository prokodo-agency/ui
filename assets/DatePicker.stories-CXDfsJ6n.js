var v=Object.defineProperty;var t=(e,a)=>v(e,"name",{value:a,configurable:true});import{j as l}from"./jsx-runtime-CGXnEs--.js";import{D as d,d as o}from"./DatePicker-Dpe3zB8x.js";import{r as h}from"./index-DGnhqvo7.js";import"./iframe-CGxrJAU3.js";import"../sb-preview/runtime.js";import"./createIsland-fzL0F2Ul.js";import"./_commonjsHelpers-DRKe4gOT.js";import"./validations-DJC0TP_C.js";import"./Input.view-6iX6YDuM.js";import"./Label-DSHguxSj.js";import"./bem-DSWMYwqE.js";const A={title:"prokodo/form/DatePicker",component:d,parameters:{layout:"padded",docs:{description:{component:"A native `<input type='date'>` wrapped with Dayjs parsing, validation and floating label."}}},tags:["autodocs"],argTypes:{name:{control:"text",description:"Unique form field name/id",table:{type:{summary:"string"}}},label:{control:"text",description:"Floating label text",table:{type:{summary:"string"}}},required:{control:"boolean",description:"Mark field as required",table:{type:{summary:"boolean"}}},helperText:{control:"text",description:"Helper or hint text",table:{type:{summary:"string"}}},errorText:{control:"text",description:"Error text to display",table:{type:{summary:"string"}}},format:{control:"text",description:"Dayjs parsing format (defaults to YYYY-MM-DD)",table:{type:{summary:"string"}}},minDate:{table:{disable:true}},maxDate:{table:{disable:true}},onChange:{action:"changed",table:{disable:true}},onValidate:{action:"validated",table:{disable:true}}}};const Y=t(e=>l.jsx("div",{style:{position:"absolute",left:"50%",top:"50%",transform:"translate(-50%, -50%)"},children:e}),"renderContainer");const r={render:t(e=>{const[a,s]=h.useState(o());return Y(l.jsx(d,{...e,value:a,onChange:t(i=>s(o(i)),"onChange")}))},"render"),args:{name:"birthday",label:"Birthday",helperText:"Select your birth date",required:false,format:"YYYY-MM-DD"}};const n={render:t(e=>{const[a,s]=h.useState(null);return Y(l.jsx(d,{...e,value:a,onChange:t(i=>s(o(i)),"onChange")}))},"render"),args:{name:"appointment",label:"Appointment Date",helperText:"Between today and 30 days from now",required:true,minDate:o(),maxDate:o().add(30,"day"),format:"YYYY-MM-DD"}};var p,m,u,c,y;r.parameters={...r.parameters,docs:{...(p=r.parameters)==null?void 0:p.docs,source:{originalSource:'{\n  render: args => {\n    const [value, setValue] = useState<Dayjs | null>(dayjs());\n    return renderContainer(<DatePicker {...args} value={value} onChange={value => setValue(dayjs(value))} />);\n  },\n  args: {\n    name: "birthday",\n    label: "Birthday",\n    helperText: "Select your birth date",\n    required: false,\n    format: "YYYY-MM-DD"\n  }\n}',...(u=(m=r.parameters)==null?void 0:m.docs)==null?void 0:u.source},description:{story:"Controlled example: user can pick any date",...(y=(c=r.parameters)==null?void 0:c.docs)==null?void 0:y.description}}};var g,D,b,x,f;n.parameters={...n.parameters,docs:{...(g=n.parameters)==null?void 0:g.docs,source:{originalSource:'{\n  render: args => {\n    const [value, setValue] = useState<Dayjs | null>(null);\n    return renderContainer(<DatePicker {...args} value={value} onChange={value => setValue(dayjs(value))} />);\n  },\n  args: {\n    name: "appointment",\n    label: "Appointment Date",\n    helperText: "Between today and 30 days from now",\n    required: true,\n    minDate: dayjs(),\n    maxDate: dayjs().add(30, "day"),\n    format: "YYYY-MM-DD"\n  }\n}',...(b=(D=n.parameters)==null?void 0:D.docs)==null?void 0:b.source},description:{story:"With min/max range and required",...(f=(x=n.parameters)==null?void 0:x.docs)==null?void 0:f.description}}};const R=["Default","WithRange"];export{r as Default,n as WithRange,R as __namedExportsOrder,A as default};
