var $=Object.defineProperty;var h=(n,e)=>$(n,"name",{value:e,configurable:true});import{j}from"./jsx-runtime-CGXnEs--.js";import{r as m}from"./index-DGnhqvo7.js";import{a as F,c as N}from"./validations-DJC0TP_C.js";import{S as U}from"./Skeleton-BGZZ4f4u.js";import"./_commonjsHelpers-DRKe4gOT.js";import"./bem-DSWMYwqE.js";import"./iframe-BV1xsYLV.js";import"../sb-preview/runtime.js";function G(n,e,t,i){function s(r){return r instanceof t?r:new t(function(o){o(r)})}h(s,"adopt");return new(t||(t=Promise))(function(r,o){function l(a){try{u(i.next(a))}catch(c){o(c)}}h(l,"fulfilled");function d(a){try{u(i["throw"](a))}catch(c){o(c)}}h(d,"rejected");function u(a){a.done?r(a.value):s(a.value).then(l,d)}h(u,"step");u((i=i.apply(n,[])).next())})}h(G,"__awaiter");function K(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n["default"]:n}h(K,"getDefaultExportFromCjs");var O;var A;function T(){if(A)return O;A=1;O=h(function n(e,t){if(e===t)return true;if(e&&t&&typeof e=="object"&&typeof t=="object"){if(e.constructor!==t.constructor)return false;var i,s,r;if(Array.isArray(e)){i=e.length;if(i!=t.length)return false;for(s=i;s--!==0;)if(!n(e[s],t[s]))return false;return true}if(e.constructor===RegExp)return e.source===t.source&&e.flags===t.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===t.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===t.toString();r=Object.keys(e);i=r.length;if(i!==Object.keys(t).length)return false;for(s=i;s--!==0;)if(!Object.prototype.hasOwnProperty.call(t,r[s]))return false;for(s=i;s--!==0;){var o=r[s];if(!n(e[o],t[o]))return false}return true}return e!==e&&t!==t},"equal");return O}h(T,"requireFastDeepEqual");var V=T();var Z=K(V);const D="__googleMapsScriptId";var E;(function(n){n[n["INITIALIZED"]=0]="INITIALIZED";n[n["LOADING"]=1]="LOADING";n[n["SUCCESS"]=2]="SUCCESS";n[n["FAILURE"]=3]="FAILURE"})(E||(E={}));const y=class y{constructor({apiKey:e,authReferrerPolicy:t,channel:i,client:s,id:r=D,language:o,libraries:l=[],mapIds:d,nonce:u,region:a,retries:c=3,url:f="https://maps.googleapis.com/maps/api/js",version:p}){this.callbacks=[];this.done=false;this.loading=false;this.errors=[];this.apiKey=e;this.authReferrerPolicy=t;this.channel=i;this.client=s;this.id=r||D;this.language=o;this.libraries=l;this.mapIds=d;this.nonce=u;this.region=a;this.retries=c;this.url=f;this.version=p;if(y.instance){if(!Z(this.options,y.instance.options)){throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(y.instance.options)}`)}return y.instance}y.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){if(this.errors.length){return E.FAILURE}if(this.done){return E.SUCCESS}if(this.loading){return E.LOADING}return E.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let e=this.url;e+=`?callback=__googleMapsCallback&loading=async`;if(this.apiKey){e+=`&key=${this.apiKey}`}if(this.channel){e+=`&channel=${this.channel}`}if(this.client){e+=`&client=${this.client}`}if(this.libraries.length>0){e+=`&libraries=${this.libraries.join(",")}`}if(this.language){e+=`&language=${this.language}`}if(this.region){e+=`&region=${this.region}`}if(this.version){e+=`&v=${this.version}`}if(this.mapIds){e+=`&map_ids=${this.mapIds.join(",")}`}if(this.authReferrerPolicy){e+=`&auth_referrer_policy=${this.authReferrerPolicy}`}return e}deleteScript(){const e=document.getElementById(this.id);if(e){e.remove()}}load(){return this.loadPromise()}loadPromise(){return new Promise((e,t)=>{this.loadCallback(i=>{if(!i){e(window.google)}else{t(i.error)}})})}importLibrary(e){this.execute();return google.maps.importLibrary(e)}loadCallback(e){this.callbacks.push(e);this.execute()}setScript(){var e,t;if(document.getElementById(this.id)){this.callback();return}const i={key:this.apiKey,channel:this.channel,client:this.client,libraries:this.libraries.length&&this.libraries,v:this.version,mapIds:this.mapIds,language:this.language,region:this.region,authReferrerPolicy:this.authReferrerPolicy};Object.keys(i).forEach(r=>!i[r]&&delete i[r]);if(!((t=(e=window===null||window===void 0?void 0:window.google)===null||e===void 0?void 0:e.maps)===null||t===void 0?void 0:t.importLibrary)){(r=>{let o,l,d,u="The Google Maps JavaScript API",a="google",c="importLibrary",f="__ib__",p=document,g=window;g=g[a]||(g[a]={});const b=g.maps||(g.maps={}),v=new Set,w=new URLSearchParams,x=h(()=>o||(o=new Promise((I,_)=>G(this,void 0,void 0,function*(){var M;yield l=p.createElement("script");l.id=this.id;w.set("libraries",[...v]+"");for(d in r)w.set(d.replace(/[A-Z]/g,L=>"_"+L[0].toLowerCase()),r[d]);w.set("callback",a+".maps."+f);l.src=this.url+`?`+w;b[f]=I;l.onerror=()=>o=_(Error(u+" could not load."));l.nonce=this.nonce||((M=p.querySelector("script[nonce]"))===null||M===void 0?void 0:M.nonce)||"";p.head.append(l)}))),"u");b[c]?console.warn(u+" only loads once. Ignoring:",r):b[c]=(I,..._)=>v.add(I)&&x().then(()=>b[c](I,..._))})(i)}const s=this.libraries.map(r=>this.importLibrary(r));if(!s.length){s.push(this.importLibrary("core"))}Promise.all(s).then(()=>this.callback(),r=>{const o=new ErrorEvent("error",{error:r});this.loadErrorCallback(o)})}reset(){this.deleteScript();this.done=false;this.loading=false;this.errors=[];this.onerrorEvent=null}resetIfRetryingFailed(){if(this.failed){this.reset()}}loadErrorCallback(e){this.errors.push(e);if(this.errors.length<=this.retries){const t=this.errors.length*Math.pow(2,this.errors.length);console.error(`Failed to load Google Maps script, retrying in ${t} ms.`);setTimeout(()=>{this.deleteScript();this.setScript()},t)}else{this.onerrorEvent=e;this.callback()}}callback(){this.done=true;this.loading=false;this.callbacks.forEach(e=>{e(this.onerrorEvent)});this.callbacks=[]}execute(){this.resetIfRetryingFailed();if(this.loading){return}if(this.done){this.callback()}else{if(window.google&&window.google.maps&&window.google.maps.version){console.warn("Google Maps already loaded outside @googlemaps/js-api-loader. This may result in undesirable behavior as options and script parameters may not match.");this.callback();return}this.loading=true;this.setScript()}}};h(y,"Loader");let C=y;const J=h((n,e)=>{const[t,i]=m.useState(false);m.useEffect(()=>{const s=new C({apiKey:n,version:"weekly",libraries:["maps"]});s.importLibrary("marker").then(()=>{i(true)}).catch(r=>{console.error("Error loading Google Maps",r);throw new Error("Error loading Google Map: ",r)})},[n,e]);return t},"useGoogleMaps");const S=m.memo(({apiKey:n,mapId:e,center:t,marker:i,zoom:s=8})=>{const r=m.useRef(null);const o=m.useRef(null);const[l,d]=m.useState(typeof document!=="undefined"?document.documentElement.getAttribute("data-theme")==="dark":false);const u=m.useCallback(()=>{if(!(r==null?void 0:r.current))return;const c={center:t,zoom:s,mapId:F(e)?e:l===true?"c3c70a1ea4c4b0b8":"e5921eca3f70ade2",disableDefaultUI:true,mapTypeControl:false,fullscreenControl:false,streetViewControl:false,zoomControl:true};const f=new google.maps.Map(r.current,c);o.current=f;if(!N(i))return;i.forEach(p=>{var b,v;if(typeof((b=p==null?void 0:p.position)==null?void 0:b.lat)==="number"||typeof((v=p==null?void 0:p.position)==null?void 0:v.lng)==="number")return;const g=document.createElement("img");g.src="/images/prokodo-map-marker.webp";new google.maps.marker.AdvancedMarkerElement({map:f,content:g,...p})})},[l,e,t,i,s]);const a=J(n,l);m.useEffect(()=>{if(!a||o.current)return;u()},[a,u]);m.useEffect(()=>{const c=new MutationObserver(()=>{const f=document.documentElement.getAttribute("data-theme");d(f==="dark");o.current=null;u()});c.observe(document.documentElement,{attributes:true,attributeFilter:["data-theme"]});return()=>c.disconnect()},[u]);if(!a){return j.jsx(U,{height:"500px",width:"100%"})}return j.jsx("div",{ref:r,style:{width:"100%",height:"500px"}})});S.displayName="Map";try{S.displayName="Map";S.__docgenInfo={"description":"","displayName":"Map","props":{"apiKey":{"defaultValue":null,"description":"","name":"apiKey","required":true,"type":{"name":"string"}},"mapId":{"defaultValue":null,"description":"","name":"mapId","required":false,"type":{"name":"string"}},"center":{"defaultValue":null,"description":"","name":"center","required":true,"type":{"name":"MapCenter"}},"marker":{"defaultValue":null,"description":"","name":"marker","required":false,"type":{"name":"MapMarker[]"}},"zoom":{"defaultValue":null,"description":"","name":"zoom","required":false,"type":{"name":"number"}},"heading":{"defaultValue":null,"description":"","name":"heading","required":false,"type":{"name":"number"}},"tilt":{"defaultValue":null,"description":"","name":"tilt","required":false,"type":{"name":"number"}}}}}catch(n){}const re={title:"prokodo/service/Map",component:S,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{}};const k={args:{apiKey:"",center:{lat:48.13913,lng:11.58022},marker:[{position:{lat:48.13913,lng:11.58022}},{position:{lat:48.141904,lng:11.600267}},{position:{lat:48.149234,lng:11.579997}},{position:{lat:48.132052,lng:11.560758}}]}};var R,q,P;k.parameters={...k.parameters,docs:{...(R=k.parameters)==null?void 0:R.docs,source:{originalSource:'{\n  args: {\n    apiKey: "",\n    center: {\n      lat: 48.13913,\n      lng: 11.58022\n    },\n    marker: ([{\n      position: {\n        lat: 48.13913,\n        lng: 11.58022\n      }\n    }, {\n      position: {\n        lat: 48.141904,\n        lng: 11.600267\n      }\n    }, {\n      position: {\n        lat: 48.149234,\n        lng: 11.579997\n      }\n    }, {\n      position: {\n        lat: 48.132052,\n        lng: 11.560758\n      }\n    }] as MapMarker[])\n  }\n}',...(P=(q=k.parameters)==null?void 0:q.docs)==null?void 0:P.source}}};const ie=["Default"];export{k as Default,ie as __namedExportsOrder,re as default};
