var _a=Object.defineProperty;var t=(i,e)=>_a(i,"name",{value:e,configurable:true});import{g as Ea}from"./_commonjsHelpers-DRKe4gOT.js";var Sn;var ft;function ha(){if(ft)return Sn;ft=1;function i(n){if(n instanceof Map){n.clear=n.delete=n.set=function(){throw new Error("map is read-only")}}else if(n instanceof Set){n.add=n.clear=n.delete=function(){throw new Error("set is read-only")}}Object.freeze(n);Object.getOwnPropertyNames(n).forEach(o=>{const f=n[o];const M=typeof f;if((M==="object"||M==="function")&&!Object.isFrozen(f)){i(f)}});return n}t(i,"deepFreeze");const mn=class mn{constructor(o){if(o.data===void 0)o.data={};this.data=o.data;this.isMatchIgnored=false}ignoreMatch(){this.isMatchIgnored=true}};t(mn,"Response");let e=mn;function a(n){return n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}t(a,"escapeHTML");function l(n,...o){const f=Object.create(null);for(const M in n){f[M]=n[M]}o.forEach(function(M){for(const J in M){f[J]=M[J]}});return f}t(l,"inherit$1");const u="</span>";const c=t(n=>{return!!n.scope},"emitsWrappingTags");const g=t((n,{prefix:o})=>{if(n.startsWith("language:")){return n.replace("language:","language-")}if(n.includes(".")){const f=n.split(".");return[`${o}${f.shift()}`,...f.map((M,J)=>`${M}${"_".repeat(J+1)}`)].join(" ")}return`${o}${n}`},"scopeToCSSClass");const fn=class fn{constructor(o,f){this.buffer="";this.classPrefix=f.classPrefix;o.walk(this)}addText(o){this.buffer+=a(o)}openNode(o){if(!c(o))return;const f=g(o.scope,{prefix:this.classPrefix});this.span(f)}closeNode(o){if(!c(o))return;this.buffer+=u}value(){return this.buffer}span(o){this.buffer+=`<span class="${o}">`}};t(fn,"HTMLRenderer");let _=fn;const m=t((n={})=>{const o={children:[]};Object.assign(o,n);return o},"newNode");const nn=class nn{constructor(){this.rootNode=m();this.stack=[this.rootNode]}get top(){return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(o){this.top.children.push(o)}openNode(o){const f=m({scope:o});this.add(f);this.stack.push(f)}closeNode(){if(this.stack.length>1){return this.stack.pop()}return void 0}closeAllNodes(){while(this.closeNode());}toJSON(){return JSON.stringify(this.rootNode,null,4)}walk(o){return this.constructor._walk(o,this.rootNode)}static _walk(o,f){if(typeof f==="string"){o.addText(f)}else if(f.children){o.openNode(f);f.children.forEach(M=>this._walk(o,M));o.closeNode(f)}return o}static _collapse(o){if(typeof o==="string")return;if(!o.children)return;if(o.children.every(f=>typeof f==="string")){o.children=[o.children.join("")]}else{o.children.forEach(f=>{nn._collapse(f)})}}};t(nn,"TokenTree");let s=nn;const _n=class _n extends s{constructor(o){super();this.options=o}addText(o){if(o===""){return}this.add(o)}startScope(o){this.openNode(o)}endScope(){this.closeNode()}__addSublanguage(o,f){const M=o.root;if(f)M.scope=`language:${f}`;this.add(M)}toHTML(){const o=new _(this,this.options);return o.value()}finalize(){this.closeAllNodes();return true}};t(_n,"TokenTreeEmitter");let r=_n;function d(n){if(!n)return null;if(typeof n==="string")return n;return n.source}t(d,"source");function p(n){return y("(?=",n,")")}t(p,"lookahead");function E(n){return y("(?:",n,")*")}t(E,"anyNumberOfTimes");function h(n){return y("(?:",n,")?")}t(h,"optional");function y(...n){const o=n.map(f=>d(f)).join("");return o}t(y,"concat");function v(n){const o=n[n.length-1];if(typeof o==="object"&&o.constructor===Object){n.splice(n.length-1,1);return o}else{return{}}}t(v,"stripOptionsFromArgs");function w(...n){const o=v(n);const f="("+(o.capture?"":"?:")+n.map(M=>d(M)).join("|")+")";return f}t(w,"either");function T(n){return new RegExp(n.toString()+"|").exec("").length-1}t(T,"countMatchGroups");function A(n,o){const f=n&&n.exec(o);return f&&f.index===0}t(A,"startsWith");const $=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;function C(n,{joinWith:o}){let f=0;return n.map(M=>{f+=1;const J=f;let j=d(M);let re="";while(j.length>0){const U=$.exec(j);if(!U){re+=j;break}re+=j.substring(0,U.index);j=j.substring(U.index+U[0].length);if(U[0][0]==="\\"&&U[1]){re+="\\"+String(Number(U[1])+J)}else{re+=U[0];if(U[0]==="("){f++}}}return re}).map(M=>`(${M})`).join(o)}t(C,"_rewriteBackreferences");const B=/\b\B/;const P="[a-zA-Z]\\w*";const k="[a-zA-Z_]\\w*";const D="\\b\\d+(\\.\\d+)?";const K="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)";const H="\\b(0b[01]+)";const ce="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~";const te=t((n={})=>{const o=/^#![ ]*\//;if(n.binary){n.begin=y(o,/.*\b/,n.binary,/\b.*/)}return l({scope:"meta",begin:o,end:/$/,relevance:0,"on:begin":t((f,M)=>{if(f.index!==0)M.ignoreMatch()},"on:begin")},n)},"SHEBANG");const ae={begin:"\\\\[\\s\\S]",relevance:0};const Y={scope:"string",begin:"'",end:"'",illegal:"\\n",contains:[ae]};const V={scope:"string",begin:'"',end:'"',illegal:"\\n",contains:[ae]};const ee={begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/};const le=t(function(n,o,f={}){const M=l({scope:"comment",begin:n,end:o,contains:[]},f);M.contains.push({scope:"doctag",begin:"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:true,relevance:0});const J=w("I","a","is","so","us","to","at","if","in","it","on",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/);M.contains.push({begin:y(/[ ]+/,"(",J,/[.]?[:]?([.][ ]|[ ])/,"){3}")});return M},"COMMENT");const Ce=le("//","$");const Ie=le("/\\*","\\*/");const we=le("#","$");const Ae={scope:"number",begin:D,relevance:0};const De={scope:"number",begin:K,relevance:0};const Ee={scope:"number",begin:H,relevance:0};const he={scope:"regexp",begin:/\/(?=[^/\n]*\/)/,end:/\/[gimuy]*/,contains:[ae,{begin:/\[/,end:/\]/,relevance:0,contains:[ae]}]};const Se={scope:"title",begin:P,relevance:0};const Q={scope:"title",begin:k,relevance:0};const X={begin:"\\.\\s*"+k,relevance:0};const ue=t(function(n){return Object.assign(n,{"on:begin":t((o,f)=>{f.data._beginMatch=o[1]},"on:begin"),"on:end":t((o,f)=>{if(f.data._beginMatch!==o[1])f.ignoreMatch()},"on:end")})},"END_SAME_AS_BEGIN");var ie=Object.freeze({__proto__:null,APOS_STRING_MODE:Y,BACKSLASH_ESCAPE:ae,BINARY_NUMBER_MODE:Ee,BINARY_NUMBER_RE:H,COMMENT:le,C_BLOCK_COMMENT_MODE:Ie,C_LINE_COMMENT_MODE:Ce,C_NUMBER_MODE:De,C_NUMBER_RE:K,END_SAME_AS_BEGIN:ue,HASH_COMMENT_MODE:we,IDENT_RE:P,MATCH_NOTHING_RE:B,METHOD_GUARD:X,NUMBER_MODE:Ae,NUMBER_RE:D,PHRASAL_WORDS_MODE:ee,QUOTE_STRING_MODE:V,REGEXP_MODE:he,RE_STARTERS_RE:ce,SHEBANG:te,TITLE_MODE:Se,UNDERSCORE_IDENT_RE:k,UNDERSCORE_TITLE_MODE:Q});function ge(n,o){const f=n.input[n.index-1];if(f==="."){o.ignoreMatch()}}t(ge,"skipIfHasPrecedingDot");function me(n,o){if(n.className!==void 0){n.scope=n.className;delete n.className}}t(me,"scopeClassName");function Ne(n,o){if(!o)return;if(!n.beginKeywords)return;n.begin="\\b("+n.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)";n.__beforeBegin=ge;n.keywords=n.keywords||n.beginKeywords;delete n.beginKeywords;if(n.relevance===void 0)n.relevance=0}t(Ne,"beginKeywords");function He(n,o){if(!Array.isArray(n.illegal))return;n.illegal=w(...n.illegal)}t(He,"compileIllegal");function cn(n,o){if(!n.match)return;if(n.begin||n.end)throw new Error("begin & end are not supported with match");n.begin=n.match;delete n.match}t(cn,"compileMatch");function Fe(n,o){if(n.relevance===void 0)n.relevance=1}t(Fe,"compileRelevance");const We=t((n,o)=>{if(!n.beforeMatch)return;if(n.starts)throw new Error("beforeMatch cannot be used with starts");const f=Object.assign({},n);Object.keys(n).forEach(M=>{delete n[M]});n.keywords=f.keywords;n.begin=y(f.beforeMatch,p(f.begin));n.starts={relevance:0,contains:[Object.assign(f,{endsParent:true})]};n.relevance=0;delete f.beforeMatch},"beforeMatchExt");const Ze=["of","and","for","in","not","or","if","then","parent","list","value"];const ln="keyword";function Ye(n,o,f=ln){const M=Object.create(null);if(typeof n==="string"){J(f,n.split(" "))}else if(Array.isArray(n)){J(f,n)}else{Object.keys(n).forEach(function(j){Object.assign(M,Ye(n[j],o,j))})}return M;function J(j,re){if(o){re=re.map(U=>U.toLowerCase())}re.forEach(function(U){const R=U.split("|");M[R[0]]=[j,ze(R[0],R[1])]})}t(J,"compileList")}t(Ye,"compileKeywords");function ze(n,o){if(o){return Number(o)}return dn(n)?0:1}t(ze,"scoreForKeyword");function dn(n){return Ze.includes(n.toLowerCase())}t(dn,"commonKeyword");const Xe={};const Te=t(n=>{console.error(n)},"error");const Le=t((n,...o)=>{console.log(`WARN: ${n}`,...o)},"warn");const pe=t((n,o)=>{if(Xe[`${n}/${o}`])return;console.log(`Deprecated as of ${n}. ${o}`);Xe[`${n}/${o}`]=true},"deprecated");const Ue=new Error;function Ve(n,o,{key:f}){let M=0;const J=n[f];const j={};const re={};for(let U=1;U<=o.length;U++){re[U+M]=J[U];j[U+M]=true;M+=T(o[U-1])}n[f]=re;n[f]._emit=j;n[f]._multi=true}t(Ve,"remapScopeNames");function Qe(n){if(!Array.isArray(n.begin))return;if(n.skip||n.excludeBegin||n.returnBegin){Te("skip, excludeBegin, returnBegin not compatible with beginScope: {}");throw Ue}if(typeof n.beginScope!=="object"||n.beginScope===null){Te("beginScope must be object");throw Ue}Ve(n,n.begin,{key:"beginScope"});n.begin=C(n.begin,{joinWith:""})}t(Qe,"beginMultiClass");function $e(n){if(!Array.isArray(n.end))return;if(n.skip||n.excludeEnd||n.returnEnd){Te("skip, excludeEnd, returnEnd not compatible with endScope: {}");throw Ue}if(typeof n.endScope!=="object"||n.endScope===null){Te("endScope must be object");throw Ue}Ve(n,n.end,{key:"endScope"});n.end=C(n.end,{joinWith:""})}t($e,"endMultiClass");function un(n){if(n.scope&&typeof n.scope==="object"&&n.scope!==null){n.beginScope=n.scope;delete n.scope}}t(un,"scopeSugar");function Je(n){un(n);if(typeof n.beginScope==="string"){n.beginScope={_wrap:n.beginScope}}if(typeof n.endScope==="string"){n.endScope={_wrap:n.endScope}}Qe(n);$e(n)}t(Je,"MultiClass");function gn(n){function o(R,z){return new RegExp(d(R),"m"+(n.case_insensitive?"i":"")+(n.unicodeRegex?"u":"")+(z?"g":""))}t(o,"langRe");const re=class re{constructor(){this.matchIndexes={};this.regexes=[];this.matchAt=1;this.position=0}addRule(z,I){I.position=this.position++;this.matchIndexes[this.matchAt]=I;this.regexes.push([I,z]);this.matchAt+=T(z)+1}compile(){if(this.regexes.length===0){this.exec=()=>null}const z=this.regexes.map(I=>I[1]);this.matcherRe=o(C(z,{joinWith:"|"}),true);this.lastIndex=0}exec(z){this.matcherRe.lastIndex=this.lastIndex;const I=this.matcherRe.exec(z);if(!I){return null}const ne=I.findIndex((qe,hn)=>hn>0&&qe!==void 0);const oe=this.matchIndexes[ne];I.splice(0,ne);return Object.assign(I,oe)}};t(re,"MultiRegex");let f=re;const U=class U{constructor(){this.rules=[];this.multiRegexes=[];this.count=0;this.lastIndex=0;this.regexIndex=0}getMatcher(z){if(this.multiRegexes[z])return this.multiRegexes[z];const I=new f;this.rules.slice(z).forEach(([ne,oe])=>I.addRule(ne,oe));I.compile();this.multiRegexes[z]=I;return I}resumingScanAtSamePosition(){return this.regexIndex!==0}considerAll(){this.regexIndex=0}addRule(z,I){this.rules.push([z,I]);if(I.type==="begin")this.count++}exec(z){const I=this.getMatcher(this.regexIndex);I.lastIndex=this.lastIndex;let ne=I.exec(z);if(this.resumingScanAtSamePosition()){if(ne&&ne.index===this.lastIndex);else{const oe=this.getMatcher(0);oe.lastIndex=this.lastIndex+1;ne=oe.exec(z)}}if(ne){this.regexIndex+=ne.position+1;if(this.regexIndex===this.count){this.considerAll()}}return ne}};t(U,"ResumableMultiRegex");let M=U;function J(R){const z=new M;R.contains.forEach(I=>z.addRule(I.begin,{rule:I,type:"begin"}));if(R.terminatorEnd){z.addRule(R.terminatorEnd,{type:"end"})}if(R.illegal){z.addRule(R.illegal,{type:"illegal"})}return z}t(J,"buildModeRegex");function j(R,z){const I=R;if(R.isCompiled)return I;[me,cn,Je,We].forEach(oe=>oe(R,z));n.compilerExtensions.forEach(oe=>oe(R,z));R.__beforeBegin=null;[Ne,He,Fe].forEach(oe=>oe(R,z));R.isCompiled=true;let ne=null;if(typeof R.keywords==="object"&&R.keywords.$pattern){R.keywords=Object.assign({},R.keywords);ne=R.keywords.$pattern;delete R.keywords.$pattern}ne=ne||/\w+/;if(R.keywords){R.keywords=Ye(R.keywords,n.case_insensitive)}I.keywordPatternRe=o(ne,true);if(z){if(!R.begin)R.begin=/\B|\b/;I.beginRe=o(I.begin);if(!R.end&&!R.endsWithParent)R.end=/\B|\b/;if(R.end)I.endRe=o(I.end);I.terminatorEnd=d(I.end)||"";if(R.endsWithParent&&z.terminatorEnd){I.terminatorEnd+=(R.end?"|":"")+z.terminatorEnd}}if(R.illegal)I.illegalRe=o(R.illegal);if(!R.contains)R.contains=[];R.contains=[].concat(...R.contains.map(function(oe){return bn(oe==="self"?R:oe)}));R.contains.forEach(function(oe){j(oe,I)});if(R.starts){j(R.starts,z)}I.matcher=J(I);return I}t(j,"compileMode");if(!n.compilerExtensions)n.compilerExtensions=[];if(n.contains&&n.contains.includes("self")){throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.")}n.classNameAliases=l(n.classNameAliases||{});return j(n)}t(gn,"compileLanguage");function je(n){if(!n)return false;return n.endsWithParent||je(n.starts)}t(je,"dependencyOnParent");function bn(n){if(n.variants&&!n.cachedVariants){n.cachedVariants=n.variants.map(function(o){return l(n,{variants:null},o)})}if(n.cachedVariants){return n.cachedVariants}if(je(n)){return l(n,{starts:n.starts?l(n.starts):null})}if(Object.isFrozen(n)){return l(n)}return n}t(bn,"expandOrCloneMode");var pn="11.11.1";const En=class En extends Error{constructor(o,f){super(o);this.name="HTMLInjectionError";this.html=f}};t(En,"HTMLInjectionError");let Ge=En;const Ke=a;const en=l;const q=Symbol("nomatch");const Pe=7;const Re=t(function(n){const o=Object.create(null);const f=Object.create(null);const M=[];let J=true;const j="Could not find the language '{}', did you forget to load/include a language module?";const re={disableAutodetect:true,name:"Plain text",contains:[]};let U={ignoreUnescapedHTML:false,throwUnescapedHTML:false,noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",cssSelector:"pre code",languages:null,__emitter:r};function R(b){return U.noHighlightRe.test(b)}t(R,"shouldNotHighlight");function z(b){let O=b.className+" ";O+=b.parentNode?b.parentNode.className:"";const F=U.languageDetectRe.exec(O);if(F){const W=Me(F[1]);if(!W){Le(j.replace("{}",F[1]));Le("Falling back to no-highlight mode for this block.",b)}return W?F[1]:"no-highlight"}return O.split(/\s+/).find(W=>R(W)||Me(W))}t(z,"blockLanguage");function I(b,O,F){let W="";let se="";if(typeof O==="object"){W=b;F=O.ignoreIllegals;se=O.language}else{pe("10.7.0","highlight(lang, code, ...args) has been deprecated.");pe("10.7.0","Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277");se=b;W=O}if(F===void 0){F=true}const _e={code:W,language:se};an("before:highlight",_e);const xe=_e.result?_e.result:ne(_e.language,_e.code,F);xe.code=_e.code;an("after:highlight",xe);return xe}t(I,"highlight");function ne(b,O,F,W){const se=Object.create(null);function _e(N,S){return N.keywords[S]}t(_e,"keywordData");function xe(){if(!x.keywords){de.addText(Z);return}let N=0;x.keywordPatternRe.lastIndex=0;let S=x.keywordPatternRe.exec(Z);let L="";while(S){L+=Z.substring(N,S.index);const G=ve.case_insensitive?S[0].toLowerCase():S[0];const be=_e(x,G);if(be){const[Oe,ma]=be;de.addText(L);L="";se[G]=(se[G]||0)+1;if(se[G]<=Pe)sn+=ma;if(Oe.startsWith("_")){L+=S[0]}else{const fa=ve.classNameAliases[Oe]||Oe;ye(S[0],fa)}}else{L+=S[0]}N=x.keywordPatternRe.lastIndex;S=x.keywordPatternRe.exec(Z)}L+=Z.substring(N);de.addText(L)}t(xe,"processKeywords");function rn(){if(Z==="")return;let N=null;if(typeof x.subLanguage==="string"){if(!o[x.subLanguage]){de.addText(Z);return}N=ne(x.subLanguage,Z,true,mt[x.subLanguage]);mt[x.subLanguage]=N._top}else{N=qe(Z,x.subLanguage.length?x.subLanguage:null)}if(x.relevance>0){sn+=N.relevance}de.__addSublanguage(N._emitter,N.language)}t(rn,"processSubLanguage");function fe(){if(x.subLanguage!=null){rn()}else{xe()}Z=""}t(fe,"processBuffer");function ye(N,S){if(N==="")return;de.startScope(S);de.addText(N);de.endScope()}t(ye,"emitKeyword");function ut(N,S){let L=1;const G=S.length-1;while(L<=G){if(!N._emit[L]){L++;continue}const be=ve.classNameAliases[N[L]]||N[L];const Oe=S[L];if(be){ye(Oe,be)}else{Z=Oe;xe();Z=""}L++}}t(ut,"emitMultiClass");function gt(N,S){if(N.scope&&typeof N.scope==="string"){de.openNode(ve.classNameAliases[N.scope]||N.scope)}if(N.beginScope){if(N.beginScope._wrap){ye(Z,ve.classNameAliases[N.beginScope._wrap]||N.beginScope._wrap);Z=""}else if(N.beginScope._multi){ut(N.beginScope,S);Z=""}}x=Object.create(N,{parent:{value:x}});return x}t(gt,"startNewMode");function bt(N,S,L){let G=A(N.endRe,L);if(G){if(N["on:end"]){const be=new e(N);N["on:end"](S,be);if(be.isMatchIgnored)G=false}if(G){while(N.endsParent&&N.parent){N=N.parent}return N}}if(N.endsWithParent){return bt(N.parent,S,L)}}t(bt,"endOfMode");function da(N){if(x.matcher.regexIndex===0){Z+=N[0];return 1}else{wn=true;return 0}}t(da,"doIgnore");function ua(N){const S=N[0];const L=N.rule;const G=new e(L);const be=[L.__beforeBegin,L["on:begin"]];for(const Oe of be){if(!Oe)continue;Oe(N,G);if(G.isMatchIgnored)return da(S)}if(L.skip){Z+=S}else{if(L.excludeBegin){Z+=S}fe();if(!L.returnBegin&&!L.excludeBegin){Z=S}}gt(L,N);return L.returnBegin?0:S.length}t(ua,"doBeginMatch");function ga(N){const S=N[0];const L=O.substring(N.index);const G=bt(x,N,L);if(!G){return q}const be=x;if(x.endScope&&x.endScope._wrap){fe();ye(S,x.endScope._wrap)}else if(x.endScope&&x.endScope._multi){fe();ut(x.endScope,N)}else if(be.skip){Z+=S}else{if(!(be.returnEnd||be.excludeEnd)){Z+=S}fe();if(be.excludeEnd){Z=S}}do{if(x.scope){de.closeNode()}if(!x.skip&&!x.subLanguage){sn+=x.relevance}x=x.parent}while(x!==G.parent);if(G.starts){gt(G.starts,N)}return be.returnEnd?0:S.length}t(ga,"doEndMatch");function ba(){const N=[];for(let S=x;S!==ve;S=S.parent){if(S.scope){N.unshift(S.scope)}}N.forEach(S=>de.openNode(S))}t(ba,"processContinuations");let on={};function pt(N,S){const L=S&&S[0];Z+=N;if(L==null){fe();return 0}if(on.type==="begin"&&S.type==="end"&&on.index===S.index&&L===""){Z+=O.slice(S.index,S.index+1);if(!J){const G=new Error(`0 width match regex (${b})`);G.languageName=b;G.badRule=on.rule;throw G}return 1}on=S;if(S.type==="begin"){return ua(S)}else if(S.type==="illegal"&&!F){const G=new Error('Illegal lexeme "'+L+'" for mode "'+(x.scope||"<unnamed>")+'"');G.mode=x;throw G}else if(S.type==="end"){const G=ga(S);if(G!==q){return G}}if(S.type==="illegal"&&L===""){Z+="\n";return 1}if(vn>1e5&&vn>S.index*3){const G=new Error("potential infinite loop, way more iterations than matches");throw G}Z+=L;return L.length}t(pt,"processLexeme");const ve=Me(b);if(!ve){Te(j.replace("{}",b));throw new Error('Unknown language: "'+b+'"')}const pa=gn(ve);let yn="";let x=W||pa;const mt={};const de=new U.__emitter(U);ba();let Z="";let sn=0;let Be=0;let vn=0;let wn=false;try{if(!ve.__emitTokens){x.matcher.considerAll();for(;;){vn++;if(wn){wn=false}else{x.matcher.considerAll()}x.matcher.lastIndex=Be;const N=x.matcher.exec(O);if(!N)break;const S=O.substring(Be,N.index);const L=pt(S,N);Be=N.index+L}pt(O.substring(Be))}else{ve.__emitTokens(O,de)}de.finalize();yn=de.toHTML();return{language:b,value:yn,relevance:sn,illegal:false,_emitter:de,_top:x}}catch(N){if(N.message&&N.message.includes("Illegal")){return{language:b,value:Ke(O),illegal:true,relevance:0,_illegalBy:{message:N.message,index:Be,context:O.slice(Be-100,Be+100),mode:N.mode,resultSoFar:yn},_emitter:de}}else if(J){return{language:b,value:Ke(O),illegal:false,relevance:0,errorRaised:N,_emitter:de,_top:x}}else{throw N}}}t(ne,"_highlight");function oe(b){const O={value:Ke(b),illegal:false,relevance:0,_top:re,_emitter:new U.__emitter(U)};O._emitter.addText(b);return O}t(oe,"justTextHighlightResult");function qe(b,O){O=O||U.languages||Object.keys(o);const F=oe(b);const W=O.filter(Me).filter(dt).map(fe=>ne(fe,b,false));W.unshift(F);const se=W.sort((fe,ye)=>{if(fe.relevance!==ye.relevance)return ye.relevance-fe.relevance;if(fe.language&&ye.language){if(Me(fe.language).supersetOf===ye.language){return 1}else if(Me(ye.language).supersetOf===fe.language){return-1}}return 0});const[_e,xe]=se;const rn=_e;rn.secondBest=xe;return rn}t(qe,"highlightAuto");function hn(b,O,F){const W=O&&f[O]||F;b.classList.add("hljs");b.classList.add(`language-${W}`)}t(hn,"updateClassName");function Nn(b){let O=null;const F=z(b);if(R(F))return;an("before:highlightElement",{el:b,language:F});if(b.dataset.highlighted){console.log("Element previously highlighted. To highlight again, first unset `dataset.highlighted`.",b);return}if(b.children.length>0){if(!U.ignoreUnescapedHTML){console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk.");console.warn("https://github.com/highlightjs/highlight.js/wiki/security");console.warn("The element with unescaped HTML:");console.warn(b)}if(U.throwUnescapedHTML){const _e=new Ge("One of your code blocks includes unescaped HTML.",b.innerHTML);throw _e}}O=b;const W=O.textContent;const se=F?I(W,{language:F,ignoreIllegals:true}):qe(W);b.innerHTML=se.value;b.dataset.highlighted="yes";hn(b,F,se.language);b.result={language:se.language,re:se.relevance,relevance:se.relevance};if(se.secondBest){b.secondBest={language:se.secondBest.language,relevance:se.secondBest.relevance}}an("after:highlightElement",{el:b,result:se,text:W})}t(Nn,"highlightElement");function ea(b){U=en(U,b)}t(ea,"configure");const na=t(()=>{tn();pe("10.6.0","initHighlighting() deprecated.  Use highlightAll() now.")},"initHighlighting");function ta(){tn();pe("10.6.0","initHighlightingOnLoad() deprecated.  Use highlightAll() now.")}t(ta,"initHighlightingOnLoad");let ct=false;function tn(){function b(){tn()}t(b,"boot");if(document.readyState==="loading"){if(!ct){window.addEventListener("DOMContentLoaded",b,false)}ct=true;return}const O=document.querySelectorAll(U.cssSelector);O.forEach(Nn)}t(tn,"highlightAll");function aa(b,O){let F=null;try{F=O(n)}catch(W){Te("Language definition for '{}' could not be registered.".replace("{}",b));if(!J){throw W}else{Te(W)}F=re}if(!F.name)F.name=b;o[b]=F;F.rawDefinition=O.bind(null,n);if(F.aliases){lt(F.aliases,{languageName:b})}}t(aa,"registerLanguage");function ia(b){delete o[b];for(const O of Object.keys(f)){if(f[O]===b){delete f[O]}}}t(ia,"unregisterLanguage");function ra(){return Object.keys(o)}t(ra,"listLanguages");function Me(b){b=(b||"").toLowerCase();return o[b]||o[f[b]]}t(Me,"getLanguage");function lt(b,{languageName:O}){if(typeof b==="string"){b=[b]}b.forEach(F=>{f[F.toLowerCase()]=O})}t(lt,"registerAliases");function dt(b){const O=Me(b);return O&&!O.disableAutodetect}t(dt,"autoDetection");function oa(b){if(b["before:highlightBlock"]&&!b["before:highlightElement"]){b["before:highlightElement"]=O=>{b["before:highlightBlock"](Object.assign({block:O.el},O))}}if(b["after:highlightBlock"]&&!b["after:highlightElement"]){b["after:highlightElement"]=O=>{b["after:highlightBlock"](Object.assign({block:O.el},O))}}}t(oa,"upgradePluginAPI");function sa(b){oa(b);M.push(b)}t(sa,"addPlugin");function ca(b){const O=M.indexOf(b);if(O!==-1){M.splice(O,1)}}t(ca,"removePlugin");function an(b,O){const F=b;M.forEach(function(W){if(W[F]){W[F](O)}})}t(an,"fire");function la(b){pe("10.7.0","highlightBlock will be removed entirely in v12.0");pe("10.7.0","Please use highlightElement now.");return Nn(b)}t(la,"deprecateHighlightBlock");Object.assign(n,{highlight:I,highlightAuto:qe,highlightAll:tn,highlightElement:Nn,highlightBlock:la,configure:ea,initHighlighting:na,initHighlightingOnLoad:ta,registerLanguage:aa,unregisterLanguage:ia,listLanguages:ra,getLanguage:Me,registerAliases:lt,autoDetection:dt,inherit:en,addPlugin:sa,removePlugin:ca});n.debugMode=function(){J=false};n.safeMode=function(){J=true};n.versionString=pn;n.regex={concat:y,lookahead:p,either:w,optional:h,anyNumberOfTimes:E};for(const b in ie){if(typeof ie[b]==="object"){i(ie[b])}}Object.assign(n,ie);return n},"HLJS");const ke=Re({});ke.newInstance=()=>Re({});Sn=ke;ke.HighlightJS=ke;ke.default=ke;return Sn}t(ha,"requireCore");var Tn;var _t;function Na(){if(_t)return Tn;_t=1;function i(e){const a=e.regex;const l=a.concat(/[\p{L}_]/u,a.optional(/[\p{L}0-9_.-]*:/u),/[\p{L}0-9_.-]*/u);const u=/[\p{L}0-9._:-]+/u;const c={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/};const g={begin:/\s/,contains:[{className:"keyword",begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\n/}]};const _=e.inherit(g,{begin:/\(/,end:/\)/});const m=e.inherit(e.APOS_STRING_MODE,{className:"string"});const s=e.inherit(e.QUOTE_STRING_MODE,{className:"string"});const r={endsWithParent:true,illegal:/</,relevance:0,contains:[{className:"attr",begin:u,relevance:0},{begin:/=\s*/,relevance:0,contains:[{className:"string",endsParent:true,variants:[{begin:/"/,end:/"/,contains:[c]},{begin:/'/,end:/'/,contains:[c]},{begin:/[^\s"'=<>`]+/}]}]}]};return{name:"HTML, XML",aliases:["html","xhtml","rss","atom","xjb","xsd","xsl","plist","wsf","svg"],case_insensitive:true,unicodeRegex:true,contains:[{className:"meta",begin:/<![a-z]/,end:/>/,relevance:10,contains:[g,s,m,_,{begin:/\[/,end:/\]/,contains:[{className:"meta",begin:/<![a-z]/,end:/>/,contains:[g,_,s,m]}]}]},e.COMMENT(/<!--/,/-->/,{relevance:10}),{begin:/<!\[CDATA\[/,end:/\]\]>/,relevance:10},c,{className:"meta",end:/\?>/,variants:[{begin:/<\?xml/,relevance:10,contains:[s]},{begin:/<\?[a-z][a-z0-9]+/}]},{className:"tag",begin:/<style(?=\s|>)/,end:/>/,keywords:{name:"style"},contains:[r],starts:{end:/<\/style>/,returnEnd:true,subLanguage:["css","xml"]}},{className:"tag",begin:/<script(?=\s|>)/,end:/>/,keywords:{name:"script"},contains:[r],starts:{end:/<\/script>/,returnEnd:true,subLanguage:["javascript","handlebars","xml"]}},{className:"tag",begin:/<>|<\/>/},{className:"tag",begin:a.concat(/</,a.lookahead(a.concat(l,a.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[{className:"name",begin:l,relevance:0,starts:r}]},{className:"tag",begin:a.concat(/<\//,a.lookahead(a.concat(l,/>/))),contains:[{className:"name",begin:l,relevance:0},{begin:/>/,relevance:0,endsParent:true}]}]}}t(i,"xml");Tn=i;return Tn}t(Na,"requireXml");var On;var Et;function ya(){if(Et)return On;Et=1;function i(e){const a=e.regex;const l={};const u={begin:/\$\{/,end:/\}/,contains:["self",{begin:/:-/,contains:[l]}]};Object.assign(l,{className:"variable",variants:[{begin:a.concat(/\$[\w\d#@][\w\d_]*/,`(?![\\w\\d])(?![$])`)},u]});const c={className:"subst",begin:/\$\(/,end:/\)/,contains:[e.BACKSLASH_ESCAPE]};const g=e.inherit(e.COMMENT(),{match:[/(^|\s)/,/#.*$/],scope:{2:"comment"}});const _={begin:/<<-?\s*(?=\w+)/,starts:{contains:[e.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,className:"string"})]}};const m={className:"string",begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,l,c]};c.contains.push(m);const s={match:/\\"/};const r={className:"string",begin:/'/,end:/'/};const d={match:/\\'/};const p={begin:/\$?\(\(/,end:/\)\)/,contains:[{begin:/\d+#[0-9a-f]+/,className:"number"},e.NUMBER_MODE,l]};const E=["fish","bash","zsh","sh","csh","ksh","tcsh","dash","scsh"];const h=e.SHEBANG({binary:`(${E.join("|")})`,relevance:10});const y={className:"function",begin:/\w[\w\d_]*\s*\(\s*\)\s*\{/,returnBegin:true,contains:[e.inherit(e.TITLE_MODE,{begin:/\w[\w\d_]*/})],relevance:0};const v=["if","then","else","elif","fi","time","for","while","until","in","do","done","case","esac","coproc","function","select"];const w=["true","false"];const T={match:/(\/[a-z._-]+)+/};const A=["break","cd","continue","eval","exec","exit","export","getopts","hash","pwd","readonly","return","shift","test","times","trap","umask","unset"];const $=["alias","bind","builtin","caller","command","declare","echo","enable","help","let","local","logout","mapfile","printf","read","readarray","source","sudo","type","typeset","ulimit","unalias"];const C=["autoload","bg","bindkey","bye","cap","chdir","clone","comparguments","compcall","compctl","compdescribe","compfiles","compgroups","compquote","comptags","comptry","compvalues","dirs","disable","disown","echotc","echoti","emulate","fc","fg","float","functions","getcap","getln","history","integer","jobs","kill","limit","log","noglob","popd","print","pushd","pushln","rehash","sched","setcap","setopt","stat","suspend","ttyctl","unfunction","unhash","unlimit","unsetopt","vared","wait","whence","where","which","zcompile","zformat","zftp","zle","zmodload","zparseopts","zprof","zpty","zregexparse","zsocket","zstyle","ztcp"];const B=["chcon","chgrp","chown","chmod","cp","dd","df","dir","dircolors","ln","ls","mkdir","mkfifo","mknod","mktemp","mv","realpath","rm","rmdir","shred","sync","touch","truncate","vdir","b2sum","base32","base64","cat","cksum","comm","csplit","cut","expand","fmt","fold","head","join","md5sum","nl","numfmt","od","paste","ptx","pr","sha1sum","sha224sum","sha256sum","sha384sum","sha512sum","shuf","sort","split","sum","tac","tail","tr","tsort","unexpand","uniq","wc","arch","basename","chroot","date","dirname","du","echo","env","expr","factor","groups","hostid","id","link","logname","nice","nohup","nproc","pathchk","pinky","printenv","printf","pwd","readlink","runcon","seq","sleep","stat","stdbuf","stty","tee","test","timeout","tty","uname","unlink","uptime","users","who","whoami","yes"];return{name:"Bash",aliases:["sh","zsh"],keywords:{$pattern:/\b[a-z][a-z0-9._-]+\b/,keyword:v,literal:w,built_in:[...A,...$,"set","shopt",...C,...B]},contains:[h,e.SHEBANG(),y,p,g,_,T,m,s,r,d,l]}}t(i,"bash");On=i;return On}t(ya,"requireBash");var An;var ht;function va(){if(ht)return An;ht=1;function i(e){const a=e.regex;const l=e.COMMENT("//","$",{contains:[{begin:/\\\n/}]});const u="decltype\\(auto\\)";const c="[a-zA-Z_]\\w*::";const g="<[^<>]+>";const _="("+u+"|"+a.optional(c)+"[a-zA-Z_]\\w*"+a.optional(g)+")";const m={className:"type",variants:[{begin:"\\b[a-z\\d_]*_t\\b"},{match:/\batomic_[a-z]{3,6}\b/}]};const s="\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)";const r={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'("+s+"|.)",end:"'",illegal:"."},e.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]};const d={className:"number",variants:[{match:/\b(0b[01']+)/},{match:/(-?)\b([\d']+(\.[\d']*)?|\.[\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)/},{match:/(-?)\b(0[xX][a-fA-F0-9]+(?:'[a-fA-F0-9]+)*(?:\.[a-fA-F0-9]*(?:'[a-fA-F0-9]*)*)?(?:[pP][-+]?[0-9]+)?(l|L)?(u|U)?)/},{match:/(-?)\b\d+(?:'\d+)*(?:\.\d*(?:'\d*)*)?(?:[eE][-+]?\d+)?/}],relevance:0};const p={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef elifdef elifndef include"},contains:[{begin:/\\\n/,relevance:0},e.inherit(r,{className:"string"}),{className:"string",begin:/<.*?>/},l,e.C_BLOCK_COMMENT_MODE]};const E={className:"title",begin:a.optional(c)+e.IDENT_RE,relevance:0};const h=a.optional(c)+e.IDENT_RE+"\\s*\\(";const y=["asm","auto","break","case","continue","default","do","else","enum","extern","for","fortran","goto","if","inline","register","restrict","return","sizeof","typeof","typeof_unqual","struct","switch","typedef","union","volatile","while","_Alignas","_Alignof","_Atomic","_Generic","_Noreturn","_Static_assert","_Thread_local","alignas","alignof","noreturn","static_assert","thread_local","_Pragma"];const v=["float","double","signed","unsigned","int","short","long","char","void","_Bool","_BitInt","_Complex","_Imaginary","_Decimal32","_Decimal64","_Decimal96","_Decimal128","_Decimal64x","_Decimal128x","_Float16","_Float32","_Float64","_Float128","_Float32x","_Float64x","_Float128x","const","static","constexpr","complex","bool","imaginary"];const w={keyword:y,type:v,literal:"true false NULL",built_in:"std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr"};const T=[p,m,l,e.C_BLOCK_COMMENT_MODE,d,r];const A={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:w,contains:T.concat([{begin:/\(/,end:/\)/,keywords:w,contains:T.concat(["self"]),relevance:0}]),relevance:0};const $={begin:"("+_+"[\\*&\\s]+)+"+h,returnBegin:true,end:/[{;=]/,excludeEnd:true,keywords:w,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:u,keywords:w,relevance:0},{begin:h,returnBegin:true,contains:[e.inherit(E,{className:"title.function"})],relevance:0},{relevance:0,match:/,/},{className:"params",begin:/\(/,end:/\)/,keywords:w,relevance:0,contains:[l,e.C_BLOCK_COMMENT_MODE,r,d,m,{begin:/\(/,end:/\)/,keywords:w,relevance:0,contains:["self",l,e.C_BLOCK_COMMENT_MODE,r,d,m]}]},m,l,e.C_BLOCK_COMMENT_MODE,p]};return{name:"C",aliases:["h"],keywords:w,disableAutodetect:true,illegal:"</",contains:[].concat(A,$,T,[p,{begin:e.IDENT_RE+"::",keywords:w},{className:"class",beginKeywords:"enum class struct union",end:/[{;:<>=]/,contains:[{beginKeywords:"final class struct"},e.TITLE_MODE]}]),exports:{preprocessor:p,strings:r,keywords:w}}}t(i,"c");An=i;return An}t(va,"requireC");var Rn;var Nt;function wa(){if(Nt)return Rn;Nt=1;function i(e){const a=e.regex;const l=e.COMMENT("//","$",{contains:[{begin:/\\\n/}]});const u="decltype\\(auto\\)";const c="[a-zA-Z_]\\w*::";const g="<[^<>]+>";const _="(?!struct)("+u+"|"+a.optional(c)+"[a-zA-Z_]\\w*"+a.optional(g)+")";const m={className:"type",begin:"\\b[a-z\\d_]*_t\\b"};const s="\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)";const r={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'("+s+"|.)",end:"'",illegal:"."},e.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]};const d={className:"number",variants:[{begin:"[+-]?(?:(?:[0-9](?:'?[0-9])*\\.(?:[0-9](?:'?[0-9])*)?|\\.[0-9](?:'?[0-9])*)(?:[Ee][+-]?[0-9](?:'?[0-9])*)?|[0-9](?:'?[0-9])*[Ee][+-]?[0-9](?:'?[0-9])*|0[Xx](?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*(?:\\.(?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)?)?|\\.[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)[Pp][+-]?[0-9](?:'?[0-9])*)(?:[Ff](?:16|32|64|128)?|(BF|bf)16|[Ll]|)"},{begin:"[+-]?\\b(?:0[Bb][01](?:'?[01])*|0[Xx][0-9A-Fa-f](?:'?[0-9A-Fa-f])*|0(?:'?[0-7])*|[1-9](?:'?[0-9])*)(?:[Uu](?:LL?|ll?)|[Uu][Zz]?|(?:LL?|ll?)[Uu]?|[Zz][Uu]|)"}],relevance:0};const p={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},e.inherit(r,{className:"string"}),{className:"string",begin:/<.*?>/},l,e.C_BLOCK_COMMENT_MODE]};const E={className:"title",begin:a.optional(c)+e.IDENT_RE,relevance:0};const h=a.optional(c)+e.IDENT_RE+"\\s*\\(";const y=["alignas","alignof","and","and_eq","asm","atomic_cancel","atomic_commit","atomic_noexcept","auto","bitand","bitor","break","case","catch","class","co_await","co_return","co_yield","compl","concept","const_cast|10","consteval","constexpr","constinit","continue","decltype","default","delete","do","dynamic_cast|10","else","enum","explicit","export","extern","false","final","for","friend","goto","if","import","inline","module","mutable","namespace","new","noexcept","not","not_eq","nullptr","operator","or","or_eq","override","private","protected","public","reflexpr","register","reinterpret_cast|10","requires","return","sizeof","static_assert","static_cast|10","struct","switch","synchronized","template","this","thread_local","throw","transaction_safe","transaction_safe_dynamic","true","try","typedef","typeid","typename","union","using","virtual","volatile","while","xor","xor_eq"];const v=["bool","char","char16_t","char32_t","char8_t","double","float","int","long","short","void","wchar_t","unsigned","signed","const","static"];const w=["any","auto_ptr","barrier","binary_semaphore","bitset","complex","condition_variable","condition_variable_any","counting_semaphore","deque","false_type","flat_map","flat_set","future","imaginary","initializer_list","istringstream","jthread","latch","lock_guard","multimap","multiset","mutex","optional","ostringstream","packaged_task","pair","promise","priority_queue","queue","recursive_mutex","recursive_timed_mutex","scoped_lock","set","shared_future","shared_lock","shared_mutex","shared_timed_mutex","shared_ptr","stack","string_view","stringstream","timed_mutex","thread","true_type","tuple","unique_lock","unique_ptr","unordered_map","unordered_multimap","unordered_multiset","unordered_set","variant","vector","weak_ptr","wstring","wstring_view"];const T=["abort","abs","acos","apply","as_const","asin","atan","atan2","calloc","ceil","cerr","cin","clog","cos","cosh","cout","declval","endl","exchange","exit","exp","fabs","floor","fmod","forward","fprintf","fputs","free","frexp","fscanf","future","invoke","isalnum","isalpha","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","labs","launder","ldexp","log","log10","make_pair","make_shared","make_shared_for_overwrite","make_tuple","make_unique","malloc","memchr","memcmp","memcpy","memset","modf","move","pow","printf","putchar","puts","realloc","scanf","sin","sinh","snprintf","sprintf","sqrt","sscanf","std","stderr","stdin","stdout","strcat","strchr","strcmp","strcpy","strcspn","strlen","strncat","strncmp","strncpy","strpbrk","strrchr","strspn","strstr","swap","tan","tanh","terminate","to_underlying","tolower","toupper","vfprintf","visit","vprintf","vsprintf"];const A=["NULL","false","nullopt","nullptr","true"];const $=["_Pragma"];const C={type:v,keyword:y,literal:A,built_in:$,_type_hints:w};const B={className:"function.dispatch",relevance:0,keywords:{_hint:T},begin:a.concat(/\b/,/(?!decltype)/,/(?!if)/,/(?!for)/,/(?!switch)/,/(?!while)/,e.IDENT_RE,a.lookahead(/(<[^<>]+>|)\s*\(/))};const P=[B,p,m,l,e.C_BLOCK_COMMENT_MODE,d,r];const k={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:C,contains:P.concat([{begin:/\(/,end:/\)/,keywords:C,contains:P.concat(["self"]),relevance:0}]),relevance:0};const D={className:"function",begin:"("+_+"[\\*&\\s]+)+"+h,returnBegin:true,end:/[{;=]/,excludeEnd:true,keywords:C,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:u,keywords:C,relevance:0},{begin:h,returnBegin:true,contains:[E],relevance:0},{begin:/::/,relevance:0},{begin:/:/,endsWithParent:true,contains:[r,d]},{relevance:0,match:/,/},{className:"params",begin:/\(/,end:/\)/,keywords:C,relevance:0,contains:[l,e.C_BLOCK_COMMENT_MODE,r,d,m,{begin:/\(/,end:/\)/,keywords:C,relevance:0,contains:["self",l,e.C_BLOCK_COMMENT_MODE,r,d,m]}]},m,l,e.C_BLOCK_COMMENT_MODE,p]};return{name:"C++",aliases:["cc","c++","h++","hpp","hh","hxx","cxx"],keywords:C,illegal:"</",classNameAliases:{"function.dispatch":"built_in"},contains:[].concat(k,D,B,P,[p,{begin:"\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function|flat_map|flat_set)\\s*<(?!<)",end:">",keywords:C,contains:["self",m]},{begin:e.IDENT_RE+"::",keywords:C},{match:[/\b(?:enum(?:\s+(?:class|struct))?|class|struct|union)/,/\s+/,/\w+/],className:{1:"keyword",3:"title.class"}}])}}t(i,"cpp");Rn=i;return Rn}t(wa,"requireCpp");var kn;var yt;function Sa(){if(yt)return kn;yt=1;function i(e){const a=["bool","byte","char","decimal","delegate","double","dynamic","enum","float","int","long","nint","nuint","object","sbyte","short","string","ulong","uint","ushort"];const l=["public","private","protected","static","internal","protected","abstract","async","extern","override","unsafe","virtual","new","sealed","partial"];const u=["default","false","null","true"];const c=["abstract","as","base","break","case","catch","class","const","continue","do","else","event","explicit","extern","finally","fixed","for","foreach","goto","if","implicit","in","interface","internal","is","lock","namespace","new","operator","out","override","params","private","protected","public","readonly","record","ref","return","scoped","sealed","sizeof","stackalloc","static","struct","switch","this","throw","try","typeof","unchecked","unsafe","using","virtual","void","volatile","while"];const g=["add","alias","and","ascending","args","async","await","by","descending","dynamic","equals","file","from","get","global","group","init","into","join","let","nameof","not","notnull","on","or","orderby","partial","record","remove","required","scoped","select","set","unmanaged","value|0","var","when","where","with","yield"];const _={keyword:c.concat(g),built_in:a,literal:u};const m=e.inherit(e.TITLE_MODE,{begin:"[a-zA-Z](\\.?\\w)*"});const s={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0};const r={className:"string",begin:/"""("*)(?!")(.|\n)*?"""\1/,relevance:1};const d={className:"string",begin:'@"',end:'"',contains:[{begin:'""'}]};const p=e.inherit(d,{illegal:/\n/});const E={className:"subst",begin:/\{/,end:/\}/,keywords:_};const h=e.inherit(E,{illegal:/\n/});const y={className:"string",begin:/\$"/,end:'"',illegal:/\n/,contains:[{begin:/\{\{/},{begin:/\}\}/},e.BACKSLASH_ESCAPE,h]};const v={className:"string",begin:/\$@"/,end:'"',contains:[{begin:/\{\{/},{begin:/\}\}/},{begin:'""'},E]};const w=e.inherit(v,{illegal:/\n/,contains:[{begin:/\{\{/},{begin:/\}\}/},{begin:'""'},h]});E.contains=[v,y,d,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,s,e.C_BLOCK_COMMENT_MODE];h.contains=[w,y,p,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,s,e.inherit(e.C_BLOCK_COMMENT_MODE,{illegal:/\n/})];const T={variants:[r,v,y,d,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]};const A={begin:"<",end:">",contains:[{beginKeywords:"in out"},m]};const $=e.IDENT_RE+"(<"+e.IDENT_RE+"(\\s*,\\s*"+e.IDENT_RE+")*>)?(\\[\\])?";const C={begin:"@"+e.IDENT_RE,relevance:0};return{name:"C#",aliases:["cs","c#"],keywords:_,illegal:/::/,contains:[e.COMMENT("///","$",{returnBegin:true,contains:[{className:"doctag",variants:[{begin:"///",relevance:0},{begin:"<!--|-->"},{begin:"</?",end:">"}]}]}),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"meta",begin:"#",end:"$",keywords:{keyword:"if else elif endif define undef warning error line region endregion pragma checksum"}},T,s,{beginKeywords:"class interface",relevance:0,end:/[{;=]/,illegal:/[^\s:,]/,contains:[{beginKeywords:"where class"},m,A,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{beginKeywords:"namespace",relevance:0,end:/[{;=]/,illegal:/[^\s:]/,contains:[m,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{beginKeywords:"record",relevance:0,end:/[{;=]/,illegal:/[^\s:]/,contains:[m,A,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:"meta",begin:"^\\s*\\[(?=[\\w])",excludeBegin:true,end:"\\]",excludeEnd:true,contains:[{className:"string",begin:/"/,end:/"/}]},{beginKeywords:"new return throw await else",relevance:0},{className:"function",begin:"("+$+"\\s+)+"+e.IDENT_RE+"\\s*(<[^=]+>\\s*)?\\(",returnBegin:true,end:/\s*[{;=]/,excludeEnd:true,keywords:_,contains:[{beginKeywords:l.join(" "),relevance:0},{begin:e.IDENT_RE+"\\s*(<[^=]+>\\s*)?\\(",returnBegin:true,contains:[e.TITLE_MODE,A],relevance:0},{match:/\(\)/},{className:"params",begin:/\(/,end:/\)/,excludeBegin:true,excludeEnd:true,keywords:_,relevance:0,contains:[T,s,e.C_BLOCK_COMMENT_MODE]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},C]}}t(i,"csharp");kn=i;return kn}t(Sa,"requireCsharp");var Mn;var vt;function Ta(){if(vt)return Mn;vt=1;const i=t(s=>{return{IMPORTANT:{scope:"meta",begin:"!important"},BLOCK_COMMENT:s.C_BLOCK_COMMENT_MODE,HEXCOLOR:{scope:"number",begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/},FUNCTION_DISPATCH:{className:"built_in",begin:/[\w-]+(?=\()/},ATTRIBUTE_SELECTOR_MODE:{scope:"selector-attr",begin:/\[/,end:/\]/,illegal:"$",contains:[s.APOS_STRING_MODE,s.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{scope:"number",begin:s.NUMBER_RE+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",relevance:0},CSS_VARIABLE:{className:"attr",begin:/--[A-Za-z_][A-Za-z0-9_-]*/}}},"MODES");const e=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","main","mark","menu","nav","object","ol","optgroup","option","p","picture","q","quote","samp","section","select","source","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"];const a=["defs","g","marker","mask","pattern","svg","switch","symbol","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feFlood","feGaussianBlur","feImage","feMerge","feMorphology","feOffset","feSpecularLighting","feTile","feTurbulence","linearGradient","radialGradient","stop","circle","ellipse","image","line","path","polygon","polyline","rect","text","use","textPath","tspan","foreignObject","clipPath"];const l=[...e,...a];const u=["any-hover","any-pointer","aspect-ratio","color","color-gamut","color-index","device-aspect-ratio","device-height","device-width","display-mode","forced-colors","grid","height","hover","inverted-colors","monochrome","orientation","overflow-block","overflow-inline","pointer","prefers-color-scheme","prefers-contrast","prefers-reduced-motion","prefers-reduced-transparency","resolution","scan","scripting","update","width","min-width","max-width","min-height","max-height"].sort().reverse();const c=["active","any-link","blank","checked","current","default","defined","dir","disabled","drop","empty","enabled","first","first-child","first-of-type","fullscreen","future","focus","focus-visible","focus-within","has","host","host-context","hover","indeterminate","in-range","invalid","is","lang","last-child","last-of-type","left","link","local-link","not","nth-child","nth-col","nth-last-child","nth-last-col","nth-last-of-type","nth-of-type","only-child","only-of-type","optional","out-of-range","past","placeholder-shown","read-only","read-write","required","right","root","scope","target","target-within","user-invalid","valid","visited","where"].sort().reverse();const g=["after","backdrop","before","cue","cue-region","first-letter","first-line","grammar-error","marker","part","placeholder","selection","slotted","spelling-error"].sort().reverse();const _=["accent-color","align-content","align-items","align-self","alignment-baseline","all","anchor-name","animation","animation-composition","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-range","animation-range-end","animation-range-start","animation-timeline","animation-timing-function","appearance","aspect-ratio","backdrop-filter","backface-visibility","background","background-attachment","background-blend-mode","background-clip","background-color","background-image","background-origin","background-position","background-position-x","background-position-y","background-repeat","background-size","baseline-shift","block-size","border","border-block","border-block-color","border-block-end","border-block-end-color","border-block-end-style","border-block-end-width","border-block-start","border-block-start-color","border-block-start-style","border-block-start-width","border-block-style","border-block-width","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-end-end-radius","border-end-start-radius","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-inline","border-inline-color","border-inline-end","border-inline-end-color","border-inline-end-style","border-inline-end-width","border-inline-start","border-inline-start-color","border-inline-start-style","border-inline-start-width","border-inline-style","border-inline-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-start-end-radius","border-start-start-radius","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-align","box-decoration-break","box-direction","box-flex","box-flex-group","box-lines","box-ordinal-group","box-orient","box-pack","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","caret-color","clear","clip","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","color-scheme","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","contain","contain-intrinsic-block-size","contain-intrinsic-height","contain-intrinsic-inline-size","contain-intrinsic-size","contain-intrinsic-width","container","container-name","container-type","content","content-visibility","counter-increment","counter-reset","counter-set","cue","cue-after","cue-before","cursor","cx","cy","direction","display","dominant-baseline","empty-cells","enable-background","field-sizing","fill","fill-opacity","fill-rule","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","flood-color","flood-opacity","flow","font","font-display","font-family","font-feature-settings","font-kerning","font-language-override","font-optical-sizing","font-palette","font-size","font-size-adjust","font-smooth","font-smoothing","font-stretch","font-style","font-synthesis","font-synthesis-position","font-synthesis-small-caps","font-synthesis-style","font-synthesis-weight","font-variant","font-variant-alternates","font-variant-caps","font-variant-east-asian","font-variant-emoji","font-variant-ligatures","font-variant-numeric","font-variant-position","font-variation-settings","font-weight","forced-color-adjust","gap","glyph-orientation-horizontal","glyph-orientation-vertical","grid","grid-area","grid-auto-columns","grid-auto-flow","grid-auto-rows","grid-column","grid-column-end","grid-column-start","grid-gap","grid-row","grid-row-end","grid-row-start","grid-template","grid-template-areas","grid-template-columns","grid-template-rows","hanging-punctuation","height","hyphenate-character","hyphenate-limit-chars","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","initial-letter","initial-letter-align","inline-size","inset","inset-area","inset-block","inset-block-end","inset-block-start","inset-inline","inset-inline-end","inset-inline-start","isolation","justify-content","justify-items","justify-self","kerning","left","letter-spacing","lighting-color","line-break","line-height","line-height-step","list-style","list-style-image","list-style-position","list-style-type","margin","margin-block","margin-block-end","margin-block-start","margin-bottom","margin-inline","margin-inline-end","margin-inline-start","margin-left","margin-right","margin-top","margin-trim","marker","marker-end","marker-mid","marker-start","marks","mask","mask-border","mask-border-mode","mask-border-outset","mask-border-repeat","mask-border-slice","mask-border-source","mask-border-width","mask-clip","mask-composite","mask-image","mask-mode","mask-origin","mask-position","mask-repeat","mask-size","mask-type","masonry-auto-flow","math-depth","math-shift","math-style","max-block-size","max-height","max-inline-size","max-width","min-block-size","min-height","min-inline-size","min-width","mix-blend-mode","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","offset","offset-anchor","offset-distance","offset-path","offset-position","offset-rotate","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-anchor","overflow-block","overflow-clip-margin","overflow-inline","overflow-wrap","overflow-x","overflow-y","overlay","overscroll-behavior","overscroll-behavior-block","overscroll-behavior-inline","overscroll-behavior-x","overscroll-behavior-y","padding","padding-block","padding-block-end","padding-block-start","padding-bottom","padding-inline","padding-inline-end","padding-inline-start","padding-left","padding-right","padding-top","page","page-break-after","page-break-before","page-break-inside","paint-order","pause","pause-after","pause-before","perspective","perspective-origin","place-content","place-items","place-self","pointer-events","position","position-anchor","position-visibility","print-color-adjust","quotes","r","resize","rest","rest-after","rest-before","right","rotate","row-gap","ruby-align","ruby-position","scale","scroll-behavior","scroll-margin","scroll-margin-block","scroll-margin-block-end","scroll-margin-block-start","scroll-margin-bottom","scroll-margin-inline","scroll-margin-inline-end","scroll-margin-inline-start","scroll-margin-left","scroll-margin-right","scroll-margin-top","scroll-padding","scroll-padding-block","scroll-padding-block-end","scroll-padding-block-start","scroll-padding-bottom","scroll-padding-inline","scroll-padding-inline-end","scroll-padding-inline-start","scroll-padding-left","scroll-padding-right","scroll-padding-top","scroll-snap-align","scroll-snap-stop","scroll-snap-type","scroll-timeline","scroll-timeline-axis","scroll-timeline-name","scrollbar-color","scrollbar-gutter","scrollbar-width","shape-image-threshold","shape-margin","shape-outside","shape-rendering","speak","speak-as","src","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tab-size","table-layout","text-align","text-align-all","text-align-last","text-anchor","text-combine-upright","text-decoration","text-decoration-color","text-decoration-line","text-decoration-skip","text-decoration-skip-ink","text-decoration-style","text-decoration-thickness","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-indent","text-justify","text-orientation","text-overflow","text-rendering","text-shadow","text-size-adjust","text-transform","text-underline-offset","text-underline-position","text-wrap","text-wrap-mode","text-wrap-style","timeline-scope","top","touch-action","transform","transform-box","transform-origin","transform-style","transition","transition-behavior","transition-delay","transition-duration","transition-property","transition-timing-function","translate","unicode-bidi","user-modify","user-select","vector-effect","vertical-align","view-timeline","view-timeline-axis","view-timeline-inset","view-timeline-name","view-transition-name","visibility","voice-balance","voice-duration","voice-family","voice-pitch","voice-range","voice-rate","voice-stress","voice-volume","white-space","white-space-collapse","widows","width","will-change","word-break","word-spacing","word-wrap","writing-mode","x","y","z-index","zoom"].sort().reverse();function m(s){const r=s.regex;const d=i(s);const p={begin:/-(webkit|moz|ms|o)-(?=[a-z])/};const E="and or not only";const h=/@-?\w[\w]*(-\w+)*/;const y="[a-zA-Z-][a-zA-Z0-9_-]*";const v=[s.APOS_STRING_MODE,s.QUOTE_STRING_MODE];return{name:"CSS",case_insensitive:true,illegal:/[=|'\$]/,keywords:{keyframePosition:"from to"},classNameAliases:{keyframePosition:"selector-tag"},contains:[d.BLOCK_COMMENT,p,d.CSS_NUMBER_MODE,{className:"selector-id",begin:/#[A-Za-z0-9_-]+/,relevance:0},{className:"selector-class",begin:"\\."+y,relevance:0},d.ATTRIBUTE_SELECTOR_MODE,{className:"selector-pseudo",variants:[{begin:":("+c.join("|")+")"},{begin:":(:)?("+g.join("|")+")"}]},d.CSS_VARIABLE,{className:"attribute",begin:"\\b("+_.join("|")+")\\b"},{begin:/:/,end:/[;}{]/,contains:[d.BLOCK_COMMENT,d.HEXCOLOR,d.IMPORTANT,d.CSS_NUMBER_MODE,...v,{begin:/(url|data-uri)\(/,end:/\)/,relevance:0,keywords:{built_in:"url data-uri"},contains:[...v,{className:"string",begin:/[^)]/,endsWithParent:true,excludeEnd:true}]},d.FUNCTION_DISPATCH]},{begin:r.lookahead(/@/),end:"[{;]",relevance:0,illegal:/:/,contains:[{className:"keyword",begin:h},{begin:/\s/,endsWithParent:true,excludeEnd:true,relevance:0,keywords:{$pattern:/[a-z-]+/,keyword:E,attribute:u.join(" ")},contains:[{begin:/[a-z-]+(?=:)/,className:"attribute"},...v,d.CSS_NUMBER_MODE]}]},{className:"selector-tag",begin:"\\b("+l.join("|")+")\\b"}]}}t(m,"css");Mn=m;return Mn}t(Ta,"requireCss");var xn;var wt;function Oa(){if(wt)return xn;wt=1;function i(e){const a=e.regex;const l={begin:/<\/?[A-Za-z_]/,end:">",subLanguage:"xml",relevance:0};const u={begin:"^[-\\*]{3,}",end:"$"};const c={className:"code",variants:[{begin:"(`{3,})[^`](.|\\n)*?\\1`*[ ]*"},{begin:"(~{3,})[^~](.|\\n)*?\\1~*[ ]*"},{begin:"```",end:"```+[ ]*$"},{begin:"~~~",end:"~~~+[ ]*$"},{begin:"`.+?`"},{begin:"(?=^( {4}|\\t))",contains:[{begin:"^( {4}|\\t)",end:"(\\n)$"}],relevance:0}]};const g={className:"bullet",begin:"^[ 	]*([*+-]|(\\d+\\.))(?=\\s+)",end:"\\s+",excludeEnd:true};const _={begin:/^\[[^\n]+\]:/,returnBegin:true,contains:[{className:"symbol",begin:/\[/,end:/\]/,excludeBegin:true,excludeEnd:true},{className:"link",begin:/:\s*/,end:/$/,excludeBegin:true}]};const m=/[A-Za-z][A-Za-z0-9+.-]*/;const s={variants:[{begin:/\[.+?\]\[.*?\]/,relevance:0},{begin:/\[.+?\]\(((data|javascript|mailto):|(?:http|ftp)s?:\/\/).*?\)/,relevance:2},{begin:a.concat(/\[.+?\]\(/,m,/:\/\/.*?\)/),relevance:2},{begin:/\[.+?\]\([./?&#].*?\)/,relevance:1},{begin:/\[.*?\]\(.*?\)/,relevance:0}],returnBegin:true,contains:[{match:/\[(?=\])/},{className:"string",relevance:0,begin:"\\[",end:"\\]",excludeBegin:true,returnEnd:true},{className:"link",relevance:0,begin:"\\]\\(",end:"\\)",excludeBegin:true,excludeEnd:true},{className:"symbol",relevance:0,begin:"\\]\\[",end:"\\]",excludeBegin:true,excludeEnd:true}]};const r={className:"strong",contains:[],variants:[{begin:/_{2}(?!\s)/,end:/_{2}/},{begin:/\*{2}(?!\s)/,end:/\*{2}/}]};const d={className:"emphasis",contains:[],variants:[{begin:/\*(?![*\s])/,end:/\*/},{begin:/_(?![_\s])/,end:/_/,relevance:0}]};const p=e.inherit(r,{contains:[]});const E=e.inherit(d,{contains:[]});r.contains.push(E);d.contains.push(p);let h=[l,s];[r,d,p,E].forEach(T=>{T.contains=T.contains.concat(h)});h=h.concat(r,d);const y={className:"section",variants:[{begin:"^#{1,6}",end:"$",contains:h},{begin:"(?=^.+?\\n[=-]{2,}$)",contains:[{begin:"^[=-]*$"},{begin:"^",end:"\\n",contains:h}]}]};const v={className:"quote",begin:"^>\\s+",contains:h,end:"$"};const w={scope:"literal",match:/&([a-zA-Z0-9]+|#[0-9]{1,7}|#[Xx][0-9a-fA-F]{1,6});/};return{name:"Markdown",aliases:["md","mkdown","mkd"],contains:[y,l,g,r,d,v,c,u,s,_,w]}}t(i,"markdown");xn=i;return xn}t(Oa,"requireMarkdown");var Cn;var St;function Aa(){if(St)return Cn;St=1;function i(e){const a=e.regex;return{name:"Diff",aliases:["patch"],contains:[{className:"meta",relevance:10,match:a.either(/^@@ +-\d+,\d+ +\+\d+,\d+ +@@/,/^\*\*\* +\d+,\d+ +\*\*\*\*$/,/^--- +\d+,\d+ +----$/)},{className:"comment",variants:[{begin:a.either(/Index: /,/^index/,/={3,}/,/^-{3}/,/^\*{3} /,/^\+{3}/,/^diff --git/),end:/$/},{match:/^\*{15}$/}]},{className:"addition",begin:/^\+/,end:/$/},{className:"deletion",begin:/^-/,end:/$/},{className:"addition",begin:/^!/,end:/$/}]}}t(i,"diff");Cn=i;return Cn}t(Aa,"requireDiff");var In;var Tt;function Ra(){if(Tt)return In;Tt=1;function i(e){const a=e.regex;const l="([a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?)";const u=a.either(/\b([A-Z]+[a-z0-9]+)+/,/\b([A-Z]+[a-z0-9]+)+[A-Z]+/);const c=a.concat(u,/(::\w+)*/);const g=["include","extend","prepend","public","private","protected","raise","throw"];const _={"variable.constant":["__FILE__","__LINE__","__ENCODING__"],"variable.language":["self","super"],keyword:["alias","and","begin","BEGIN","break","case","class","defined","do","else","elsif","end","END","ensure","for","if","in","module","next","not","or","redo","require","rescue","retry","return","then","undef","unless","until","when","while","yield",...g],built_in:["proc","lambda","attr_accessor","attr_reader","attr_writer","define_method","private_constant","module_function"],literal:["true","false","nil"]};const m={className:"doctag",begin:"@[A-Za-z]+"};const s={begin:"#<",end:">"};const r=[e.COMMENT("#","$",{contains:[m]}),e.COMMENT("^=begin","^=end",{contains:[m],relevance:10}),e.COMMENT("^__END__",e.MATCH_NOTHING_RE)];const d={className:"subst",begin:/#\{/,end:/\}/,keywords:_};const p={className:"string",contains:[e.BACKSLASH_ESCAPE,d],variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/},{begin:/`/,end:/`/},{begin:/%[qQwWx]?\(/,end:/\)/},{begin:/%[qQwWx]?\[/,end:/\]/},{begin:/%[qQwWx]?\{/,end:/\}/},{begin:/%[qQwWx]?</,end:/>/},{begin:/%[qQwWx]?\//,end:/\//},{begin:/%[qQwWx]?%/,end:/%/},{begin:/%[qQwWx]?-/,end:/-/},{begin:/%[qQwWx]?\|/,end:/\|/},{begin:/\B\?(\\\d{1,3})/},{begin:/\B\?(\\x[A-Fa-f0-9]{1,2})/},{begin:/\B\?(\\u\{?[A-Fa-f0-9]{1,6}\}?)/},{begin:/\B\?(\\M-\\C-|\\M-\\c|\\c\\M-|\\M-|\\C-\\M-)[\x20-\x7e]/},{begin:/\B\?\\(c|C-)[\x20-\x7e]/},{begin:/\B\?\\?\S/},{begin:a.concat(/<<[-~]?'?/,a.lookahead(/(\w+)(?=\W)[^\n]*\n(?:[^\n]*\n)*?\s*\1\b/)),contains:[e.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,contains:[e.BACKSLASH_ESCAPE,d]})]}]};const E="[1-9](_?[0-9])*|0";const h="[0-9](_?[0-9])*";const y={className:"number",relevance:0,variants:[{begin:`\\b(${E})(\\.(${h}))?([eE][+-]?(${h})|r)?i?\\b`},{begin:"\\b0[dD][0-9](_?[0-9])*r?i?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*r?i?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*r?i?\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\b"},{begin:"\\b0(_?[0-7])+r?i?\\b"}]};const v={variants:[{match:/\(\)/},{className:"params",begin:/\(/,end:/(?=\))/,excludeBegin:true,endsParent:true,keywords:_}]};const w={match:[/(include|extend)\s+/,c],scope:{2:"title.class"},keywords:_};const T={variants:[{match:[/class\s+/,c,/\s+<\s+/,c]},{match:[/\b(class|module)\s+/,c]}],scope:{2:"title.class",4:"title.class.inherited"},keywords:_};const A={relevance:0,match:/\b[A-Z][A-Z_0-9]+\b/,className:"variable.constant"};const $={match:[/def/,/\s+/,l],scope:{1:"keyword",3:"title.function"},contains:[v]};const C={relevance:0,match:[c,/\.new[. (]/],scope:{1:"title.class"}};const B={relevance:0,match:u,scope:"title.class"};const P=[p,T,w,C,A,B,$,{begin:e.IDENT_RE+"::"},{className:"symbol",begin:e.UNDERSCORE_IDENT_RE+"(!|\\?)?:",relevance:0},{className:"symbol",begin:":(?!\\s)",contains:[p,{begin:l}],relevance:0},y,{className:"variable",begin:`(\\$\\W)|((\\$|@@?)(\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])`},{className:"params",begin:/\|(?!=)/,end:/\|/,excludeBegin:true,excludeEnd:true,relevance:0,keywords:_},{begin:"("+e.RE_STARTERS_RE+"|unless)\\s*",keywords:"unless",contains:[{className:"regexp",contains:[e.BACKSLASH_ESCAPE,d],illegal:/\n/,variants:[{begin:"/",end:"/[a-z]*"},{begin:/%r\{/,end:/\}[a-z]*/},{begin:"%r\\(",end:"\\)[a-z]*"},{begin:"%r!",end:"![a-z]*"},{begin:"%r\\[",end:"\\][a-z]*"}]}].concat(s,r),relevance:0}].concat(s,r);d.contains=P;v.contains=P;const k="[>?]>";const D="[\\w#]+\\(\\w+\\):\\d+:\\d+[>*]";const K="(\\w+-)?\\d+\\.\\d+\\.\\d+(p\\d+)?[^\\d][^>]+>";const H=[{begin:/^\s*=>/,starts:{end:"$",contains:P}},{className:"meta.prompt",begin:"^("+k+"|"+D+"|"+K+")(?=[ ])",starts:{end:"$",keywords:_,contains:P}}];r.unshift(s);return{name:"Ruby",aliases:["rb","gemspec","podspec","thor","irb"],keywords:_,illegal:/\/\*/,contains:[e.SHEBANG({binary:"ruby"})].concat(H).concat(r).concat(P)}}t(i,"ruby");In=i;return In}t(Ra,"requireRuby");var Dn;var Ot;function ka(){if(Ot)return Dn;Ot=1;function i(e){const a=["true","false","iota","nil"];const l=["append","cap","close","complex","copy","imag","len","make","new","panic","print","println","real","recover","delete"];const u=["bool","byte","complex64","complex128","error","float32","float64","int8","int16","int32","int64","string","uint8","uint16","uint32","uint64","int","uint","uintptr","rune"];const c=["break","case","chan","const","continue","default","defer","else","fallthrough","for","func","go","goto","if","import","interface","map","package","range","return","select","struct","switch","type","var"];const g={keyword:c,type:u,literal:a,built_in:l};return{name:"Go",aliases:["golang"],keywords:g,illegal:"</",contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"string",variants:[e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{begin:"`",end:"`"}]},{className:"number",variants:[{match:/-?\b0[xX]\.[a-fA-F0-9](_?[a-fA-F0-9])*[pP][+-]?\d(_?\d)*i?/,relevance:0},{match:/-?\b0[xX](_?[a-fA-F0-9])+((\.([a-fA-F0-9](_?[a-fA-F0-9])*)?)?[pP][+-]?\d(_?\d)*)?i?/,relevance:0},{match:/-?\b0[oO](_?[0-7])*i?/,relevance:0},{match:/-?\.\d(_?\d)*([eE][+-]?\d(_?\d)*)?i?/,relevance:0},{match:/-?\b\d(_?\d)*(\.(\d(_?\d)*)?)?([eE][+-]?\d(_?\d)*)?i?/,relevance:0}]},{begin:/:=/},{className:"function",beginKeywords:"func",end:"\\s*(\\{|$)",excludeEnd:true,contains:[e.TITLE_MODE,{className:"params",begin:/\(/,end:/\)/,endsParent:true,keywords:g,illegal:/["']/}]}]}}t(i,"go");Dn=i;return Dn}t(ka,"requireGo");var Ln;var At;function Ma(){if(At)return Ln;At=1;function i(e){const a=e.regex;const l=/[_A-Za-z][_0-9A-Za-z]*/;return{name:"GraphQL",aliases:["gql"],case_insensitive:true,disableAutodetect:false,keywords:{keyword:["query","mutation","subscription","type","input","schema","directive","interface","union","scalar","fragment","enum","on"],literal:["true","false","null"]},contains:[e.HASH_COMMENT_MODE,e.QUOTE_STRING_MODE,e.NUMBER_MODE,{scope:"punctuation",match:/[.]{3}/,relevance:0},{scope:"punctuation",begin:/[\!\(\)\:\=\[\]\{\|\}]{1}/,relevance:0},{scope:"variable",begin:/\$/,end:/\W/,excludeEnd:true,relevance:0},{scope:"meta",match:/@\w+/,excludeEnd:true},{scope:"symbol",begin:a.concat(l,a.lookahead(/\s*:/)),relevance:0}],illegal:[/[;<']/,/BEGIN/]}}t(i,"graphql");Ln=i;return Ln}t(Ma,"requireGraphql");var Bn;var Rt;function xa(){if(Rt)return Bn;Rt=1;function i(e){const a=e.regex;const l={className:"number",relevance:0,variants:[{begin:/([+-]+)?[\d]+_[\d_]+/},{begin:e.NUMBER_RE}]};const u=e.COMMENT();u.variants=[{begin:/;/,end:/$/},{begin:/#/,end:/$/}];const c={className:"variable",variants:[{begin:/\$[\w\d"][\w\d_]*/},{begin:/\$\{(.*?)\}/}]};const g={className:"literal",begin:/\bon|off|true|false|yes|no\b/};const _={className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[{begin:"'''",end:"'''",relevance:10},{begin:'"""',end:'"""',relevance:10},{begin:'"',end:'"'},{begin:"'",end:"'"}]};const m={begin:/\[/,end:/\]/,contains:[u,g,c,_,l,"self"],relevance:0};const s=/[A-Za-z0-9_-]+/;const r=/"(\\"|[^"])*"/;const d=/'[^']*'/;const p=a.either(s,r,d);const E=a.concat(p,"(\\s*\\.\\s*",p,")*",a.lookahead(/\s*=\s*[^#\s]/));return{name:"TOML, also INI",aliases:["toml"],case_insensitive:true,illegal:/\S/,contains:[u,{className:"section",begin:/\[+/,end:/\]+/},{begin:E,className:"attr",starts:{end:/$/,contains:[u,m,g,c,_,l]}}]}}t(i,"ini");Bn=i;return Bn}t(xa,"requireIni");var Un;var kt;function Ca(){if(kt)return Un;kt=1;var i="[0-9](_*[0-9])*";var e=`\\.(${i})`;var a="[0-9a-fA-F](_*[0-9a-fA-F])*";var l={className:"number",variants:[{begin:`(\\b(${i})((${e})|\\.)?|(${e}))[eE][+-]?(${i})[fFdD]?\\b`},{begin:`\\b(${i})((${e})[fFdD]?\\b|\\.([fFdD]\\b)?)`},{begin:`(${e})[fFdD]?\\b`},{begin:`\\b(${i})[fFdD]\\b`},{begin:`\\b0[xX]((${a})\\.?|(${a})?\\.(${a}))[pP][+-]?(${i})[fFdD]?\\b`},{begin:"\\b(0|[1-9](_*[0-9])*)[lL]?\\b"},{begin:`\\b0[xX](${a})[lL]?\\b`},{begin:"\\b0(_*[0-7])*[lL]?\\b"},{begin:"\\b0[bB][01](_*[01])*[lL]?\\b"}],relevance:0};function u(g,_,m){if(m===-1)return"";return g.replace(_,s=>{return u(g,_,m-1)})}t(u,"recurRegex");function c(g){const _=g.regex;const m="[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*";const s=m+u("(?:<"+m+"~~~(?:\\s*,\\s*"+m+"~~~)*>)?",/~~~/g,2);const r=["synchronized","abstract","private","var","static","if","const ","for","while","strictfp","finally","protected","import","native","final","void","enum","else","break","transient","catch","instanceof","volatile","case","assert","package","default","public","try","switch","continue","throws","protected","public","private","module","requires","exports","do","sealed","yield","permits","goto","when"];const d=["super","this"];const p=["false","true","null"];const E=["char","boolean","long","float","int","byte","short","double"];const h={keyword:r,literal:p,type:E,built_in:d};const y={className:"meta",begin:"@"+m,contains:[{begin:/\(/,end:/\)/,contains:["self"]}]};const v={className:"params",begin:/\(/,end:/\)/,keywords:h,relevance:0,contains:[g.C_BLOCK_COMMENT_MODE],endsParent:true};return{name:"Java",aliases:["jsp"],keywords:h,illegal:/<\/|#/,contains:[g.COMMENT("/\\*\\*","\\*/",{relevance:0,contains:[{begin:/\w+@/,relevance:0},{className:"doctag",begin:"@[A-Za-z]+"}]}),{begin:/import java\.[a-z]+\./,keywords:"import",relevance:2},g.C_LINE_COMMENT_MODE,g.C_BLOCK_COMMENT_MODE,{begin:/"""/,end:/"""/,className:"string",contains:[g.BACKSLASH_ESCAPE]},g.APOS_STRING_MODE,g.QUOTE_STRING_MODE,{match:[/\b(?:class|interface|enum|extends|implements|new)/,/\s+/,m],className:{1:"keyword",3:"title.class"}},{match:/non-sealed/,scope:"keyword"},{begin:[_.concat(/(?!else)/,m),/\s+/,m,/\s+/,/=(?!=)/],className:{1:"type",3:"variable",5:"operator"}},{begin:[/record/,/\s+/,m],className:{1:"keyword",3:"title.class"},contains:[v,g.C_LINE_COMMENT_MODE,g.C_BLOCK_COMMENT_MODE]},{beginKeywords:"new throw return else",relevance:0},{begin:["(?:"+s+"\\s+)",g.UNDERSCORE_IDENT_RE,/\s*(?=\()/],className:{2:"title.function"},keywords:h,contains:[{className:"params",begin:/\(/,end:/\)/,keywords:h,relevance:0,contains:[y,g.APOS_STRING_MODE,g.QUOTE_STRING_MODE,l,g.C_BLOCK_COMMENT_MODE]},g.C_LINE_COMMENT_MODE,g.C_BLOCK_COMMENT_MODE]},l,y]}}t(c,"java");Un=c;return Un}t(Ca,"requireJava");var Pn;var Mt;function Ia(){if(Mt)return Pn;Mt=1;const i="[A-Za-z$_][0-9A-Za-z$_]*";const e=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends","using"];const a=["true","false","null","undefined","NaN","Infinity"];const l=["Object","Function","Boolean","Symbol","Math","Date","Number","BigInt","String","RegExp","Array","Float32Array","Float64Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Int32Array","Uint16Array","Uint32Array","BigInt64Array","BigUint64Array","Set","Map","WeakSet","WeakMap","ArrayBuffer","SharedArrayBuffer","Atomics","DataView","JSON","Promise","Generator","GeneratorFunction","AsyncFunction","Reflect","Proxy","Intl","WebAssembly"];const u=["Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"];const c=["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"];const g=["arguments","this","super","console","window","document","localStorage","sessionStorage","module","global"];const _=[].concat(c,l,u);function m(s){const r=s.regex;const d=t((Q,{after:X})=>{const ue="</"+Q[0].slice(1);const ie=Q.input.indexOf(ue,X);return ie!==-1},"hasClosingTag");const p=i;const E={begin:"<>",end:"</>"};const h=/<[A-Za-z0-9\\._:-]+\s*\/>/;const y={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:t((Q,X)=>{const ue=Q[0].length+Q.index;const ie=Q.input[ue];if(ie==="<"||ie===","){X.ignoreMatch();return}if(ie===">"){if(!d(Q,{after:ue})){X.ignoreMatch()}}let ge;const me=Q.input.substring(ue);if(ge=me.match(/^\s*=/)){X.ignoreMatch();return}if(ge=me.match(/^\s+extends\s+/)){if(ge.index===0){X.ignoreMatch();return}}},"isTrulyOpeningTag")};const v={$pattern:i,keyword:e,literal:a,built_in:_,"variable.language":g};const w="[0-9](_?[0-9])*";const T=`\\.(${w})`;const A=`0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;const $={className:"number",variants:[{begin:`(\\b(${A})((${T})|\\.)?|(${T}))[eE][+-]?(${w})\\b`},{begin:`\\b(${A})\\b((${T})\\b|\\.)?|(${T})\\b`},{begin:`\\b(0|[1-9](_?[0-9])*)n\\b`},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"}],relevance:0};const C={className:"subst",begin:"\\$\\{",end:"\\}",keywords:v,contains:[]};const B={begin:".?html`",end:"",starts:{end:"`",returnEnd:false,contains:[s.BACKSLASH_ESCAPE,C],subLanguage:"xml"}};const P={begin:".?css`",end:"",starts:{end:"`",returnEnd:false,contains:[s.BACKSLASH_ESCAPE,C],subLanguage:"css"}};const k={begin:".?gql`",end:"",starts:{end:"`",returnEnd:false,contains:[s.BACKSLASH_ESCAPE,C],subLanguage:"graphql"}};const D={className:"string",begin:"`",end:"`",contains:[s.BACKSLASH_ESCAPE,C]};const K=s.COMMENT(/\/\*\*(?!\/)/,"\\*/",{relevance:0,contains:[{begin:"(?=@[A-Za-z]+)",relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+"},{className:"type",begin:"\\{",end:"\\}",excludeEnd:true,excludeBegin:true,relevance:0},{className:"variable",begin:p+"(?=\\s*(-)|$)",endsParent:true,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]});const H={className:"comment",variants:[K,s.C_BLOCK_COMMENT_MODE,s.C_LINE_COMMENT_MODE]};const ce=[s.APOS_STRING_MODE,s.QUOTE_STRING_MODE,B,P,k,D,{match:/\$\d+/},$];C.contains=ce.concat({begin:/\{/,end:/\}/,keywords:v,contains:["self"].concat(ce)});const te=[].concat(H,C.contains);const ae=te.concat([{begin:/(\s*)\(/,end:/\)/,keywords:v,contains:["self"].concat(te)}]);const Y={className:"params",begin:/(\s*)\(/,end:/\)/,excludeBegin:true,excludeEnd:true,keywords:v,contains:ae};const V={variants:[{match:[/class/,/\s+/,p,/\s+/,/extends/,/\s+/,r.concat(p,"(",r.concat(/\./,p),")*")],scope:{1:"keyword",3:"title.class",5:"keyword",7:"title.class.inherited"}},{match:[/class/,/\s+/,p],scope:{1:"keyword",3:"title.class"}}]};const ee={relevance:0,match:r.either(/\bJSON/,/\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/,/\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/,/\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/),className:"title.class",keywords:{_:[...l,...u]}};const le={label:"use_strict",className:"meta",relevance:10,begin:/^\s*['"]use (strict|asm)['"]/};const Ce={variants:[{match:[/function/,/\s+/,p,/(?=\s*\()/]},{match:[/function/,/\s*(?=\()/]}],className:{1:"keyword",3:"title.function"},label:"func.def",contains:[Y],illegal:/%/};const Ie={relevance:0,match:/\b[A-Z][A-Z_0-9]+\b/,className:"variable.constant"};function we(Q){return r.concat("(?!",Q.join("|"),")")}t(we,"noneOf");const Ae={match:r.concat(/\b/,we([...c,"super","import"].map(Q=>`${Q}\\s*\\(`)),p,r.lookahead(/\s*\(/)),className:"title.function",relevance:0};const De={begin:r.concat(/\./,r.lookahead(r.concat(p,/(?![0-9A-Za-z$_(])/))),end:p,excludeBegin:true,keywords:"prototype",className:"property",relevance:0};const Ee={match:[/get|set/,/\s+/,p,/(?=\()/],className:{1:"keyword",3:"title.function"},contains:[{begin:/\(\)/},Y]};const he="(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|"+s.UNDERSCORE_IDENT_RE+")\\s*=>";const Se={match:[/const|var|let/,/\s+/,p,/\s*/,/=\s*/,/(async\s*)?/,r.lookahead(he)],keywords:"async",className:{1:"keyword",3:"title.function"},contains:[Y]};return{name:"JavaScript",aliases:["js","jsx","mjs","cjs"],keywords:v,exports:{PARAMS_CONTAINS:ae,CLASS_REFERENCE:ee},illegal:/#(?![$_A-z])/,contains:[s.SHEBANG({label:"shebang",binary:"node",relevance:5}),le,s.APOS_STRING_MODE,s.QUOTE_STRING_MODE,B,P,k,D,H,{match:/\$\d+/},$,ee,{scope:"attr",match:p+r.lookahead(":"),relevance:0},Se,{begin:"("+s.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",relevance:0,contains:[H,s.REGEXP_MODE,{className:"function",begin:he,returnBegin:true,end:"\\s*=>",contains:[{className:"params",variants:[{begin:s.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:true},{begin:/(\s*)\(/,end:/\)/,excludeBegin:true,excludeEnd:true,keywords:v,contains:ae}]}]},{begin:/,/,relevance:0},{match:/\s+/,relevance:0},{variants:[{begin:E.begin,end:E.end},{match:h},{begin:y.begin,"on:begin":y.isTrulyOpeningTag,end:y.end}],subLanguage:"xml",contains:[{begin:y.begin,end:y.end,skip:true,contains:["self"]}]}]},Ce,{beginKeywords:"while if switch catch for"},{begin:"\\b(?!function)"+s.UNDERSCORE_IDENT_RE+"\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",returnBegin:true,label:"func.def",contains:[Y,s.inherit(s.TITLE_MODE,{begin:p,className:"title.function"})]},{match:/\.\.\./,relevance:0},De,{match:"\\$"+p,relevance:0},{match:[/\bconstructor(?=\s*\()/],className:{1:"title.function"},contains:[Y]},Ae,Ie,V,Ee,{match:/\$[(.]/}]}}t(m,"javascript");Pn=m;return Pn}t(Ia,"requireJavascript");var Fn;var xt;function Da(){if(xt)return Fn;xt=1;function i(e){const a={className:"attr",begin:/"(\\.|[^\\"\r\n])*"(?=\s*:)/,relevance:1.01};const l={match:/[{}[\],:]/,className:"punctuation",relevance:0};const u=["true","false","null"];const c={scope:"literal",beginKeywords:u.join(" ")};return{name:"JSON",aliases:["jsonc"],keywords:{literal:u},contains:[a,l,e.QUOTE_STRING_MODE,c,e.C_NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE],illegal:"\\S"}}t(i,"json");Fn=i;return Fn}t(Da,"requireJson");var zn;var Ct;function La(){if(Ct)return zn;Ct=1;var i="[0-9](_*[0-9])*";var e=`\\.(${i})`;var a="[0-9a-fA-F](_*[0-9a-fA-F])*";var l={className:"number",variants:[{begin:`(\\b(${i})((${e})|\\.)?|(${e}))[eE][+-]?(${i})[fFdD]?\\b`},{begin:`\\b(${i})((${e})[fFdD]?\\b|\\.([fFdD]\\b)?)`},{begin:`(${e})[fFdD]?\\b`},{begin:`\\b(${i})[fFdD]\\b`},{begin:`\\b0[xX]((${a})\\.?|(${a})?\\.(${a}))[pP][+-]?(${i})[fFdD]?\\b`},{begin:"\\b(0|[1-9](_*[0-9])*)[lL]?\\b"},{begin:`\\b0[xX](${a})[lL]?\\b`},{begin:"\\b0(_*[0-7])*[lL]?\\b"},{begin:"\\b0[bB][01](_*[01])*[lL]?\\b"}],relevance:0};function u(c){const g={keyword:"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual",built_in:"Byte Short Char Int Long Boolean Float Double Void Unit Nothing",literal:"true false null"};const _={className:"keyword",begin:/\b(break|continue|return|this)\b/,starts:{contains:[{className:"symbol",begin:/@\w+/}]}};const m={className:"symbol",begin:c.UNDERSCORE_IDENT_RE+"@"};const s={className:"subst",begin:/\$\{/,end:/\}/,contains:[c.C_NUMBER_MODE]};const r={className:"variable",begin:"\\$"+c.UNDERSCORE_IDENT_RE};const d={className:"string",variants:[{begin:'"""',end:'"""(?=[^"])',contains:[r,s]},{begin:"'",end:"'",illegal:/\n/,contains:[c.BACKSLASH_ESCAPE]},{begin:'"',end:'"',illegal:/\n/,contains:[c.BACKSLASH_ESCAPE,r,s]}]};s.contains.push(d);const p={className:"meta",begin:"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\s*:(?:\\s*"+c.UNDERSCORE_IDENT_RE+")?"};const E={className:"meta",begin:"@"+c.UNDERSCORE_IDENT_RE,contains:[{begin:/\(/,end:/\)/,contains:[c.inherit(d,{className:"string"}),"self"]}]};const h=l;const y=c.COMMENT("/\\*","\\*/",{contains:[c.C_BLOCK_COMMENT_MODE]});const v={variants:[{className:"type",begin:c.UNDERSCORE_IDENT_RE},{begin:/\(/,end:/\)/,contains:[]}]};const w=v;w.variants[1].contains=[v];v.variants[1].contains=[w];return{name:"Kotlin",aliases:["kt","kts"],keywords:g,contains:[c.COMMENT("/\\*\\*","\\*/",{relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+"}]}),c.C_LINE_COMMENT_MODE,y,_,m,p,E,{className:"function",beginKeywords:"fun",end:"[(]|$",returnBegin:true,excludeEnd:true,keywords:g,relevance:5,contains:[{begin:c.UNDERSCORE_IDENT_RE+"\\s*\\(",returnBegin:true,relevance:0,contains:[c.UNDERSCORE_TITLE_MODE]},{className:"type",begin:/</,end:/>/,keywords:"reified",relevance:0},{className:"params",begin:/\(/,end:/\)/,endsParent:true,keywords:g,relevance:0,contains:[{begin:/:/,end:/[=,\/]/,endsWithParent:true,contains:[v,c.C_LINE_COMMENT_MODE,y],relevance:0},c.C_LINE_COMMENT_MODE,y,p,E,d,c.C_NUMBER_MODE]},y]},{begin:[/class|interface|trait/,/\s+/,c.UNDERSCORE_IDENT_RE],beginScope:{3:"title.class"},keywords:"class interface trait",end:/[:\{(]|$/,excludeEnd:true,illegal:"extends implements",contains:[{beginKeywords:"public protected internal private constructor"},c.UNDERSCORE_TITLE_MODE,{className:"type",begin:/</,end:/>/,excludeBegin:true,excludeEnd:true,relevance:0},{className:"type",begin:/[,:]\s*/,end:/[<\(,){\s]|$/,excludeBegin:true,returnEnd:true},p,E]},d,{className:"meta",begin:"^#!/usr/bin/env",end:"$",illegal:"\n"},h]}}t(u,"kotlin");zn=u;return zn}t(La,"requireKotlin");var $n;var It;function Ba(){if(It)return $n;It=1;const i=t(r=>{return{IMPORTANT:{scope:"meta",begin:"!important"},BLOCK_COMMENT:r.C_BLOCK_COMMENT_MODE,HEXCOLOR:{scope:"number",begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/},FUNCTION_DISPATCH:{className:"built_in",begin:/[\w-]+(?=\()/},ATTRIBUTE_SELECTOR_MODE:{scope:"selector-attr",begin:/\[/,end:/\]/,illegal:"$",contains:[r.APOS_STRING_MODE,r.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{scope:"number",begin:r.NUMBER_RE+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",relevance:0},CSS_VARIABLE:{className:"attr",begin:/--[A-Za-z_][A-Za-z0-9_-]*/}}},"MODES");const e=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","main","mark","menu","nav","object","ol","optgroup","option","p","picture","q","quote","samp","section","select","source","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"];const a=["defs","g","marker","mask","pattern","svg","switch","symbol","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feFlood","feGaussianBlur","feImage","feMerge","feMorphology","feOffset","feSpecularLighting","feTile","feTurbulence","linearGradient","radialGradient","stop","circle","ellipse","image","line","path","polygon","polyline","rect","text","use","textPath","tspan","foreignObject","clipPath"];const l=[...e,...a];const u=["any-hover","any-pointer","aspect-ratio","color","color-gamut","color-index","device-aspect-ratio","device-height","device-width","display-mode","forced-colors","grid","height","hover","inverted-colors","monochrome","orientation","overflow-block","overflow-inline","pointer","prefers-color-scheme","prefers-contrast","prefers-reduced-motion","prefers-reduced-transparency","resolution","scan","scripting","update","width","min-width","max-width","min-height","max-height"].sort().reverse();const c=["active","any-link","blank","checked","current","default","defined","dir","disabled","drop","empty","enabled","first","first-child","first-of-type","fullscreen","future","focus","focus-visible","focus-within","has","host","host-context","hover","indeterminate","in-range","invalid","is","lang","last-child","last-of-type","left","link","local-link","not","nth-child","nth-col","nth-last-child","nth-last-col","nth-last-of-type","nth-of-type","only-child","only-of-type","optional","out-of-range","past","placeholder-shown","read-only","read-write","required","right","root","scope","target","target-within","user-invalid","valid","visited","where"].sort().reverse();const g=["after","backdrop","before","cue","cue-region","first-letter","first-line","grammar-error","marker","part","placeholder","selection","slotted","spelling-error"].sort().reverse();const _=["accent-color","align-content","align-items","align-self","alignment-baseline","all","anchor-name","animation","animation-composition","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-range","animation-range-end","animation-range-start","animation-timeline","animation-timing-function","appearance","aspect-ratio","backdrop-filter","backface-visibility","background","background-attachment","background-blend-mode","background-clip","background-color","background-image","background-origin","background-position","background-position-x","background-position-y","background-repeat","background-size","baseline-shift","block-size","border","border-block","border-block-color","border-block-end","border-block-end-color","border-block-end-style","border-block-end-width","border-block-start","border-block-start-color","border-block-start-style","border-block-start-width","border-block-style","border-block-width","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-end-end-radius","border-end-start-radius","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-inline","border-inline-color","border-inline-end","border-inline-end-color","border-inline-end-style","border-inline-end-width","border-inline-start","border-inline-start-color","border-inline-start-style","border-inline-start-width","border-inline-style","border-inline-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-start-end-radius","border-start-start-radius","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-align","box-decoration-break","box-direction","box-flex","box-flex-group","box-lines","box-ordinal-group","box-orient","box-pack","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","caret-color","clear","clip","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","color-scheme","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","contain","contain-intrinsic-block-size","contain-intrinsic-height","contain-intrinsic-inline-size","contain-intrinsic-size","contain-intrinsic-width","container","container-name","container-type","content","content-visibility","counter-increment","counter-reset","counter-set","cue","cue-after","cue-before","cursor","cx","cy","direction","display","dominant-baseline","empty-cells","enable-background","field-sizing","fill","fill-opacity","fill-rule","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","flood-color","flood-opacity","flow","font","font-display","font-family","font-feature-settings","font-kerning","font-language-override","font-optical-sizing","font-palette","font-size","font-size-adjust","font-smooth","font-smoothing","font-stretch","font-style","font-synthesis","font-synthesis-position","font-synthesis-small-caps","font-synthesis-style","font-synthesis-weight","font-variant","font-variant-alternates","font-variant-caps","font-variant-east-asian","font-variant-emoji","font-variant-ligatures","font-variant-numeric","font-variant-position","font-variation-settings","font-weight","forced-color-adjust","gap","glyph-orientation-horizontal","glyph-orientation-vertical","grid","grid-area","grid-auto-columns","grid-auto-flow","grid-auto-rows","grid-column","grid-column-end","grid-column-start","grid-gap","grid-row","grid-row-end","grid-row-start","grid-template","grid-template-areas","grid-template-columns","grid-template-rows","hanging-punctuation","height","hyphenate-character","hyphenate-limit-chars","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","initial-letter","initial-letter-align","inline-size","inset","inset-area","inset-block","inset-block-end","inset-block-start","inset-inline","inset-inline-end","inset-inline-start","isolation","justify-content","justify-items","justify-self","kerning","left","letter-spacing","lighting-color","line-break","line-height","line-height-step","list-style","list-style-image","list-style-position","list-style-type","margin","margin-block","margin-block-end","margin-block-start","margin-bottom","margin-inline","margin-inline-end","margin-inline-start","margin-left","margin-right","margin-top","margin-trim","marker","marker-end","marker-mid","marker-start","marks","mask","mask-border","mask-border-mode","mask-border-outset","mask-border-repeat","mask-border-slice","mask-border-source","mask-border-width","mask-clip","mask-composite","mask-image","mask-mode","mask-origin","mask-position","mask-repeat","mask-size","mask-type","masonry-auto-flow","math-depth","math-shift","math-style","max-block-size","max-height","max-inline-size","max-width","min-block-size","min-height","min-inline-size","min-width","mix-blend-mode","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","offset","offset-anchor","offset-distance","offset-path","offset-position","offset-rotate","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-anchor","overflow-block","overflow-clip-margin","overflow-inline","overflow-wrap","overflow-x","overflow-y","overlay","overscroll-behavior","overscroll-behavior-block","overscroll-behavior-inline","overscroll-behavior-x","overscroll-behavior-y","padding","padding-block","padding-block-end","padding-block-start","padding-bottom","padding-inline","padding-inline-end","padding-inline-start","padding-left","padding-right","padding-top","page","page-break-after","page-break-before","page-break-inside","paint-order","pause","pause-after","pause-before","perspective","perspective-origin","place-content","place-items","place-self","pointer-events","position","position-anchor","position-visibility","print-color-adjust","quotes","r","resize","rest","rest-after","rest-before","right","rotate","row-gap","ruby-align","ruby-position","scale","scroll-behavior","scroll-margin","scroll-margin-block","scroll-margin-block-end","scroll-margin-block-start","scroll-margin-bottom","scroll-margin-inline","scroll-margin-inline-end","scroll-margin-inline-start","scroll-margin-left","scroll-margin-right","scroll-margin-top","scroll-padding","scroll-padding-block","scroll-padding-block-end","scroll-padding-block-start","scroll-padding-bottom","scroll-padding-inline","scroll-padding-inline-end","scroll-padding-inline-start","scroll-padding-left","scroll-padding-right","scroll-padding-top","scroll-snap-align","scroll-snap-stop","scroll-snap-type","scroll-timeline","scroll-timeline-axis","scroll-timeline-name","scrollbar-color","scrollbar-gutter","scrollbar-width","shape-image-threshold","shape-margin","shape-outside","shape-rendering","speak","speak-as","src","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tab-size","table-layout","text-align","text-align-all","text-align-last","text-anchor","text-combine-upright","text-decoration","text-decoration-color","text-decoration-line","text-decoration-skip","text-decoration-skip-ink","text-decoration-style","text-decoration-thickness","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-indent","text-justify","text-orientation","text-overflow","text-rendering","text-shadow","text-size-adjust","text-transform","text-underline-offset","text-underline-position","text-wrap","text-wrap-mode","text-wrap-style","timeline-scope","top","touch-action","transform","transform-box","transform-origin","transform-style","transition","transition-behavior","transition-delay","transition-duration","transition-property","transition-timing-function","translate","unicode-bidi","user-modify","user-select","vector-effect","vertical-align","view-timeline","view-timeline-axis","view-timeline-inset","view-timeline-name","view-transition-name","visibility","voice-balance","voice-duration","voice-family","voice-pitch","voice-range","voice-rate","voice-stress","voice-volume","white-space","white-space-collapse","widows","width","will-change","word-break","word-spacing","word-wrap","writing-mode","x","y","z-index","zoom"].sort().reverse();const m=c.concat(g).sort().reverse();function s(r){const d=i(r);const p=m;const E="and or not only";const h="[\\w-]+";const y="("+h+"|@\\{"+h+"\\})";const v=[];const w=[];const T=t(function(te){return{className:"string",begin:"~?"+te+".*?"+te}},"STRING_MODE");const A=t(function(te,ae,Y){return{className:te,begin:ae,relevance:Y}},"IDENT_MODE");const $={$pattern:/[a-z-]+/,keyword:E,attribute:u.join(" ")};const C={begin:"\\(",end:"\\)",contains:w,keywords:$,relevance:0};w.push(r.C_LINE_COMMENT_MODE,r.C_BLOCK_COMMENT_MODE,T("'"),T('"'),d.CSS_NUMBER_MODE,{begin:"(url|data-uri)\\(",starts:{className:"string",end:"[\\)\\n]",excludeEnd:true}},d.HEXCOLOR,C,A("variable","@@?"+h,10),A("variable","@\\{"+h+"\\}"),A("built_in","~?`[^`]*?`"),{className:"attribute",begin:h+"\\s*:",end:":",returnBegin:true,excludeEnd:true},d.IMPORTANT,{beginKeywords:"and not"},d.FUNCTION_DISPATCH);const B=w.concat({begin:/\{/,end:/\}/,contains:v});const P={beginKeywords:"when",endsWithParent:true,contains:[{beginKeywords:"and not"}].concat(w)};const k={begin:y+"\\s*:",returnBegin:true,end:/[;}]/,relevance:0,contains:[{begin:/-(webkit|moz|ms|o)-/},d.CSS_VARIABLE,{className:"attribute",begin:"\\b("+_.join("|")+")\\b",end:/(?=:)/,starts:{endsWithParent:true,illegal:"[<=$]",relevance:0,contains:w}}]};const D={className:"keyword",begin:"@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b",starts:{end:"[;{}]",keywords:$,returnEnd:true,contains:w,relevance:0}};const K={className:"variable",variants:[{begin:"@"+h+"\\s*:",relevance:15},{begin:"@"+h}],starts:{end:"[;}]",returnEnd:true,contains:B}};const H={variants:[{begin:"[\\.#:&\\[>]",end:"[;{}]"},{begin:y,end:/\{/}],returnBegin:true,returnEnd:true,illegal:`[<='$"]`,relevance:0,contains:[r.C_LINE_COMMENT_MODE,r.C_BLOCK_COMMENT_MODE,P,A("keyword","all\\b"),A("variable","@\\{"+h+"\\}"),{begin:"\\b("+l.join("|")+")\\b",className:"selector-tag"},d.CSS_NUMBER_MODE,A("selector-tag",y,0),A("selector-id","#"+y),A("selector-class","\\."+y,0),A("selector-tag","&",0),d.ATTRIBUTE_SELECTOR_MODE,{className:"selector-pseudo",begin:":("+c.join("|")+")"},{className:"selector-pseudo",begin:":(:)?("+g.join("|")+")"},{begin:/\(/,end:/\)/,relevance:0,contains:B},{begin:"!important"},d.FUNCTION_DISPATCH]};const ce={begin:h+`:(:)?(${p.join("|")})`,returnBegin:true,contains:[H]};v.push(r.C_LINE_COMMENT_MODE,r.C_BLOCK_COMMENT_MODE,D,K,ce,k,H,P,d.FUNCTION_DISPATCH);return{name:"Less",case_insensitive:true,illegal:`[=>'/<($"]`,contains:v}}t(s,"less");$n=s;return $n}t(Ba,"requireLess");var Gn;var Dt;function Ua(){if(Dt)return Gn;Dt=1;function i(e){const a="\\[=*\\[";const l="\\]=*\\]";const u={begin:a,end:l,contains:["self"]};const c=[e.COMMENT("--(?!"+a+")","$"),e.COMMENT("--"+a,l,{contains:[u],relevance:10})];return{name:"Lua",aliases:["pluto"],keywords:{$pattern:e.UNDERSCORE_IDENT_RE,literal:"true false nil",keyword:"and break do else elseif end for goto if in local not or repeat return then until while",built_in:"_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len __gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall arg self coroutine resume yield status wrap create running debug getupvalue debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv io lines write close flush open output type read stderr stdin input stdout popen tmpfile math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower table setn insert getn foreachi maxn foreach concat sort remove"},contains:c.concat([{className:"function",beginKeywords:"function",end:"\\)",contains:[e.inherit(e.TITLE_MODE,{begin:"([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"}),{className:"params",begin:"\\(",endsWithParent:true,contains:c}].concat(c)},e.C_NUMBER_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{className:"string",begin:a,end:l,contains:[u],relevance:5}])}}t(i,"lua");Gn=i;return Gn}t(Ua,"requireLua");var Kn;var Lt;function Pa(){if(Lt)return Kn;Lt=1;function i(e){const a={className:"variable",variants:[{begin:"\\$\\("+e.UNDERSCORE_IDENT_RE+"\\)",contains:[e.BACKSLASH_ESCAPE]},{begin:/\$[@%<?\^\+\*]/}]};const l={className:"string",begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,a]};const u={className:"variable",begin:/\$\([\w-]+\s/,end:/\)/,keywords:{built_in:"subst patsubst strip findstring filter filter-out sort word wordlist firstword lastword dir notdir suffix basename addsuffix addprefix join wildcard realpath abspath error warning shell origin flavor foreach if or and call eval file value"},contains:[a,l]};const c={begin:"^"+e.UNDERSCORE_IDENT_RE+"\\s*(?=[:+?]?=)"};const g={className:"meta",begin:/^\.PHONY:/,end:/$/,keywords:{$pattern:/[\.\w]+/,keyword:".PHONY"}};const _={className:"section",begin:/^[^\s]+:/,end:/$/,contains:[a]};return{name:"Makefile",aliases:["mk","mak","make"],keywords:{$pattern:/[\w-]+/,keyword:"define endef undefine ifdef ifndef ifeq ifneq else endif include -include sinclude override export unexport private vpath"},contains:[e.HASH_COMMENT_MODE,a,l,u,c,g,_]}}t(i,"makefile");Kn=i;return Kn}t(Pa,"requireMakefile");var qn;var Bt;function Fa(){if(Bt)return qn;Bt=1;function i(e){const a=e.regex;const l=["abs","accept","alarm","and","atan2","bind","binmode","bless","break","caller","chdir","chmod","chomp","chop","chown","chr","chroot","class","close","closedir","connect","continue","cos","crypt","dbmclose","dbmopen","defined","delete","die","do","dump","each","else","elsif","endgrent","endhostent","endnetent","endprotoent","endpwent","endservent","eof","eval","exec","exists","exit","exp","fcntl","field","fileno","flock","for","foreach","fork","format","formline","getc","getgrent","getgrgid","getgrnam","gethostbyaddr","gethostbyname","gethostent","getlogin","getnetbyaddr","getnetbyname","getnetent","getpeername","getpgrp","getpriority","getprotobyname","getprotobynumber","getprotoent","getpwent","getpwnam","getpwuid","getservbyname","getservbyport","getservent","getsockname","getsockopt","given","glob","gmtime","goto","grep","gt","hex","if","index","int","ioctl","join","keys","kill","last","lc","lcfirst","length","link","listen","local","localtime","log","lstat","lt","ma","map","method","mkdir","msgctl","msgget","msgrcv","msgsnd","my","ne","next","no","not","oct","open","opendir","or","ord","our","pack","package","pipe","pop","pos","print","printf","prototype","push","q|0","qq","quotemeta","qw","qx","rand","read","readdir","readline","readlink","readpipe","recv","redo","ref","rename","require","reset","return","reverse","rewinddir","rindex","rmdir","say","scalar","seek","seekdir","select","semctl","semget","semop","send","setgrent","sethostent","setnetent","setpgrp","setpriority","setprotoent","setpwent","setservent","setsockopt","shift","shmctl","shmget","shmread","shmwrite","shutdown","sin","sleep","socket","socketpair","sort","splice","split","sprintf","sqrt","srand","stat","state","study","sub","substr","symlink","syscall","sysopen","sysread","sysseek","system","syswrite","tell","telldir","tie","tied","time","times","tr","truncate","uc","ucfirst","umask","undef","unless","unlink","unpack","unshift","untie","until","use","utime","values","vec","wait","waitpid","wantarray","warn","when","while","write","x|0","xor","y|0"];const u=/[dualxmsipngr]{0,12}/;const c={$pattern:/[\w.]+/,keyword:l.join(" ")};const g={className:"subst",begin:"[$@]\\{",end:"\\}",keywords:c};const _={begin:/->\{/,end:/\}/};const m={scope:"attr",match:/\s+:\s*\w+(\s*\(.*?\))?/};const s={scope:"variable",variants:[{begin:/\$\d/},{begin:a.concat(/[$%@](?!")(\^\w\b|#\w+(::\w+)*|\{\w+\}|\w+(::\w*)*)/,`(?![A-Za-z])(?![@$%])`)},{begin:/[$%@](?!")[^\s\w{=]|\$=/,relevance:0}],contains:[m]};const r={className:"number",variants:[{match:/0?\.[0-9][0-9_]+\b/},{match:/\bv?(0|[1-9][0-9_]*(\.[0-9_]+)?|[1-9][0-9_]*)\b/},{match:/\b0[0-7][0-7_]*\b/},{match:/\b0x[0-9a-fA-F][0-9a-fA-F_]*\b/},{match:/\b0b[0-1][0-1_]*\b/}],relevance:0};const d=[e.BACKSLASH_ESCAPE,g,s];const p=[/!/,/\//,/\|/,/\?/,/'/,/"/,/#/];const E=t((v,w,T="\\1")=>{const A=T==="\\1"?T:a.concat(T,w);return a.concat(a.concat("(?:",v,")"),w,/(?:\\.|[^\\\/])*?/,A,/(?:\\.|[^\\\/])*?/,T,u)},"PAIRED_DOUBLE_RE");const h=t((v,w,T)=>{return a.concat(a.concat("(?:",v,")"),w,/(?:\\.|[^\\\/])*?/,T,u)},"PAIRED_RE");const y=[s,e.HASH_COMMENT_MODE,e.COMMENT(/^=\w/,/=cut/,{endsWithParent:true}),_,{className:"string",contains:d,variants:[{begin:"q[qwxr]?\\s*\\(",end:"\\)",relevance:5},{begin:"q[qwxr]?\\s*\\[",end:"\\]",relevance:5},{begin:"q[qwxr]?\\s*\\{",end:"\\}",relevance:5},{begin:"q[qwxr]?\\s*\\|",end:"\\|",relevance:5},{begin:"q[qwxr]?\\s*<",end:">",relevance:5},{begin:"qw\\s+q",end:"q",relevance:5},{begin:"'",end:"'",contains:[e.BACKSLASH_ESCAPE]},{begin:'"',end:'"'},{begin:"`",end:"`",contains:[e.BACKSLASH_ESCAPE]},{begin:/\{\w+\}/,relevance:0},{begin:"-?\\w+\\s*=>",relevance:0}]},r,{begin:"(\\/\\/|"+e.RE_STARTERS_RE+"|\\b(split|return|print|reverse|grep)\\b)\\s*",keywords:"split return print reverse grep",relevance:0,contains:[e.HASH_COMMENT_MODE,{className:"regexp",variants:[{begin:E("s|tr|y",a.either(...p,{capture:true}))},{begin:E("s|tr|y","\\(","\\)")},{begin:E("s|tr|y","\\[","\\]")},{begin:E("s|tr|y","\\{","\\}")}],relevance:2},{className:"regexp",variants:[{begin:/(m|qr)\/\//,relevance:0},{begin:h("(?:m|qr)?",/\//,/\//)},{begin:h("m|qr",a.either(...p,{capture:true}),/\1/)},{begin:h("m|qr",/\(/,/\)/)},{begin:h("m|qr",/\[/,/\]/)},{begin:h("m|qr",/\{/,/\}/)}]}]},{className:"function",beginKeywords:"sub method",end:"(\\s*\\(.*?\\))?[;{]",excludeEnd:true,relevance:5,contains:[e.TITLE_MODE,m]},{className:"class",beginKeywords:"class",end:"[;{]",excludeEnd:true,relevance:5,contains:[e.TITLE_MODE,m,r]},{begin:"-\\w\\b",relevance:0},{begin:"^__DATA__$",end:"^__END__$",subLanguage:"mojolicious",contains:[{begin:"^@@.*",end:"$",className:"comment"}]}];g.contains=y;_.contains=y;return{name:"Perl",aliases:["pl","pm"],keywords:c,contains:y}}t(i,"perl");qn=i;return qn}t(Fa,"requirePerl");var Hn;var Ut;function za(){if(Ut)return Hn;Ut=1;function i(e){const a={className:"built_in",begin:"\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\w+"};const l=/[a-zA-Z@][a-zA-Z0-9_]*/;const u=["int","float","char","unsigned","signed","short","long","double","wchar_t","unichar","void","bool","BOOL","id|0","_Bool"];const c=["while","export","sizeof","typedef","const","struct","for","union","volatile","static","mutable","if","do","return","goto","enum","else","break","extern","asm","case","default","register","explicit","typename","switch","continue","inline","readonly","assign","readwrite","self","@synchronized","id","typeof","nonatomic","IBOutlet","IBAction","strong","weak","copy","in","out","inout","bycopy","byref","oneway","__strong","__weak","__block","__autoreleasing","@private","@protected","@public","@try","@property","@end","@throw","@catch","@finally","@autoreleasepool","@synthesize","@dynamic","@selector","@optional","@required","@encode","@package","@import","@defs","@compatibility_alias","__bridge","__bridge_transfer","__bridge_retained","__bridge_retain","__covariant","__contravariant","__kindof","_Nonnull","_Nullable","_Null_unspecified","__FUNCTION__","__PRETTY_FUNCTION__","__attribute__","getter","setter","retain","unsafe_unretained","nonnull","nullable","null_unspecified","null_resettable","class","instancetype","NS_DESIGNATED_INITIALIZER","NS_UNAVAILABLE","NS_REQUIRES_SUPER","NS_RETURNS_INNER_POINTER","NS_INLINE","NS_AVAILABLE","NS_DEPRECATED","NS_ENUM","NS_OPTIONS","NS_SWIFT_UNAVAILABLE","NS_ASSUME_NONNULL_BEGIN","NS_ASSUME_NONNULL_END","NS_REFINED_FOR_SWIFT","NS_SWIFT_NAME","NS_SWIFT_NOTHROW","NS_DURING","NS_HANDLER","NS_ENDHANDLER","NS_VALUERETURN","NS_VOIDRETURN"];const g=["false","true","FALSE","TRUE","nil","YES","NO","NULL"];const _=["dispatch_once_t","dispatch_queue_t","dispatch_sync","dispatch_async","dispatch_once"];const m={"variable.language":["this","super"],$pattern:l,keyword:c,literal:g,built_in:_,type:u};const s={$pattern:l,keyword:["@interface","@class","@protocol","@implementation"]};return{name:"Objective-C",aliases:["mm","objc","obj-c","obj-c++","objective-c++"],keywords:m,illegal:"</",contains:[a,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.C_NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{className:"string",variants:[{begin:'@"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE]}]},{className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:"if else elif endif define undef warning error line pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},e.inherit(e.QUOTE_STRING_MODE,{className:"string"}),{className:"string",begin:/<.*?>/,end:/$/,illegal:"\\n"},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:"class",begin:"("+s.keyword.join("|")+")\\b",end:/(\{|$)/,excludeEnd:true,keywords:s,contains:[e.UNDERSCORE_TITLE_MODE]},{begin:"\\."+e.UNDERSCORE_IDENT_RE,relevance:0}]}}t(i,"objectivec");Hn=i;return Hn}t(za,"requireObjectivec");var Wn;var Pt;function $a(){if(Pt)return Wn;Pt=1;function i(e){const a=e.regex;const l=/(?![A-Za-z0-9])(?![$])/;const u=a.concat(/[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/,l);const c=a.concat(/(\\?[A-Z][a-z0-9_\x7f-\xff]+|\\?[A-Z]+(?=[A-Z][a-z0-9_\x7f-\xff])){1,}/,l);const g=a.concat(/[A-Z]+/,l);const _={scope:"variable",match:"\\$+"+u};const m={scope:"meta",variants:[{begin:/<\?php/,relevance:10},{begin:/<\?=/},{begin:/<\?/,relevance:.1},{begin:/\?>/}]};const s={scope:"subst",variants:[{begin:/\$\w+/},{begin:/\{\$/,end:/\}/}]};const r=e.inherit(e.APOS_STRING_MODE,{illegal:null});const d=e.inherit(e.QUOTE_STRING_MODE,{illegal:null,contains:e.QUOTE_STRING_MODE.contains.concat(s)});const p={begin:/<<<[ \t]*(?:(\w+)|"(\w+)")\n/,end:/[ \t]*(\w+)\b/,contains:e.QUOTE_STRING_MODE.contains.concat(s),"on:begin":t((Y,V)=>{V.data._beginMatch=Y[1]||Y[2]},"on:begin"),"on:end":t((Y,V)=>{if(V.data._beginMatch!==Y[1])V.ignoreMatch()},"on:end")};const E=e.END_SAME_AS_BEGIN({begin:/<<<[ \t]*'(\w+)'\n/,end:/[ \t]*(\w+)\b/});const h="[ 	\n]";const y={scope:"string",variants:[d,r,p,E]};const v={scope:"number",variants:[{begin:`\\b0[bB][01]+(?:_[01]+)*\\b`},{begin:`\\b0[oO][0-7]+(?:_[0-7]+)*\\b`},{begin:`\\b0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*\\b`},{begin:`(?:\\b\\d+(?:_\\d+)*(\\.(?:\\d+(?:_\\d+)*))?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?`}],relevance:0};const w=["false","null","true"];const T=["__CLASS__","__DIR__","__FILE__","__FUNCTION__","__COMPILER_HALT_OFFSET__","__LINE__","__METHOD__","__NAMESPACE__","__TRAIT__","die","echo","exit","include","include_once","print","require","require_once","array","abstract","and","as","binary","bool","boolean","break","callable","case","catch","class","clone","const","continue","declare","default","do","double","else","elseif","empty","enddeclare","endfor","endforeach","endif","endswitch","endwhile","enum","eval","extends","final","finally","float","for","foreach","from","global","goto","if","implements","instanceof","insteadof","int","integer","interface","isset","iterable","list","match|0","mixed","new","never","object","or","private","protected","public","readonly","real","return","string","switch","throw","trait","try","unset","use","var","void","while","xor","yield"];const A=["Error|0","AppendIterator","ArgumentCountError","ArithmeticError","ArrayIterator","ArrayObject","AssertionError","BadFunctionCallException","BadMethodCallException","CachingIterator","CallbackFilterIterator","CompileError","Countable","DirectoryIterator","DivisionByZeroError","DomainException","EmptyIterator","ErrorException","Exception","FilesystemIterator","FilterIterator","GlobIterator","InfiniteIterator","InvalidArgumentException","IteratorIterator","LengthException","LimitIterator","LogicException","MultipleIterator","NoRewindIterator","OutOfBoundsException","OutOfRangeException","OuterIterator","OverflowException","ParentIterator","ParseError","RangeException","RecursiveArrayIterator","RecursiveCachingIterator","RecursiveCallbackFilterIterator","RecursiveDirectoryIterator","RecursiveFilterIterator","RecursiveIterator","RecursiveIteratorIterator","RecursiveRegexIterator","RecursiveTreeIterator","RegexIterator","RuntimeException","SeekableIterator","SplDoublyLinkedList","SplFileInfo","SplFileObject","SplFixedArray","SplHeap","SplMaxHeap","SplMinHeap","SplObjectStorage","SplObserver","SplPriorityQueue","SplQueue","SplStack","SplSubject","SplTempFileObject","TypeError","UnderflowException","UnexpectedValueException","UnhandledMatchError","ArrayAccess","BackedEnum","Closure","Fiber","Generator","Iterator","IteratorAggregate","Serializable","Stringable","Throwable","Traversable","UnitEnum","WeakReference","WeakMap","Directory","__PHP_Incomplete_Class","parent","php_user_filter","self","static","stdClass"];const $=t(Y=>{const V=[];Y.forEach(ee=>{V.push(ee);if(ee.toLowerCase()===ee){V.push(ee.toUpperCase())}else{V.push(ee.toLowerCase())}});return V},"dualCase");const C={keyword:T,literal:$(w),built_in:A};const B=t(Y=>{return Y.map(V=>{return V.replace(/\|\d+$/,"")})},"normalizeKeywords");const P={variants:[{match:[/new/,a.concat(h,"+"),a.concat("(?!",B(A).join("\\b|"),"\\b)"),c],scope:{1:"keyword",4:"title.class"}}]};const k=a.concat(u,"\\b(?!\\()");const D={variants:[{match:[a.concat(/::/,a.lookahead(/(?!class\b)/)),k],scope:{2:"variable.constant"}},{match:[/::/,/class/],scope:{2:"variable.language"}},{match:[c,a.concat(/::/,a.lookahead(/(?!class\b)/)),k],scope:{1:"title.class",3:"variable.constant"}},{match:[c,a.concat("::",a.lookahead(/(?!class\b)/))],scope:{1:"title.class"}},{match:[c,/::/,/class/],scope:{1:"title.class",3:"variable.language"}}]};const K={scope:"attr",match:a.concat(u,a.lookahead(":"),a.lookahead(/(?!::)/))};const H={relevance:0,begin:/\(/,end:/\)/,keywords:C,contains:[K,_,D,e.C_BLOCK_COMMENT_MODE,y,v,P]};const ce={relevance:0,match:[/\b/,a.concat("(?!fn\\b|function\\b|",B(T).join("\\b|"),"|",B(A).join("\\b|"),"\\b)"),u,a.concat(h,"*"),a.lookahead(/(?=\()/)],scope:{3:"title.function.invoke"},contains:[H]};H.contains.push(ce);const te=[K,D,e.C_BLOCK_COMMENT_MODE,y,v,P];const ae={begin:a.concat(/#\[\s*\\?/,a.either(c,g)),beginScope:"meta",end:/]/,endScope:"meta",keywords:{literal:w,keyword:["new","array"]},contains:[{begin:/\[/,end:/]/,keywords:{literal:w,keyword:["new","array"]},contains:["self",...te]},...te,{scope:"meta",variants:[{match:c},{match:g}]}]};return{case_insensitive:false,keywords:C,contains:[ae,e.HASH_COMMENT_MODE,e.COMMENT("//","$"),e.COMMENT("/\\*","\\*/",{contains:[{scope:"doctag",match:"@[A-Za-z]+"}]}),{match:/__halt_compiler\(\);/,keywords:"__halt_compiler",starts:{scope:"comment",end:e.MATCH_NOTHING_RE,contains:[{match:/\?>/,scope:"meta",endsParent:true}]}},m,{scope:"variable.language",match:/\$this\b/},_,ce,D,{match:[/const/,/\s/,u],scope:{1:"keyword",3:"variable.constant"}},P,{scope:"function",relevance:0,beginKeywords:"fn function",end:/[;{]/,excludeEnd:true,illegal:"[$%\\[]",contains:[{beginKeywords:"use"},e.UNDERSCORE_TITLE_MODE,{begin:"=>",endsParent:true},{scope:"params",begin:"\\(",end:"\\)",excludeBegin:true,excludeEnd:true,keywords:C,contains:["self",ae,_,D,e.C_BLOCK_COMMENT_MODE,y,v]}]},{scope:"class",variants:[{beginKeywords:"enum",illegal:/[($"]/},{beginKeywords:"class interface trait",illegal:/[:($"]/}],relevance:0,end:/\{/,excludeEnd:true,contains:[{beginKeywords:"extends implements"},e.UNDERSCORE_TITLE_MODE]},{beginKeywords:"namespace",relevance:0,end:";",illegal:/[.']/,contains:[e.inherit(e.UNDERSCORE_TITLE_MODE,{scope:"title.class"})]},{beginKeywords:"use",relevance:0,end:";",contains:[{match:/\b(as|const|function)\b/,scope:"keyword"},e.UNDERSCORE_TITLE_MODE]},y,v]}}t(i,"php");Wn=i;return Wn}t($a,"requirePhp");var Zn;var Ft;function Ga(){if(Ft)return Zn;Ft=1;function i(e){return{name:"PHP template",subLanguage:"xml",contains:[{begin:/<\?(php|=)?/,end:/\?>/,subLanguage:"php",contains:[{begin:"/\\*",end:"\\*/",skip:true},{begin:'b"',end:'"',skip:true},{begin:"b'",end:"'",skip:true},e.inherit(e.APOS_STRING_MODE,{illegal:null,className:null,contains:null,skip:true}),e.inherit(e.QUOTE_STRING_MODE,{illegal:null,className:null,contains:null,skip:true})]}]}}t(i,"phpTemplate");Zn=i;return Zn}t(Ga,"requirePhpTemplate");var Yn;var zt;function Ka(){if(zt)return Yn;zt=1;function i(e){return{name:"Plain text",aliases:["text","txt"],disableAutodetect:true}}t(i,"plaintext");Yn=i;return Yn}t(Ka,"requirePlaintext");var Xn;var $t;function qa(){if($t)return Xn;$t=1;function i(e){const a=e.regex;const l=new RegExp("[\\p{XID_Start}_]\\p{XID_Continue}*","u");const u=["and","as","assert","async","await","break","case","class","continue","def","del","elif","else","except","finally","for","from","global","if","import","in","is","lambda","match","nonlocal|10","not","or","pass","raise","return","try","while","with","yield"];const c=["__import__","abs","all","any","ascii","bin","bool","breakpoint","bytearray","bytes","callable","chr","classmethod","compile","complex","delattr","dict","dir","divmod","enumerate","eval","exec","filter","float","format","frozenset","getattr","globals","hasattr","hash","help","hex","id","input","int","isinstance","issubclass","iter","len","list","locals","map","max","memoryview","min","next","object","oct","open","ord","pow","print","property","range","repr","reversed","round","set","setattr","slice","sorted","staticmethod","str","sum","super","tuple","type","vars","zip"];const g=["__debug__","Ellipsis","False","None","NotImplemented","True"];const _=["Any","Callable","Coroutine","Dict","List","Literal","Generic","Optional","Sequence","Set","Tuple","Type","Union"];const m={$pattern:/[A-Za-z]\w+|__\w+__/,keyword:u,built_in:c,literal:g,type:_};const s={className:"meta",begin:/^(>>>|\.\.\.) /};const r={className:"subst",begin:/\{/,end:/\}/,keywords:m,illegal:/#/};const d={begin:/\{\{/,relevance:0};const p={className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE,s],relevance:10},{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?"""/,end:/"""/,contains:[e.BACKSLASH_ESCAPE,s],relevance:10},{begin:/([fF][rR]|[rR][fF]|[fF])'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE,s,d,r]},{begin:/([fF][rR]|[rR][fF]|[fF])"""/,end:/"""/,contains:[e.BACKSLASH_ESCAPE,s,d,r]},{begin:/([uU]|[rR])'/,end:/'/,relevance:10},{begin:/([uU]|[rR])"/,end:/"/,relevance:10},{begin:/([bB]|[bB][rR]|[rR][bB])'/,end:/'/},{begin:/([bB]|[bB][rR]|[rR][bB])"/,end:/"/},{begin:/([fF][rR]|[rR][fF]|[fF])'/,end:/'/,contains:[e.BACKSLASH_ESCAPE,d,r]},{begin:/([fF][rR]|[rR][fF]|[fF])"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,d,r]},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]};const E="[0-9](_?[0-9])*";const h=`(\\b(${E}))?\\.(${E})|\\b(${E})\\.`;const y=`\\b|${u.join("|")}`;const v={className:"number",relevance:0,variants:[{begin:`(\\b(${E})|(${h}))[eE][+-]?(${E})[jJ]?(?=${y})`},{begin:`(${h})[jJ]?`},{begin:`\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${y})`},{begin:`\\b0[bB](_?[01])+[lL]?(?=${y})`},{begin:`\\b0[oO](_?[0-7])+[lL]?(?=${y})`},{begin:`\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${y})`},{begin:`\\b(${E})[jJ](?=${y})`}]};const w={className:"comment",begin:a.lookahead(/# type:/),end:/$/,keywords:m,contains:[{begin:/# type:/},{begin:/#/,end:/\b\B/,endsWithParent:true}]};const T={className:"params",variants:[{className:"",begin:/\(\s*\)/,skip:true},{begin:/\(/,end:/\)/,excludeBegin:true,excludeEnd:true,keywords:m,contains:["self",s,v,p,e.HASH_COMMENT_MODE]}]};r.contains=[p,v,s];return{name:"Python",aliases:["py","gyp","ipython"],unicodeRegex:true,keywords:m,illegal:/(<\/|\?)|=>/,contains:[s,v,{scope:"variable.language",match:/\bself\b/},{beginKeywords:"if",relevance:0},{match:/\bor\b/,scope:"keyword"},p,w,e.HASH_COMMENT_MODE,{match:[/\bdef/,/\s+/,l],scope:{1:"keyword",3:"title.function"},contains:[T]},{variants:[{match:[/\bclass/,/\s+/,l,/\s*/,/\(\s*/,l,/\s*\)/]},{match:[/\bclass/,/\s+/,l]}],scope:{1:"keyword",3:"title.class",6:"title.class.inherited"}},{className:"meta",begin:/^[\t ]*@/,end:/(?=#)|$/,contains:[v,T,p]}]}}t(i,"python");Xn=i;return Xn}t(qa,"requirePython");var Vn;var Gt;function Ha(){if(Gt)return Vn;Gt=1;function i(e){return{aliases:["pycon"],contains:[{className:"meta.prompt",starts:{end:/ |$/,starts:{end:"$",subLanguage:"python"}},variants:[{begin:/^>>>(?=[ ]|$)/},{begin:/^\.\.\.(?=[ ]|$)/}]}]}}t(i,"pythonRepl");Vn=i;return Vn}t(Ha,"requirePythonRepl");var Qn;var Kt;function Wa(){if(Kt)return Qn;Kt=1;function i(e){const a=e.regex;const l=/(?:(?:[a-zA-Z]|\.[._a-zA-Z])[._a-zA-Z0-9]*)|\.(?!\d)/;const u=a.either(/0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*[pP][+-]?\d+i?/,/0[xX][0-9a-fA-F]+(?:[pP][+-]?\d+)?[Li]?/,/(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?[Li]?/);const c=/[=!<>:]=|\|\||&&|:::?|<-|<<-|->>|->|\|>|[-+*\/?!$&|:<=>@^~]|\*\*/;const g=a.either(/[()]/,/[{}]/,/\[\[/,/[[\]]/,/\\/,/,/);return{name:"R",keywords:{$pattern:l,keyword:"function if in break next repeat else for while",literal:"NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10",built_in:"LETTERS letters month.abb month.name pi T F abs acos acosh all any anyNA Arg as.call as.character as.complex as.double as.environment as.integer as.logical as.null.default as.numeric as.raw asin asinh atan atanh attr attributes baseenv browser c call ceiling class Conj cos cosh cospi cummax cummin cumprod cumsum digamma dim dimnames emptyenv exp expression floor forceAndCall gamma gc.time globalenv Im interactive invisible is.array is.atomic is.call is.character is.complex is.double is.environment is.expression is.finite is.function is.infinite is.integer is.language is.list is.logical is.matrix is.na is.name is.nan is.null is.numeric is.object is.pairlist is.raw is.recursive is.single is.symbol lazyLoadDBfetch length lgamma list log max min missing Mod names nargs nzchar oldClass on.exit pos.to.env proc.time prod quote range Re rep retracemem return round seq_along seq_len seq.int sign signif sin sinh sinpi sqrt standardGeneric substitute sum switch tan tanh tanpi tracemem trigamma trunc unclass untracemem UseMethod xtfrm"},contains:[e.COMMENT(/#'/,/$/,{contains:[{scope:"doctag",match:/@examples/,starts:{end:a.lookahead(a.either(/\n^#'\s*(?=@[a-zA-Z]+)/,/\n^(?!#')/)),endsParent:true}},{scope:"doctag",begin:"@param",end:/$/,contains:[{scope:"variable",variants:[{match:l},{match:/`(?:\\.|[^`\\])+`/}],endsParent:true}]},{scope:"doctag",match:/@[a-zA-Z]+/},{scope:"keyword",match:/\\[a-zA-Z]+/}]}),e.HASH_COMMENT_MODE,{scope:"string",contains:[e.BACKSLASH_ESCAPE],variants:[e.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\(/,end:/\)(-*)"/}),e.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\{/,end:/\}(-*)"/}),e.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\[/,end:/\](-*)"/}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\(/,end:/\)(-*)'/}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\{/,end:/\}(-*)'/}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\[/,end:/\](-*)'/}),{begin:'"',end:'"',relevance:0},{begin:"'",end:"'",relevance:0}]},{relevance:0,variants:[{scope:{1:"operator",2:"number"},match:[c,u]},{scope:{1:"operator",2:"number"},match:[/%[^%]*%/,u]},{scope:{1:"punctuation",2:"number"},match:[g,u]},{scope:{2:"number"},match:[/[^a-zA-Z0-9._]|^/,u]}]},{scope:{3:"operator"},match:[l,/\s+/,/<-/,/\s+/]},{scope:"operator",relevance:0,variants:[{match:c},{match:/%[^%]*%/}]},{scope:"punctuation",relevance:0,match:g},{begin:"`",end:"`",contains:[{begin:/\\./}]}]}}t(i,"r");Qn=i;return Qn}t(Wa,"requireR");var Jn;var qt;function Za(){if(qt)return Jn;qt=1;function i(e){const a=e.regex;const l=/(r#)?/;const u=a.concat(l,e.UNDERSCORE_IDENT_RE);const c=a.concat(l,e.IDENT_RE);const g={className:"title.function.invoke",relevance:0,begin:a.concat(/\b/,/(?!let|for|while|if|else|match\b)/,c,a.lookahead(/\s*\(/))};const _="([ui](8|16|32|64|128|size)|f(32|64))?";const m=["abstract","as","async","await","become","box","break","const","continue","crate","do","dyn","else","enum","extern","false","final","fn","for","if","impl","in","let","loop","macro","match","mod","move","mut","override","priv","pub","ref","return","self","Self","static","struct","super","trait","true","try","type","typeof","union","unsafe","unsized","use","virtual","where","while","yield"];const s=["true","false","Some","None","Ok","Err"];const r=["drop ","Copy","Send","Sized","Sync","Drop","Fn","FnMut","FnOnce","ToOwned","Clone","Debug","PartialEq","PartialOrd","Eq","Ord","AsRef","AsMut","Into","From","Default","Iterator","Extend","IntoIterator","DoubleEndedIterator","ExactSizeIterator","SliceConcatExt","ToString","assert!","assert_eq!","bitflags!","bytes!","cfg!","col!","concat!","concat_idents!","debug_assert!","debug_assert_eq!","env!","eprintln!","panic!","file!","format!","format_args!","include_bytes!","include_str!","line!","local_data_key!","module_path!","option_env!","print!","println!","select!","stringify!","try!","unimplemented!","unreachable!","vec!","write!","writeln!","macro_rules!","assert_ne!","debug_assert_ne!"];const d=["i8","i16","i32","i64","i128","isize","u8","u16","u32","u64","u128","usize","f32","f64","str","char","bool","Box","Option","Result","String","Vec"];return{name:"Rust",aliases:["rs"],keywords:{$pattern:e.IDENT_RE+"!?",type:d,keyword:m,literal:s,built_in:r},illegal:"</",contains:[e.C_LINE_COMMENT_MODE,e.COMMENT("/\\*","\\*/",{contains:["self"]}),e.inherit(e.QUOTE_STRING_MODE,{begin:/b?"/,illegal:null}),{className:"symbol",begin:/'[a-zA-Z_][a-zA-Z0-9_]*(?!')/},{scope:"string",variants:[{begin:/b?r(#*)"(.|\n)*?"\1(?!#)/},{begin:/b?'/,end:/'/,contains:[{scope:"char.escape",match:/\\('|\w|x\w{2}|u\w{4}|U\w{8})/}]}]},{className:"number",variants:[{begin:"\\b0b([01_]+)"+_},{begin:"\\b0o([0-7_]+)"+_},{begin:"\\b0x([A-Fa-f0-9_]+)"+_},{begin:"\\b(\\d[\\d_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)"+_}],relevance:0},{begin:[/fn/,/\s+/,u],className:{1:"keyword",3:"title.function"}},{className:"meta",begin:"#!?\\[",end:"\\]",contains:[{className:"string",begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE]}]},{begin:[/let/,/\s+/,/(?:mut\s+)?/,u],className:{1:"keyword",3:"keyword",4:"variable"}},{begin:[/for/,/\s+/,u,/\s+/,/in/],className:{1:"keyword",3:"variable",5:"keyword"}},{begin:[/type/,/\s+/,u],className:{1:"keyword",3:"title.class"}},{begin:[/(?:trait|enum|struct|union|impl|for)/,/\s+/,u],className:{1:"keyword",3:"title.class"}},{begin:e.IDENT_RE+"::",keywords:{keyword:"Self",built_in:r,type:d}},{className:"punctuation",begin:"->"},g]}}t(i,"rust");Jn=i;return Jn}t(Za,"requireRust");var jn;var Ht;function Ya(){if(Ht)return jn;Ht=1;const i=t(s=>{return{IMPORTANT:{scope:"meta",begin:"!important"},BLOCK_COMMENT:s.C_BLOCK_COMMENT_MODE,HEXCOLOR:{scope:"number",begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/},FUNCTION_DISPATCH:{className:"built_in",begin:/[\w-]+(?=\()/},ATTRIBUTE_SELECTOR_MODE:{scope:"selector-attr",begin:/\[/,end:/\]/,illegal:"$",contains:[s.APOS_STRING_MODE,s.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{scope:"number",begin:s.NUMBER_RE+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",relevance:0},CSS_VARIABLE:{className:"attr",begin:/--[A-Za-z_][A-Za-z0-9_-]*/}}},"MODES");const e=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","main","mark","menu","nav","object","ol","optgroup","option","p","picture","q","quote","samp","section","select","source","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"];const a=["defs","g","marker","mask","pattern","svg","switch","symbol","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feFlood","feGaussianBlur","feImage","feMerge","feMorphology","feOffset","feSpecularLighting","feTile","feTurbulence","linearGradient","radialGradient","stop","circle","ellipse","image","line","path","polygon","polyline","rect","text","use","textPath","tspan","foreignObject","clipPath"];const l=[...e,...a];const u=["any-hover","any-pointer","aspect-ratio","color","color-gamut","color-index","device-aspect-ratio","device-height","device-width","display-mode","forced-colors","grid","height","hover","inverted-colors","monochrome","orientation","overflow-block","overflow-inline","pointer","prefers-color-scheme","prefers-contrast","prefers-reduced-motion","prefers-reduced-transparency","resolution","scan","scripting","update","width","min-width","max-width","min-height","max-height"].sort().reverse();const c=["active","any-link","blank","checked","current","default","defined","dir","disabled","drop","empty","enabled","first","first-child","first-of-type","fullscreen","future","focus","focus-visible","focus-within","has","host","host-context","hover","indeterminate","in-range","invalid","is","lang","last-child","last-of-type","left","link","local-link","not","nth-child","nth-col","nth-last-child","nth-last-col","nth-last-of-type","nth-of-type","only-child","only-of-type","optional","out-of-range","past","placeholder-shown","read-only","read-write","required","right","root","scope","target","target-within","user-invalid","valid","visited","where"].sort().reverse();const g=["after","backdrop","before","cue","cue-region","first-letter","first-line","grammar-error","marker","part","placeholder","selection","slotted","spelling-error"].sort().reverse();const _=["accent-color","align-content","align-items","align-self","alignment-baseline","all","anchor-name","animation","animation-composition","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-range","animation-range-end","animation-range-start","animation-timeline","animation-timing-function","appearance","aspect-ratio","backdrop-filter","backface-visibility","background","background-attachment","background-blend-mode","background-clip","background-color","background-image","background-origin","background-position","background-position-x","background-position-y","background-repeat","background-size","baseline-shift","block-size","border","border-block","border-block-color","border-block-end","border-block-end-color","border-block-end-style","border-block-end-width","border-block-start","border-block-start-color","border-block-start-style","border-block-start-width","border-block-style","border-block-width","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-end-end-radius","border-end-start-radius","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-inline","border-inline-color","border-inline-end","border-inline-end-color","border-inline-end-style","border-inline-end-width","border-inline-start","border-inline-start-color","border-inline-start-style","border-inline-start-width","border-inline-style","border-inline-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-start-end-radius","border-start-start-radius","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-align","box-decoration-break","box-direction","box-flex","box-flex-group","box-lines","box-ordinal-group","box-orient","box-pack","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","caret-color","clear","clip","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","color-scheme","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","contain","contain-intrinsic-block-size","contain-intrinsic-height","contain-intrinsic-inline-size","contain-intrinsic-size","contain-intrinsic-width","container","container-name","container-type","content","content-visibility","counter-increment","counter-reset","counter-set","cue","cue-after","cue-before","cursor","cx","cy","direction","display","dominant-baseline","empty-cells","enable-background","field-sizing","fill","fill-opacity","fill-rule","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","flood-color","flood-opacity","flow","font","font-display","font-family","font-feature-settings","font-kerning","font-language-override","font-optical-sizing","font-palette","font-size","font-size-adjust","font-smooth","font-smoothing","font-stretch","font-style","font-synthesis","font-synthesis-position","font-synthesis-small-caps","font-synthesis-style","font-synthesis-weight","font-variant","font-variant-alternates","font-variant-caps","font-variant-east-asian","font-variant-emoji","font-variant-ligatures","font-variant-numeric","font-variant-position","font-variation-settings","font-weight","forced-color-adjust","gap","glyph-orientation-horizontal","glyph-orientation-vertical","grid","grid-area","grid-auto-columns","grid-auto-flow","grid-auto-rows","grid-column","grid-column-end","grid-column-start","grid-gap","grid-row","grid-row-end","grid-row-start","grid-template","grid-template-areas","grid-template-columns","grid-template-rows","hanging-punctuation","height","hyphenate-character","hyphenate-limit-chars","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","initial-letter","initial-letter-align","inline-size","inset","inset-area","inset-block","inset-block-end","inset-block-start","inset-inline","inset-inline-end","inset-inline-start","isolation","justify-content","justify-items","justify-self","kerning","left","letter-spacing","lighting-color","line-break","line-height","line-height-step","list-style","list-style-image","list-style-position","list-style-type","margin","margin-block","margin-block-end","margin-block-start","margin-bottom","margin-inline","margin-inline-end","margin-inline-start","margin-left","margin-right","margin-top","margin-trim","marker","marker-end","marker-mid","marker-start","marks","mask","mask-border","mask-border-mode","mask-border-outset","mask-border-repeat","mask-border-slice","mask-border-source","mask-border-width","mask-clip","mask-composite","mask-image","mask-mode","mask-origin","mask-position","mask-repeat","mask-size","mask-type","masonry-auto-flow","math-depth","math-shift","math-style","max-block-size","max-height","max-inline-size","max-width","min-block-size","min-height","min-inline-size","min-width","mix-blend-mode","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","offset","offset-anchor","offset-distance","offset-path","offset-position","offset-rotate","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-anchor","overflow-block","overflow-clip-margin","overflow-inline","overflow-wrap","overflow-x","overflow-y","overlay","overscroll-behavior","overscroll-behavior-block","overscroll-behavior-inline","overscroll-behavior-x","overscroll-behavior-y","padding","padding-block","padding-block-end","padding-block-start","padding-bottom","padding-inline","padding-inline-end","padding-inline-start","padding-left","padding-right","padding-top","page","page-break-after","page-break-before","page-break-inside","paint-order","pause","pause-after","pause-before","perspective","perspective-origin","place-content","place-items","place-self","pointer-events","position","position-anchor","position-visibility","print-color-adjust","quotes","r","resize","rest","rest-after","rest-before","right","rotate","row-gap","ruby-align","ruby-position","scale","scroll-behavior","scroll-margin","scroll-margin-block","scroll-margin-block-end","scroll-margin-block-start","scroll-margin-bottom","scroll-margin-inline","scroll-margin-inline-end","scroll-margin-inline-start","scroll-margin-left","scroll-margin-right","scroll-margin-top","scroll-padding","scroll-padding-block","scroll-padding-block-end","scroll-padding-block-start","scroll-padding-bottom","scroll-padding-inline","scroll-padding-inline-end","scroll-padding-inline-start","scroll-padding-left","scroll-padding-right","scroll-padding-top","scroll-snap-align","scroll-snap-stop","scroll-snap-type","scroll-timeline","scroll-timeline-axis","scroll-timeline-name","scrollbar-color","scrollbar-gutter","scrollbar-width","shape-image-threshold","shape-margin","shape-outside","shape-rendering","speak","speak-as","src","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tab-size","table-layout","text-align","text-align-all","text-align-last","text-anchor","text-combine-upright","text-decoration","text-decoration-color","text-decoration-line","text-decoration-skip","text-decoration-skip-ink","text-decoration-style","text-decoration-thickness","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-indent","text-justify","text-orientation","text-overflow","text-rendering","text-shadow","text-size-adjust","text-transform","text-underline-offset","text-underline-position","text-wrap","text-wrap-mode","text-wrap-style","timeline-scope","top","touch-action","transform","transform-box","transform-origin","transform-style","transition","transition-behavior","transition-delay","transition-duration","transition-property","transition-timing-function","translate","unicode-bidi","user-modify","user-select","vector-effect","vertical-align","view-timeline","view-timeline-axis","view-timeline-inset","view-timeline-name","view-transition-name","visibility","voice-balance","voice-duration","voice-family","voice-pitch","voice-range","voice-rate","voice-stress","voice-volume","white-space","white-space-collapse","widows","width","will-change","word-break","word-spacing","word-wrap","writing-mode","x","y","z-index","zoom"].sort().reverse();function m(s){const r=i(s);const d=g;const p=c;const E="@[a-z-]+";const h="and or not only";const y="[a-zA-Z-][a-zA-Z0-9_-]*";const v={className:"variable",begin:"(\\$"+y+")\\b",relevance:0};return{name:"SCSS",case_insensitive:true,illegal:"[=/|']",contains:[s.C_LINE_COMMENT_MODE,s.C_BLOCK_COMMENT_MODE,r.CSS_NUMBER_MODE,{className:"selector-id",begin:"#[A-Za-z0-9_-]+",relevance:0},{className:"selector-class",begin:"\\.[A-Za-z0-9_-]+",relevance:0},r.ATTRIBUTE_SELECTOR_MODE,{className:"selector-tag",begin:"\\b("+l.join("|")+")\\b",relevance:0},{className:"selector-pseudo",begin:":("+p.join("|")+")"},{className:"selector-pseudo",begin:":(:)?("+d.join("|")+")"},v,{begin:/\(/,end:/\)/,contains:[r.CSS_NUMBER_MODE]},r.CSS_VARIABLE,{className:"attribute",begin:"\\b("+_.join("|")+")\\b"},{begin:"\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b"},{begin:/:/,end:/[;}{]/,relevance:0,contains:[r.BLOCK_COMMENT,v,r.HEXCOLOR,r.CSS_NUMBER_MODE,s.QUOTE_STRING_MODE,s.APOS_STRING_MODE,r.IMPORTANT,r.FUNCTION_DISPATCH]},{begin:"@(page|font-face)",keywords:{$pattern:E,keyword:"@page @font-face"}},{begin:"@",end:"[{;]",returnBegin:true,keywords:{$pattern:/[a-z-]+/,keyword:h,attribute:u.join(" ")},contains:[{begin:E,className:"keyword"},{begin:/[a-z-]+(?=:)/,className:"attribute"},v,s.QUOTE_STRING_MODE,s.APOS_STRING_MODE,r.HEXCOLOR,r.CSS_NUMBER_MODE]},r.FUNCTION_DISPATCH]}}t(m,"scss");jn=m;return jn}t(Ya,"requireScss");var et;var Wt;function Xa(){if(Wt)return et;Wt=1;function i(e){return{name:"Shell Session",aliases:["console","shellsession"],contains:[{className:"meta.prompt",begin:/^\s{0,3}[/~\w\d[\]()@-]*[>%$#][ ]?/,starts:{end:/[^\\](?=\s*$)/,subLanguage:"bash"}}]}}t(i,"shell");et=i;return et}t(Xa,"requireShell");var nt;var Zt;function Va(){if(Zt)return nt;Zt=1;function i(e){const a=e.regex;const l=e.COMMENT("--","$");const u={scope:"string",variants:[{begin:/'/,end:/'/,contains:[{match:/''/}]}]};const c={begin:/"/,end:/"/,contains:[{match:/""/}]};const g=["true","false","unknown"];const _=["double precision","large object","with timezone","without timezone"];const m=["bigint","binary","blob","boolean","char","character","clob","date","dec","decfloat","decimal","float","int","integer","interval","nchar","nclob","national","numeric","real","row","smallint","time","timestamp","varchar","varying","varbinary"];const s=["add","asc","collation","desc","final","first","last","view"];const r=["abs","acos","all","allocate","alter","and","any","are","array","array_agg","array_max_cardinality","as","asensitive","asin","asymmetric","at","atan","atomic","authorization","avg","begin","begin_frame","begin_partition","between","bigint","binary","blob","boolean","both","by","call","called","cardinality","cascaded","case","cast","ceil","ceiling","char","char_length","character","character_length","check","classifier","clob","close","coalesce","collate","collect","column","commit","condition","connect","constraint","contains","convert","copy","corr","corresponding","cos","cosh","count","covar_pop","covar_samp","create","cross","cube","cume_dist","current","current_catalog","current_date","current_default_transform_group","current_path","current_role","current_row","current_schema","current_time","current_timestamp","current_path","current_role","current_transform_group_for_type","current_user","cursor","cycle","date","day","deallocate","dec","decimal","decfloat","declare","default","define","delete","dense_rank","deref","describe","deterministic","disconnect","distinct","double","drop","dynamic","each","element","else","empty","end","end_frame","end_partition","end-exec","equals","escape","every","except","exec","execute","exists","exp","external","extract","false","fetch","filter","first_value","float","floor","for","foreign","frame_row","free","from","full","function","fusion","get","global","grant","group","grouping","groups","having","hold","hour","identity","in","indicator","initial","inner","inout","insensitive","insert","int","integer","intersect","intersection","interval","into","is","join","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","language","large","last_value","lateral","lead","leading","left","like","like_regex","listagg","ln","local","localtime","localtimestamp","log","log10","lower","match","match_number","match_recognize","matches","max","member","merge","method","min","minute","mod","modifies","module","month","multiset","national","natural","nchar","nclob","new","no","none","normalize","not","nth_value","ntile","null","nullif","numeric","octet_length","occurrences_regex","of","offset","old","omit","on","one","only","open","or","order","out","outer","over","overlaps","overlay","parameter","partition","pattern","per","percent","percent_rank","percentile_cont","percentile_disc","period","portion","position","position_regex","power","precedes","precision","prepare","primary","procedure","ptf","range","rank","reads","real","recursive","ref","references","referencing","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","release","result","return","returns","revoke","right","rollback","rollup","row","row_number","rows","running","savepoint","scope","scroll","search","second","seek","select","sensitive","session_user","set","show","similar","sin","sinh","skip","smallint","some","specific","specifictype","sql","sqlexception","sqlstate","sqlwarning","sqrt","start","static","stddev_pop","stddev_samp","submultiset","subset","substring","substring_regex","succeeds","sum","symmetric","system","system_time","system_user","table","tablesample","tan","tanh","then","time","timestamp","timezone_hour","timezone_minute","to","trailing","translate","translate_regex","translation","treat","trigger","trim","trim_array","true","truncate","uescape","union","unique","unknown","unnest","update","upper","user","using","value","values","value_of","var_pop","var_samp","varbinary","varchar","varying","versioning","when","whenever","where","width_bucket","window","with","within","without","year"];const d=["abs","acos","array_agg","asin","atan","avg","cast","ceil","ceiling","coalesce","corr","cos","cosh","count","covar_pop","covar_samp","cume_dist","dense_rank","deref","element","exp","extract","first_value","floor","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","last_value","lead","listagg","ln","log","log10","lower","max","min","mod","nth_value","ntile","nullif","percent_rank","percentile_cont","percentile_disc","position","position_regex","power","rank","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","row_number","sin","sinh","sqrt","stddev_pop","stddev_samp","substring","substring_regex","sum","tan","tanh","translate","translate_regex","treat","trim","trim_array","unnest","upper","value_of","var_pop","var_samp","width_bucket"];const p=["current_catalog","current_date","current_default_transform_group","current_path","current_role","current_schema","current_transform_group_for_type","current_user","session_user","system_time","system_user","current_time","localtime","current_timestamp","localtimestamp"];const E=["create table","insert into","primary key","foreign key","not null","alter table","add constraint","grouping sets","on overflow","character set","respect nulls","ignore nulls","nulls first","nulls last","depth first","breadth first"];const h=d;const y=[...r,...s].filter(B=>{return!d.includes(B)});const v={scope:"variable",match:/@[a-z0-9][a-z0-9_]*/};const w={scope:"operator",match:/[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0};const T={match:a.concat(/\b/,a.either(...h),/\s*\(/),relevance:0,keywords:{built_in:h}};function A(B){return a.concat(/\b/,a.either(...B.map(P=>{return P.replace(/\s+/,"\\s+")})),/\b/)}t(A,"kws_to_regex");const $={scope:"keyword",match:A(E),relevance:0};function C(B,{exceptions:P,when:k}={}){const D=k;P=P||[];return B.map(K=>{if(K.match(/\|\d+$/)||P.includes(K)){return K}else if(D(K)){return`${K}|0`}else{return K}})}t(C,"reduceRelevancy");return{name:"SQL",case_insensitive:true,illegal:/[{}]|<\//,keywords:{$pattern:/\b[\w\.]+/,keyword:C(y,{when:t(B=>B.length<3,"when")}),literal:g,type:m,built_in:p},contains:[{scope:"type",match:A(_)},$,T,v,u,c,e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,l,w]}}t(i,"sql");nt=i;return nt}t(Va,"requireSql");var tt;var Yt;function Qa(){if(Yt)return tt;Yt=1;function i(k){if(!k)return null;if(typeof k==="string")return k;return k.source}t(i,"source");function e(k){return a("(?=",k,")")}t(e,"lookahead");function a(...k){const D=k.map(K=>i(K)).join("");return D}t(a,"concat");function l(k){const D=k[k.length-1];if(typeof D==="object"&&D.constructor===Object){k.splice(k.length-1,1);return D}else{return{}}}t(l,"stripOptionsFromArgs");function u(...k){const D=l(k);const K="("+(D.capture?"":"?:")+k.map(H=>i(H)).join("|")+")";return K}t(u,"either");const c=t(k=>a(/\b/,k,/\w$/.test(k)?/\b/:/\B/),"keywordWrapper");const g=["Protocol","Type"].map(c);const _=["init","self"].map(c);const m=["Any","Self"];const s=["actor","any","associatedtype","async","await",/as\?/,/as!/,"as","borrowing","break","case","catch","class","consume","consuming","continue","convenience","copy","default","defer","deinit","didSet","distributed","do","dynamic","each","else","enum","extension","fallthrough",/fileprivate\(set\)/,"fileprivate","final","for","func","get","guard","if","import","indirect","infix",/init\?/,/init!/,"inout",/internal\(set\)/,"internal","in","is","isolated","nonisolated","lazy","let","macro","mutating","nonmutating",/open\(set\)/,"open","operator","optional","override","package","postfix","precedencegroup","prefix",/private\(set\)/,"private","protocol",/public\(set\)/,"public","repeat","required","rethrows","return","set","some","static","struct","subscript","super","switch","throws","throw",/try\?/,/try!/,"try","typealias",/unowned\(safe\)/,/unowned\(unsafe\)/,"unowned","var","weak","where","while","willSet"];const r=["false","nil","true"];const d=["assignment","associativity","higherThan","left","lowerThan","none","right"];const p=["#colorLiteral","#column","#dsohandle","#else","#elseif","#endif","#error","#file","#fileID","#fileLiteral","#filePath","#function","#if","#imageLiteral","#keyPath","#line","#selector","#sourceLocation","#warning"];const E=["abs","all","any","assert","assertionFailure","debugPrint","dump","fatalError","getVaList","isKnownUniquelyReferenced","max","min","numericCast","pointwiseMax","pointwiseMin","precondition","preconditionFailure","print","readLine","repeatElement","sequence","stride","swap","swift_unboxFromSwiftValueWithType","transcode","type","unsafeBitCast","unsafeDowncast","withExtendedLifetime","withUnsafeMutablePointer","withUnsafePointer","withVaList","withoutActuallyEscaping","zip"];const h=u(/[/=\-+!*%<>&|^~?]/,/[\u00A1-\u00A7]/,/[\u00A9\u00AB]/,/[\u00AC\u00AE]/,/[\u00B0\u00B1]/,/[\u00B6\u00BB\u00BF\u00D7\u00F7]/,/[\u2016-\u2017]/,/[\u2020-\u2027]/,/[\u2030-\u203E]/,/[\u2041-\u2053]/,/[\u2055-\u205E]/,/[\u2190-\u23FF]/,/[\u2500-\u2775]/,/[\u2794-\u2BFF]/,/[\u2E00-\u2E7F]/,/[\u3001-\u3003]/,/[\u3008-\u3020]/,/[\u3030]/);const y=u(h,/[\u0300-\u036F]/,/[\u1DC0-\u1DFF]/,/[\u20D0-\u20FF]/,/[\uFE00-\uFE0F]/,/[\uFE20-\uFE2F]/);const v=a(h,y,"*");const w=u(/[a-zA-Z_]/,/[\u00A8\u00AA\u00AD\u00AF\u00B2-\u00B5\u00B7-\u00BA]/,/[\u00BC-\u00BE\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF]/,/[\u0100-\u02FF\u0370-\u167F\u1681-\u180D\u180F-\u1DBF]/,/[\u1E00-\u1FFF]/,/[\u200B-\u200D\u202A-\u202E\u203F-\u2040\u2054\u2060-\u206F]/,/[\u2070-\u20CF\u2100-\u218F\u2460-\u24FF\u2776-\u2793]/,/[\u2C00-\u2DFF\u2E80-\u2FFF]/,/[\u3004-\u3007\u3021-\u302F\u3031-\u303F\u3040-\uD7FF]/,/[\uF900-\uFD3D\uFD40-\uFDCF\uFDF0-\uFE1F\uFE30-\uFE44]/,/[\uFE47-\uFEFE\uFF00-\uFFFD]/);const T=u(w,/\d/,/[\u0300-\u036F\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]/);const A=a(w,T,"*");const $=a(/[A-Z]/,T,"*");const C=["attached","autoclosure",a(/convention\(/,u("swift","block","c"),/\)/),"discardableResult","dynamicCallable","dynamicMemberLookup","escaping","freestanding","frozen","GKInspectable","IBAction","IBDesignable","IBInspectable","IBOutlet","IBSegueAction","inlinable","main","nonobjc","NSApplicationMain","NSCopying","NSManaged",a(/objc\(/,A,/\)/),"objc","objcMembers","propertyWrapper","requires_stored_property_inits","resultBuilder","Sendable","testable","UIApplicationMain","unchecked","unknown","usableFromInline","warn_unqualified_access"];const B=["iOS","iOSApplicationExtension","macOS","macOSApplicationExtension","macCatalyst","macCatalystApplicationExtension","watchOS","watchOSApplicationExtension","tvOS","tvOSApplicationExtension","swift"];function P(k){const D={match:/\s+/,relevance:0};const K=k.COMMENT("/\\*","\\*/",{contains:["self"]});const H=[k.C_LINE_COMMENT_MODE,K];const ce={match:[/\./,u(...g,..._)],className:{2:"keyword"}};const te={match:a(/\./,u(...s)),relevance:0};const ae=s.filter(q=>typeof q==="string").concat(["_|0"]);const Y=s.filter(q=>typeof q!=="string").concat(m).map(c);const V={variants:[{className:"keyword",match:u(...Y,..._)}]};const ee={$pattern:u(/\b\w+/,/#\w+/),keyword:ae.concat(p),literal:r};const le=[ce,te,V];const Ce={match:a(/\./,u(...E)),relevance:0};const Ie={className:"built_in",match:a(/\b/,u(...E),/(?=\()/)};const we=[Ce,Ie];const Ae={match:/->/,relevance:0};const De={className:"operator",relevance:0,variants:[{match:v},{match:`\\.(\\.|${y})+`}]};const Ee=[Ae,De];const he="([0-9]_*)+";const Se="([0-9a-fA-F]_*)+";const Q={className:"number",relevance:0,variants:[{match:`\\b(${he})(\\.(${he}))?([eE][+-]?(${he}))?\\b`},{match:`\\b0x(${Se})(\\.(${Se}))?([pP][+-]?(${he}))?\\b`},{match:/\b0o([0-7]_*)+\b/},{match:/\b0b([01]_*)+\b/}]};const X=t((q="")=>({className:"subst",variants:[{match:a(/\\/,q,/[0\\tnr"']/)},{match:a(/\\/,q,/u\{[0-9a-fA-F]{1,8}\}/)}]}),"ESCAPED_CHARACTER");const ue=t((q="")=>({className:"subst",match:a(/\\/,q,/[\t ]*(?:[\r\n]|\r\n)/)}),"ESCAPED_NEWLINE");const ie=t((q="")=>({className:"subst",label:"interpol",begin:a(/\\/,q,/\(/),end:/\)/}),"INTERPOLATION");const ge=t((q="")=>({begin:a(q,/"""/),end:a(/"""/,q),contains:[X(q),ue(q),ie(q)]}),"MULTILINE_STRING");const me=t((q="")=>({begin:a(q,/"/),end:a(/"/,q),contains:[X(q),ie(q)]}),"SINGLE_LINE_STRING");const Ne={className:"string",variants:[ge(),ge("#"),ge("##"),ge("###"),me(),me("#"),me("##"),me("###")]};const He=[k.BACKSLASH_ESCAPE,{begin:/\[/,end:/\]/,relevance:0,contains:[k.BACKSLASH_ESCAPE]}];const cn={begin:/\/[^\s](?=[^/\n]*\/)/,end:/\//,contains:He};const Fe=t(q=>{const Pe=a(q,/\//);const Re=a(/\//,q);return{begin:Pe,end:Re,contains:[...He,{scope:"comment",begin:`#(?!.*${Re})`,end:/$/}]}},"EXTENDED_REGEXP_LITERAL");const We={scope:"regexp",variants:[Fe("###"),Fe("##"),Fe("#"),cn]};const Ze={match:a(/`/,A,/`/)};const ln={className:"variable",match:/\$\d+/};const Ye={className:"variable",match:`\\$${T}+`};const ze=[Ze,ln,Ye];const dn={match:/(@|#(un)?)available/,scope:"keyword",starts:{contains:[{begin:/\(/,end:/\)/,keywords:B,contains:[...Ee,Q,Ne]}]}};const Xe={scope:"keyword",match:a(/@/,u(...C),e(u(/\(/,/\s+/)))};const Te={scope:"meta",match:a(/@/,A)};const Le=[dn,Xe,Te];const pe={match:e(/\b[A-Z]/),relevance:0,contains:[{className:"type",match:a(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/,T,"+")},{className:"type",match:$,relevance:0},{match:/[?!]+/,relevance:0},{match:/\.\.\./,relevance:0},{match:a(/\s+&\s+/,e($)),relevance:0}]};const Ue={begin:/</,end:/>/,keywords:ee,contains:[...H,...le,...Le,Ae,pe]};pe.contains.push(Ue);const Ve={match:a(A,/\s*:/),keywords:"_|0",relevance:0};const Qe={begin:/\(/,end:/\)/,relevance:0,keywords:ee,contains:["self",Ve,...H,We,...le,...we,...Ee,Q,Ne,...ze,...Le,pe]};const $e={begin:/</,end:/>/,keywords:"repeat each",contains:[...H,pe]};const un={begin:u(e(a(A,/\s*:/)),e(a(A,/\s+/,A,/\s*:/))),end:/:/,relevance:0,contains:[{className:"keyword",match:/\b_\b/},{className:"params",match:A}]};const Je={begin:/\(/,end:/\)/,keywords:ee,contains:[un,...H,...le,...Ee,Q,Ne,...Le,pe,Qe],endsParent:true,illegal:/["']/};const gn={match:[/(func|macro)/,/\s+/,u(Ze.match,A,v)],className:{1:"keyword",3:"title.function"},contains:[$e,Je,D],illegal:[/\[/,/%/]};const je={match:[/\b(?:subscript|init[?!]?)/,/\s*(?=[<(])/],className:{1:"keyword"},contains:[$e,Je,D],illegal:/\[|%/};const bn={match:[/operator/,/\s+/,v],className:{1:"keyword",3:"title"}};const pn={begin:[/precedencegroup/,/\s+/,$],className:{1:"keyword",3:"title"},contains:[pe],keywords:[...d,...r],end:/}/};const Ge={match:[/class\b/,/\s+/,/func\b/,/\s+/,/\b[A-Za-z_][A-Za-z0-9_]*\b/],scope:{1:"keyword",3:"keyword",5:"title.function"}};const Ke={match:[/class\b/,/\s+/,/var\b/],scope:{1:"keyword",3:"keyword"}};const en={begin:[/(struct|protocol|class|extension|enum|actor)/,/\s+/,A,/\s*/],beginScope:{1:"keyword",3:"title.class"},keywords:ee,contains:[$e,...le,{begin:/:/,end:/\{/,keywords:ee,contains:[{scope:"title.class.inherited",match:$},...le],relevance:0}]};for(const q of Ne.variants){const Pe=q.contains.find(ke=>ke.label==="interpol");Pe.keywords=ee;const Re=[...le,...we,...Ee,Q,Ne,...ze];Pe.contains=[...Re,{begin:/\(/,end:/\)/,contains:["self",...Re]}]}return{name:"Swift",keywords:ee,contains:[...H,gn,je,Ge,Ke,en,bn,pn,{beginKeywords:"import",end:/$/,contains:[...H],relevance:0},We,...le,...we,...Ee,Q,Ne,...ze,...Le,pe,Qe]}}t(P,"swift");tt=P;return tt}t(Qa,"requireSwift");var at;var Xt;function Ja(){if(Xt)return at;Xt=1;function i(e){const a="true false yes no null";const l="[\\w#;/?:@&=+$,.~*'()[\\]]+";const u={className:"attr",variants:[{begin:/[\w*@][\w*@ :()\./-]*:(?=[ \t]|$)/},{begin:/"[\w*@][\w*@ :()\./-]*":(?=[ \t]|$)/},{begin:/'[\w*@][\w*@ :()\./-]*':(?=[ \t]|$)/}]};const c={className:"template-variable",variants:[{begin:/\{\{/,end:/\}\}/},{begin:/%\{/,end:/\}/}]};const g={className:"string",relevance:0,begin:/'/,end:/'/,contains:[{match:/''/,scope:"char.escape",relevance:0}]};const _={className:"string",relevance:0,variants:[{begin:/"/,end:/"/},{begin:/\S+/}],contains:[e.BACKSLASH_ESCAPE,c]};const m=e.inherit(_,{variants:[{begin:/'/,end:/'/,contains:[{begin:/''/,relevance:0}]},{begin:/"/,end:/"/},{begin:/[^\s,{}[\]]+/}]});const s="[0-9]{4}(-[0-9][0-9]){0,2}";const r="([Tt \\t][0-9][0-9]?(:[0-9][0-9]){2})?";const d="(\\.[0-9]*)?";const p="([ \\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?";const E={className:"number",begin:"\\b"+s+r+d+p+"\\b"};const h={end:",",endsWithParent:true,excludeEnd:true,keywords:a,relevance:0};const y={begin:/\{/,end:/\}/,contains:[h],illegal:"\\n",relevance:0};const v={begin:"\\[",end:"\\]",contains:[h],illegal:"\\n",relevance:0};const w=[u,{className:"meta",begin:"^---\\s*$",relevance:10},{className:"string",begin:"[\\|>]([1-9]?[+-])?[ ]*\\n( +)[^ ][^\\n]*\\n(\\2[^\\n]+\\n?)*"},{begin:"<%[%=-]?",end:"[%-]?%>",subLanguage:"ruby",excludeBegin:true,excludeEnd:true,relevance:0},{className:"type",begin:"!\\w+!"+l},{className:"type",begin:"!<"+l+">"},{className:"type",begin:"!"+l},{className:"type",begin:"!!"+l},{className:"meta",begin:"&"+e.UNDERSCORE_IDENT_RE+"$"},{className:"meta",begin:"\\*"+e.UNDERSCORE_IDENT_RE+"$"},{className:"bullet",begin:"-(?=[ ]|$)",relevance:0},e.HASH_COMMENT_MODE,{beginKeywords:a,keywords:{literal:a}},E,{className:"number",begin:e.C_NUMBER_RE+"\\b",relevance:0},y,v,g,_];const T=[...w];T.pop();T.push(m);h.contains=T;return{name:"YAML",case_insensitive:true,aliases:["yml"],contains:w}}t(i,"yaml");at=i;return at}t(Ja,"requireYaml");var it;var Vt;function ja(){if(Vt)return it;Vt=1;const i="[A-Za-z$_][0-9A-Za-z$_]*";const e=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends","using"];const a=["true","false","null","undefined","NaN","Infinity"];const l=["Object","Function","Boolean","Symbol","Math","Date","Number","BigInt","String","RegExp","Array","Float32Array","Float64Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Int32Array","Uint16Array","Uint32Array","BigInt64Array","BigUint64Array","Set","Map","WeakSet","WeakMap","ArrayBuffer","SharedArrayBuffer","Atomics","DataView","JSON","Promise","Generator","GeneratorFunction","AsyncFunction","Reflect","Proxy","Intl","WebAssembly"];const u=["Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"];const c=["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"];const g=["arguments","this","super","console","window","document","localStorage","sessionStorage","module","global"];const _=[].concat(c,l,u);function m(r){const d=r.regex;const p=t((X,{after:ue})=>{const ie="</"+X[0].slice(1);const ge=X.input.indexOf(ie,ue);return ge!==-1},"hasClosingTag");const E=i;const h={begin:"<>",end:"</>"};const y=/<[A-Za-z0-9\\._:-]+\s*\/>/;const v={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:t((X,ue)=>{const ie=X[0].length+X.index;const ge=X.input[ie];if(ge==="<"||ge===","){ue.ignoreMatch();return}if(ge===">"){if(!p(X,{after:ie})){ue.ignoreMatch()}}let me;const Ne=X.input.substring(ie);if(me=Ne.match(/^\s*=/)){ue.ignoreMatch();return}if(me=Ne.match(/^\s+extends\s+/)){if(me.index===0){ue.ignoreMatch();return}}},"isTrulyOpeningTag")};const w={$pattern:i,keyword:e,literal:a,built_in:_,"variable.language":g};const T="[0-9](_?[0-9])*";const A=`\\.(${T})`;const $=`0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;const C={className:"number",variants:[{begin:`(\\b(${$})((${A})|\\.)?|(${A}))[eE][+-]?(${T})\\b`},{begin:`\\b(${$})\\b((${A})\\b|\\.)?|(${A})\\b`},{begin:`\\b(0|[1-9](_?[0-9])*)n\\b`},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"}],relevance:0};const B={className:"subst",begin:"\\$\\{",end:"\\}",keywords:w,contains:[]};const P={begin:".?html`",end:"",starts:{end:"`",returnEnd:false,contains:[r.BACKSLASH_ESCAPE,B],subLanguage:"xml"}};const k={begin:".?css`",end:"",starts:{end:"`",returnEnd:false,contains:[r.BACKSLASH_ESCAPE,B],subLanguage:"css"}};const D={begin:".?gql`",end:"",starts:{end:"`",returnEnd:false,contains:[r.BACKSLASH_ESCAPE,B],subLanguage:"graphql"}};const K={className:"string",begin:"`",end:"`",contains:[r.BACKSLASH_ESCAPE,B]};const H=r.COMMENT(/\/\*\*(?!\/)/,"\\*/",{relevance:0,contains:[{begin:"(?=@[A-Za-z]+)",relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+"},{className:"type",begin:"\\{",end:"\\}",excludeEnd:true,excludeBegin:true,relevance:0},{className:"variable",begin:E+"(?=\\s*(-)|$)",endsParent:true,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]});const ce={className:"comment",variants:[H,r.C_BLOCK_COMMENT_MODE,r.C_LINE_COMMENT_MODE]};const te=[r.APOS_STRING_MODE,r.QUOTE_STRING_MODE,P,k,D,K,{match:/\$\d+/},C];B.contains=te.concat({begin:/\{/,end:/\}/,keywords:w,contains:["self"].concat(te)});const ae=[].concat(ce,B.contains);const Y=ae.concat([{begin:/(\s*)\(/,end:/\)/,keywords:w,contains:["self"].concat(ae)}]);const V={className:"params",begin:/(\s*)\(/,end:/\)/,excludeBegin:true,excludeEnd:true,keywords:w,contains:Y};const ee={variants:[{match:[/class/,/\s+/,E,/\s+/,/extends/,/\s+/,d.concat(E,"(",d.concat(/\./,E),")*")],scope:{1:"keyword",3:"title.class",5:"keyword",7:"title.class.inherited"}},{match:[/class/,/\s+/,E],scope:{1:"keyword",3:"title.class"}}]};const le={relevance:0,match:d.either(/\bJSON/,/\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/,/\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/,/\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/),className:"title.class",keywords:{_:[...l,...u]}};const Ce={label:"use_strict",className:"meta",relevance:10,begin:/^\s*['"]use (strict|asm)['"]/};const Ie={variants:[{match:[/function/,/\s+/,E,/(?=\s*\()/]},{match:[/function/,/\s*(?=\()/]}],className:{1:"keyword",3:"title.function"},label:"func.def",contains:[V],illegal:/%/};const we={relevance:0,match:/\b[A-Z][A-Z_0-9]+\b/,className:"variable.constant"};function Ae(X){return d.concat("(?!",X.join("|"),")")}t(Ae,"noneOf");const De={match:d.concat(/\b/,Ae([...c,"super","import"].map(X=>`${X}\\s*\\(`)),E,d.lookahead(/\s*\(/)),className:"title.function",relevance:0};const Ee={begin:d.concat(/\./,d.lookahead(d.concat(E,/(?![0-9A-Za-z$_(])/))),end:E,excludeBegin:true,keywords:"prototype",className:"property",relevance:0};const he={match:[/get|set/,/\s+/,E,/(?=\()/],className:{1:"keyword",3:"title.function"},contains:[{begin:/\(\)/},V]};const Se="(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|"+r.UNDERSCORE_IDENT_RE+")\\s*=>";const Q={match:[/const|var|let/,/\s+/,E,/\s*/,/=\s*/,/(async\s*)?/,d.lookahead(Se)],keywords:"async",className:{1:"keyword",3:"title.function"},contains:[V]};return{name:"JavaScript",aliases:["js","jsx","mjs","cjs"],keywords:w,exports:{PARAMS_CONTAINS:Y,CLASS_REFERENCE:le},illegal:/#(?![$_A-z])/,contains:[r.SHEBANG({label:"shebang",binary:"node",relevance:5}),Ce,r.APOS_STRING_MODE,r.QUOTE_STRING_MODE,P,k,D,K,ce,{match:/\$\d+/},C,le,{scope:"attr",match:E+d.lookahead(":"),relevance:0},Q,{begin:"("+r.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",relevance:0,contains:[ce,r.REGEXP_MODE,{className:"function",begin:Se,returnBegin:true,end:"\\s*=>",contains:[{className:"params",variants:[{begin:r.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:true},{begin:/(\s*)\(/,end:/\)/,excludeBegin:true,excludeEnd:true,keywords:w,contains:Y}]}]},{begin:/,/,relevance:0},{match:/\s+/,relevance:0},{variants:[{begin:h.begin,end:h.end},{match:y},{begin:v.begin,"on:begin":v.isTrulyOpeningTag,end:v.end}],subLanguage:"xml",contains:[{begin:v.begin,end:v.end,skip:true,contains:["self"]}]}]},Ie,{beginKeywords:"while if switch catch for"},{begin:"\\b(?!function)"+r.UNDERSCORE_IDENT_RE+"\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",returnBegin:true,label:"func.def",contains:[V,r.inherit(r.TITLE_MODE,{begin:E,className:"title.function"})]},{match:/\.\.\./,relevance:0},Ee,{match:"\\$"+E,relevance:0},{match:[/\bconstructor(?=\s*\()/],className:{1:"title.function"},contains:[V]},De,we,ee,he,{match:/\$[(.]/}]}}t(m,"javascript");function s(r){const d=r.regex;const p=m(r);const E=i;const h=["any","void","number","boolean","string","object","never","symbol","bigint","unknown"];const y={begin:[/namespace/,/\s+/,r.IDENT_RE],beginScope:{1:"keyword",3:"title.class"}};const v={beginKeywords:"interface",end:/\{/,excludeEnd:true,keywords:{keyword:"interface extends",built_in:h},contains:[p.exports.CLASS_REFERENCE]};const w={className:"meta",relevance:10,begin:/^\s*['"]use strict['"]/};const T=["type","interface","public","private","protected","implements","declare","abstract","readonly","enum","override","satisfies"];const A={$pattern:i,keyword:e.concat(T),literal:a,built_in:_.concat(h),"variable.language":g};const $={className:"meta",begin:"@"+E};const C=t((D,K,H)=>{const ce=D.contains.findIndex(te=>te.label===K);if(ce===-1){throw new Error("can not find mode to replace")}D.contains.splice(ce,1,H)},"swapMode");Object.assign(p.keywords,A);p.exports.PARAMS_CONTAINS.push($);const B=p.contains.find(D=>D.scope==="attr");const P=Object.assign({},B,{match:d.concat(E,d.lookahead(/\s*\?:/))});p.exports.PARAMS_CONTAINS.push([p.exports.CLASS_REFERENCE,B,P]);p.contains=p.contains.concat([$,y,v,P]);C(p,"shebang",r.SHEBANG());C(p,"use_strict",w);const k=p.contains.find(D=>D.label==="func.def");k.relevance=0;Object.assign(p,{name:"TypeScript",aliases:["ts","tsx","mts","cts"]});return p}t(s,"typescript");it=s;return it}t(ja,"requireTypescript");var rt;var Qt;function ei(){if(Qt)return rt;Qt=1;function i(e){const a=e.regex;const l={className:"string",begin:/"(""|[^/n])"C\b/};const u={className:"string",begin:/"/,end:/"/,illegal:/\n/,contains:[{begin:/""/}]};const c=/\d{1,2}\/\d{1,2}\/\d{4}/;const g=/\d{4}-\d{1,2}-\d{1,2}/;const _=/(\d|1[012])(:\d+){0,2} *(AM|PM)/;const m=/\d{1,2}(:\d{1,2}){1,2}/;const s={className:"literal",variants:[{begin:a.concat(/# */,a.either(g,c),/ *#/)},{begin:a.concat(/# */,m,/ *#/)},{begin:a.concat(/# */,_,/ *#/)},{begin:a.concat(/# */,a.either(g,c),/ +/,a.either(_,m),/ *#/)}]};const r={className:"number",relevance:0,variants:[{begin:/\b\d[\d_]*((\.[\d_]+(E[+-]?[\d_]+)?)|(E[+-]?[\d_]+))[RFD@!#]?/},{begin:/\b\d[\d_]*((U?[SIL])|[%&])?/},{begin:/&H[\dA-F_]+((U?[SIL])|[%&])?/},{begin:/&O[0-7_]+((U?[SIL])|[%&])?/},{begin:/&B[01_]+((U?[SIL])|[%&])?/}]};const d={className:"label",begin:/^\w+:/};const p=e.COMMENT(/'''/,/$/,{contains:[{className:"doctag",begin:/<\/?/,end:/>/}]});const E=e.COMMENT(null,/$/,{variants:[{begin:/'/},{begin:/([\t ]|^)REM(?=\s)/}]});const h={className:"meta",begin:/[\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\b/,end:/$/,keywords:{keyword:"const disable else elseif enable end externalsource if region then"},contains:[E]};return{name:"Visual Basic .NET",aliases:["vb"],case_insensitive:true,classNameAliases:{label:"symbol"},keywords:{keyword:"addhandler alias aggregate ansi as async assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into iterator join key let lib loop me mid module mustinherit mustoverride mybase myclass namespace narrowing new next notinheritable notoverridable of off on operator option optional order overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly yield",built_in:"addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort",type:"boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort",literal:"true false nothing"},illegal:"//|\\{|\\}|endif|gosub|variant|wend|^\\$ ",contains:[l,u,s,r,d,p,E,h]}}t(i,"vbnet");rt=i;return rt}t(ei,"requireVbnet");var ot;var Jt;function ni(){if(Jt)return ot;Jt=1;function i(e){e.regex;const a=e.COMMENT(/\(;/,/;\)/);a.contains.push("self");const l=e.COMMENT(/;;/,/$/);const u=["anyfunc","block","br","br_if","br_table","call","call_indirect","data","drop","elem","else","end","export","func","global.get","global.set","local.get","local.set","local.tee","get_global","get_local","global","if","import","local","loop","memory","memory.grow","memory.size","module","mut","nop","offset","param","result","return","select","set_global","set_local","start","table","tee_local","then","type","unreachable"];const c={begin:[/(?:func|call|call_indirect)/,/\s+/,/\$[^\s)]+/],className:{1:"keyword",3:"title.function"}};const g={className:"variable",begin:/\$[\w_]+/};const _={match:/(\((?!;)|\))+/,className:"punctuation",relevance:0};const m={className:"number",relevance:0,match:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/};const s={match:/(i32|i64|f32|f64)(?!\.)/,className:"type"};const r={className:"keyword",match:/\b(f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))\b/};const d={match:[/(?:offset|align)/,/\s*/,/=/],className:{1:"keyword",3:"operator"}};return{name:"WebAssembly",keywords:{$pattern:/[\w.]+/,keyword:u},contains:[l,a,d,g,_,c,e.QUOTE_STRING_MODE,s,r,m]}}t(i,"wasm");ot=i;return ot}t(ni,"requireWasm");var st;var jt;function ti(){if(jt)return st;jt=1;var i=ha();i.registerLanguage("xml",Na());i.registerLanguage("bash",ya());i.registerLanguage("c",va());i.registerLanguage("cpp",wa());i.registerLanguage("csharp",Sa());i.registerLanguage("css",Ta());i.registerLanguage("markdown",Oa());i.registerLanguage("diff",Aa());i.registerLanguage("ruby",Ra());i.registerLanguage("go",ka());i.registerLanguage("graphql",Ma());i.registerLanguage("ini",xa());i.registerLanguage("java",Ca());i.registerLanguage("javascript",Ia());i.registerLanguage("json",Da());i.registerLanguage("kotlin",La());i.registerLanguage("less",Ba());i.registerLanguage("lua",Ua());i.registerLanguage("makefile",Pa());i.registerLanguage("perl",Fa());i.registerLanguage("objectivec",za());i.registerLanguage("php",$a());i.registerLanguage("php-template",Ga());i.registerLanguage("plaintext",Ka());i.registerLanguage("python",qa());i.registerLanguage("python-repl",Ha());i.registerLanguage("r",Wa());i.registerLanguage("rust",Za());i.registerLanguage("scss",Ya());i.registerLanguage("shell",Xa());i.registerLanguage("sql",Va());i.registerLanguage("swift",Qa());i.registerLanguage("yaml",Ja());i.registerLanguage("typescript",ja());i.registerLanguage("vbnet",ei());i.registerLanguage("wasm",ni());i.HighlightJS=i;i.default=i;st=i;return st}t(ti,"requireCommon");var ai=ti();const oi=Ea(ai);export{oi as HighlightJS,oi as default};
