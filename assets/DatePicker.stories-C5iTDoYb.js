var C=Object.defineProperty;var t=(e,r)=>C(e,"name",{value:r,configurable:true});import{j as m}from"./jsx-runtime-CGXnEs--.js";import{D as d,d as a}from"./DatePicker-CIo3BEom.js";import{r as u}from"./index-DGnhqvo7.js";import"./iframe-DURURz1S.js";import"../sb-preview/runtime.js";import"./createIsland-fzL0F2Ul.js";import"./_commonjsHelpers-DRKe4gOT.js";import"./validations-DJC0TP_C.js";import"./Input.view-Dtygztdk.js";import"./Label-BmAeSxLe.js";import"./bem-DSWMYwqE.js";const I={title:"prokodo/form/DatePicker",component:d,parameters:{layout:"padded",docs:{description:{component:"A native `<input type='date'>` wrapped with Dayjs parsing, validation and floating label."}}},tags:["autodocs"],argTypes:{name:{control:"text",description:"Unique form field name/id",table:{type:{summary:"string"}}},label:{control:"text",description:"Floating label text",table:{type:{summary:"string"}}},required:{control:"boolean",description:"Mark field as required",table:{type:{summary:"boolean"}}},helperText:{control:"text",description:"Helper or hint text",table:{type:{summary:"string"}}},errorText:{control:"text",description:"Error text to display",table:{type:{summary:"string"}}},format:{control:"text",description:"Dayjs parsing format (defaults to YYYY-MM-DD)",table:{type:{summary:"string"}}},withTime:{control:"boolean",description:"Enable date + time mode (<input type='datetime-local'>).",table:{type:{summary:"boolean"}}},minuteStep:{control:{type:"number",min:1,step:1},description:"Minute granularity for time selection (applies when withTime=true).",table:{type:{summary:"number"}}},minDate:{table:{disable:true}},maxDate:{table:{disable:true}},onChange:{action:"changed",table:{disable:true}},onValidate:{action:"validated",table:{disable:true}}}};const p=t(e=>m.jsx("div",{style:{position:"absolute",left:"50%",top:"50%",transform:"translate(-50%, -50%)"},children:e}),"renderContainer");const s={render:t(e=>{const[r,n]=u.useState(a());return p(m.jsx(d,{...e,value:r,onChange:t(o=>n(a(o)),"onChange")}))},"render"),args:{name:"birthday",label:"Birthday",helperText:"Select your birth date",required:false,format:"YYYY-MM-DD"}};const i={render:t(e=>{const[r,n]=u.useState(null);return p(m.jsx(d,{...e,value:r,onChange:t(o=>n(a(o)),"onChange")}))},"render"),args:{name:"appointment",label:"Appointment Date",helperText:"Between today and 30 days from now",required:true,minDate:a(),maxDate:a().add(30,"day"),format:"YYYY-MM-DD"}};const l={render:t(e=>{const[r,n]=u.useState(a().second(0).millisecond(0));return p(m.jsx(d,{...e,value:r,onChange:t(o=>n(o),"onChange")}))},"render"),args:{name:"meetingAt",label:"Meeting at",helperText:"Pick date & time (15-minute steps)",required:true,withTime:true,minuteStep:15,minDate:a().subtract(1,"hour"),maxDate:a().add(14,"day").hour(18).minute(0).second(0).millisecond(0),format:"YYYY-MM-DDTHH:mm"}};var c,y,g,h,D;s.parameters={...s.parameters,docs:{...(c=s.parameters)==null?void 0:c.docs,source:{originalSource:'{\n  render: args => {\n    const [value, setValue] = useState<Dayjs | null>(dayjs());\n    return renderContainer(<DatePicker {...args} value={value} onChange={value => setValue(dayjs(value))} />);\n  },\n  args: {\n    name: "birthday",\n    label: "Birthday",\n    helperText: "Select your birth date",\n    required: false,\n    format: "YYYY-MM-DD"\n  }\n}',...(g=(y=s.parameters)==null?void 0:y.docs)==null?void 0:g.source},description:{story:"Controlled example: user can pick any date",...(D=(h=s.parameters)==null?void 0:h.docs)==null?void 0:D.description}}};var b,x,f,Y,v;i.parameters={...i.parameters,docs:{...(b=i.parameters)==null?void 0:b.docs,source:{originalSource:'{\n  render: args => {\n    const [value, setValue] = useState<Dayjs | null>(null);\n    return renderContainer(<DatePicker {...args} value={value} onChange={value => setValue(dayjs(value))} />);\n  },\n  args: {\n    name: "appointment",\n    label: "Appointment Date",\n    helperText: "Between today and 30 days from now",\n    required: true,\n    minDate: dayjs(),\n    maxDate: dayjs().add(30, "day"),\n    format: "YYYY-MM-DD"\n  }\n}',...(f=(x=i.parameters)==null?void 0:x.docs)==null?void 0:f.source},description:{story:"With min/max range and required",...(v=(Y=i.parameters)==null?void 0:Y.docs)==null?void 0:v.description}}};var j,w,M,T,S;l.parameters={...l.parameters,docs:{...(j=l.parameters)==null?void 0:j.docs,source:{originalSource:'{\n  render: args => {\n    // Start aligned to minute to avoid odd seconds in the control\n    const [value, setValue] = useState<Dayjs | null>(dayjs().second(0).millisecond(0));\n    return renderContainer(<DatePicker {...args} value={value} onChange={v => setValue((v as Dayjs | null))} />);\n  },\n  args: {\n    name: "meetingAt",\n    label: "Meeting at",\n    helperText: "Pick date & time (15-minute steps)",\n    required: true,\n    withTime: true,\n    minuteStep: 15,\n    // Allow from now minus 1 hour up to two weeks ahead, 18:00 latest\n    minDate: dayjs().subtract(1, "hour"),\n    maxDate: dayjs().add(14, "day").hour(18).minute(0).second(0).millisecond(0),\n    // Important: use datetime format when withTime=true\n    format: "YYYY-MM-DDTHH:mm"\n  }\n}',...(M=(w=l.parameters)==null?void 0:w.docs)==null?void 0:M.source},description:{story:"Date + time, 15-minute steps, with min/max",...(S=(T=l.parameters)==null?void 0:T.docs)==null?void 0:S.description}}};const O=["Default","WithRange","WithTime"];export{s as Default,i as WithRange,l as WithTime,O as __namedExportsOrder,I as default};
