name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Version & Publish
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 💿 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          scope: "@prokodo"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧪 Typecheck, Lint & Test
        run: |
          pnpm run typecheck
          pnpm run lint
          pnpm run test:ci

      - name: 🛠 Build library
        run: pnpm run build

      - name: 🧾 Version packages (if changeset exists)
        run: pnpm changeset version || echo "No version changes"

      - name: 📦 Install updated deps if needed
        run: pnpm install --frozen-lockfile

      - name: ⬆️ Commit and push version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff-index --quiet HEAD || git commit -m "ci: version bump"
          git push

      # --- Trusted Publishing with pnpm (OIDC + provenance, no token) ---
      - name: 🧭 Read package version
        id: pkg
        run: echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: 🚫 Skip if version already on npm
        run: |
          if pnpm view @prokodo/ui@${{ steps.pkg.outputs.version }} version >/dev/null 2>&1; then
            echo "Version @prokodo/ui@${{ steps.pkg.outputs.version }} already published. Skipping."
            exit 0
          fi

      - name: 🚀 Publish to npm (provenance)
        env:
          # Tell the registry to generate a provenance attestation
          NPM_CONFIG_PROVENANCE: "true"
        run: pnpm publish --access public --provenance

      - name: 📘 Build Storybook
        run: pnpm run storybook:build

      - name: 🌐 Deploy Storybook to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./storybook-static
          cname: ui.prokodo.com
